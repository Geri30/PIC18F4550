

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 15 18:40:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 2.05
    12                           ; Generated 20/12/2018 GMT
    13                           ; 
    14                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F4550 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     _LATDbits	set	3980
    46  0000                     _TRISD	set	3989
    47                           
    48                           ; #config settings
    49  0000                     
    50                           	psect	cinit
    51  007EE6                     __pcinit:
    52                           	opt callstack 0
    53  007EE6                     start_initialization:
    54                           	opt callstack 0
    55  007EE6                     __initialization:
    56                           	opt callstack 0
    57  007EE6                     end_of_initialization:
    58                           	opt callstack 0
    59  007EE6                     __end_of__initialization:
    60                           	opt callstack 0
    61  007EE6  0100               	movlb	0
    62  007EE8  EF76  F03F         	goto	_main	;jump to C main() function
    63                           
    64                           	psect	cstackCOMRAM
    65  000001                     __pcstackCOMRAM:
    66                           	opt callstack 0
    67  000001                     ??_main:
    68                           
    69                           ; 1 bytes @ 0x0
    70  000001                     	ds	3
    71  000004                     main@j:
    72                           	opt callstack 0
    73                           
    74                           ; 2 bytes @ 0x3
    75  000004                     	ds	2
    76  000006                     main@j_86:
    77                           	opt callstack 0
    78                           
    79                           ; 2 bytes @ 0x5
    80  000006                     	ds	2
    81  000008                     main@j_88:
    82                           	opt callstack 0
    83                           
    84                           ; 2 bytes @ 0x7
    85  000008                     	ds	2
    86  00000A                     main@j_89:
    87                           	opt callstack 0
    88                           
    89                           ; 2 bytes @ 0x9
    90  00000A                     	ds	2
    91  00000C                     main@i:
    92                           	opt callstack 0
    93                           
    94                           ; 2 bytes @ 0xB
    95  00000C                     	ds	2
    96  00000E                     main@i_87:
    97                           	opt callstack 0
    98                           
    99                           ; 2 bytes @ 0xD
   100  00000E                     	ds	2
   101                           
   102 ;;
   103 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   104 ;;
   105 ;; *************** function _main *****************
   106 ;; Defined at:
   107 ;;		line 14 in file "intensidad.c"
   108 ;; Parameters:    Size  Location     Type
   109 ;;		None
   110 ;; Auto vars:     Size  Location     Type
   111 ;;  j               2    9[COMRAM] int 
   112 ;;  j               2    7[COMRAM] int 
   113 ;;  j               2    5[COMRAM] int 
   114 ;;  j               2    3[COMRAM] int 
   115 ;;  i               2   13[COMRAM] int 
   116 ;;  i               2   11[COMRAM] int 
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   126 ;;      Params:         0       0       0       0       0       0       0       0       0
   127 ;;      Locals:        12       0       0       0       0       0       0       0       0
   128 ;;      Temps:          3       0       0       0       0       0       0       0       0
   129 ;;      Totals:        15       0       0       0       0       0       0       0       0
   130 ;;Total ram usage:       15 bytes
   131 ;; This function calls:
   132 ;;		Nothing
   133 ;; This function is called by:
   134 ;;		Startup code after reset
   135 ;; This function uses a non-reentrant model
   136 ;;
   137                           
   138                           	psect	text0
   139  007EEC                     __ptext0:
   140                           	opt callstack 0
   141  007EEC                     _main:
   142                           	opt callstack 31
   143                           
   144                           ;intensidad.c: 16:     TRISD=0xFC;
   145                           
   146                           ;incstack = 0
   147  007EEC  0EFC               	movlw	252
   148  007EEE  6E95               	movwf	3989,c	;volatile
   149  007EF0                     l11:
   150                           
   151                           ;intensidad.c: 19:         for(int i=0;i<255;i++){
   152  007EF0  0E00               	movlw	0
   153  007EF2  6E0D               	movwf	main@i+1,c
   154  007EF4  0E00               	movlw	0
   155  007EF6  6E0C               	movwf	main@i,c
   156  007EF8                     l12:
   157                           
   158                           ;intensidad.c: 20:             LATDbits.LD0=1;
   159  007EF8  808C               	bsf	3980,0,c	;volatile
   160                           
   161                           ;intensidad.c: 21:             LATDbits.LD1=0;
   162  007EFA  928C               	bcf	3980,1,c	;volatile
   163                           
   164                           ;intensidad.c: 22:             for(int j=0;j<i;j++){
   165  007EFC  0E00               	movlw	0
   166  007EFE  6E05               	movwf	main@j+1,c
   167  007F00  0E00               	movlw	0
   168  007F02  6E04               	movwf	main@j,c
   169  007F04  D006               	goto	l14
   170  007F06                     l714:
   171                           
   172                           ;intensidad.c: 23:                 _delay((unsigned long)((10)*(4000000UL/4000000.0)));
   173  007F06  0E03               	movlw	3
   174  007F08                     u77:
   175  007F08  2EE8               	decfsz	wreg,f,c
   176  007F0A  D7FE               	bra	u77
   177  007F0C  F000               	nop	
   178                           
   179                           ;intensidad.c: 24:             }
   180  007F0E  4A04               	infsnz	main@j,f,c
   181  007F10  2A05               	incf	main@j+1,f,c
   182  007F12                     l14:
   183  007F12  500C               	movf	main@i,w,c
   184  007F14  5C04               	subwf	main@j,w,c
   185  007F16  5005               	movf	main@j+1,w,c
   186  007F18  0A80               	xorlw	128
   187  007F1A  6E01               	movwf	??_main& (0+255),c
   188  007F1C  500D               	movf	main@i+1,w,c
   189  007F1E  0A80               	xorlw	128
   190  007F20  5801               	subwfb	??_main& (0+255),w,c
   191  007F22  A0D8               	btfss	status,0,c
   192  007F24  D7F0               	goto	l714
   193                           
   194                           ;intensidad.c: 25:             LATDbits.LD0=0;
   195  007F26  908C               	bcf	3980,0,c	;volatile
   196                           
   197                           ;intensidad.c: 26:             LATDbits.LD1=1;
   198  007F28  828C               	bsf	3980,1,c	;volatile
   199                           
   200                           ;intensidad.c: 27:             for(int j=0;j<255-i;j++){
   201  007F2A  0E00               	movlw	0
   202  007F2C  6E07               	movwf	main@j_86+1,c
   203  007F2E  0E00               	movlw	0
   204  007F30  6E06               	movwf	main@j_86,c
   205  007F32  D006               	goto	l17
   206  007F34                     l720:
   207                           
   208                           ;intensidad.c: 28:                 _delay((unsigned long)((10)*(4000000UL/4000000.0)));
   209  007F34  0E03               	movlw	3
   210  007F36                     u87:
   211  007F36  2EE8               	decfsz	wreg,f,c
   212  007F38  D7FE               	bra	u87
   213  007F3A  F000               	nop	
   214                           
   215                           ;intensidad.c: 29:             }
   216  007F3C  4A06               	infsnz	main@j_86,f,c
   217  007F3E  2A07               	incf	main@j_86+1,f,c
   218  007F40                     l17:
   219  007F40  0EFF               	movlw	255
   220  007F42  6E01               	movwf	??_main& (0+255),c
   221  007F44  0E00               	movlw	0
   222  007F46  6E02               	movwf	(??_main+1)& (0+255),c
   223  007F48  500C               	movf	main@i,w,c
   224  007F4A  5E01               	subwf	??_main,f,c
   225  007F4C  500D               	movf	main@i+1,w,c
   226  007F4E  5A02               	subwfb	??_main+1,f,c
   227  007F50  5001               	movf	??_main,w,c
   228  007F52  5C06               	subwf	main@j_86,w,c
   229  007F54  5007               	movf	main@j_86+1,w,c
   230  007F56  0A80               	xorlw	128
   231  007F58  6E03               	movwf	(??_main+2)& (0+255),c
   232  007F5A  5002               	movf	??_main+1,w,c
   233  007F5C  0A80               	xorlw	128
   234  007F5E  5803               	subwfb	(??_main+2)& (0+255),w,c
   235  007F60  A0D8               	btfss	status,0,c
   236  007F62  D7E8               	goto	l720
   237                           
   238                           ;intensidad.c: 30:         }
   239  007F64  4A0C               	infsnz	main@i,f,c
   240  007F66  2A0D               	incf	main@i+1,f,c
   241  007F68  BE0D               	btfsc	main@i+1,7,c
   242  007F6A  D7C6               	goto	l12
   243  007F6C  500D               	movf	main@i+1,w,c
   244  007F6E  E103               	bnz	u30
   245  007F70  280C               	incf	main@i,w,c
   246  007F72  A0D8               	btfss	status,0,c
   247  007F74  D7C1               	goto	l12
   248  007F76                     u30:
   249                           
   250                           ;intensidad.c: 32:         for(int i=0;i<255;i++){
   251  007F76  0E00               	movlw	0
   252  007F78  6E0F               	movwf	main@i_87+1,c
   253  007F7A  0E00               	movlw	0
   254  007F7C  6E0E               	movwf	main@i_87,c
   255  007F7E                     l20:
   256                           
   257                           ;intensidad.c: 33:             LATDbits.LD0=0;
   258  007F7E  908C               	bcf	3980,0,c	;volatile
   259                           
   260                           ;intensidad.c: 34:             LATDbits.LD1=1;
   261  007F80  828C               	bsf	3980,1,c	;volatile
   262                           
   263                           ;intensidad.c: 35:             for(int j=0;j<i;j++){
   264  007F82  0E00               	movlw	0
   265  007F84  6E09               	movwf	main@j_88+1,c
   266  007F86  0E00               	movlw	0
   267  007F88  6E08               	movwf	main@j_88,c
   268  007F8A  D006               	goto	l22
   269  007F8C                     l736:
   270                           
   271                           ;intensidad.c: 36:                 _delay((unsigned long)((10)*(4000000UL/4000000.0)));
   272  007F8C  0E03               	movlw	3
   273  007F8E                     u97:
   274  007F8E  2EE8               	decfsz	wreg,f,c
   275  007F90  D7FE               	bra	u97
   276  007F92  F000               	nop	
   277                           
   278                           ;intensidad.c: 37:             }
   279  007F94  4A08               	infsnz	main@j_88,f,c
   280  007F96  2A09               	incf	main@j_88+1,f,c
   281  007F98                     l22:
   282  007F98  500E               	movf	main@i_87,w,c
   283  007F9A  5C08               	subwf	main@j_88,w,c
   284  007F9C  5009               	movf	main@j_88+1,w,c
   285  007F9E  0A80               	xorlw	128
   286  007FA0  6E01               	movwf	??_main& (0+255),c
   287  007FA2  500F               	movf	main@i_87+1,w,c
   288  007FA4  0A80               	xorlw	128
   289  007FA6  5801               	subwfb	??_main& (0+255),w,c
   290  007FA8  A0D8               	btfss	status,0,c
   291  007FAA  D7F0               	goto	l736
   292                           
   293                           ;intensidad.c: 38:             LATDbits.LD0=1;
   294  007FAC  808C               	bsf	3980,0,c	;volatile
   295                           
   296                           ;intensidad.c: 39:             LATDbits.LD1=0;
   297  007FAE  928C               	bcf	3980,1,c	;volatile
   298                           
   299                           ;intensidad.c: 40:             for(int j=0;j<255-i;j++){
   300  007FB0  0E00               	movlw	0
   301  007FB2  6E0B               	movwf	main@j_89+1,c
   302  007FB4  0E00               	movlw	0
   303  007FB6  6E0A               	movwf	main@j_89,c
   304  007FB8  D006               	goto	l25
   305  007FBA                     l742:
   306                           
   307                           ;intensidad.c: 41:                 _delay((unsigned long)((10)*(4000000UL/4000000.0)));
   308  007FBA  0E03               	movlw	3
   309  007FBC                     u107:
   310  007FBC  2EE8               	decfsz	wreg,f,c
   311  007FBE  D7FE               	bra	u107
   312  007FC0  F000               	nop	
   313                           
   314                           ;intensidad.c: 42:             }
   315  007FC2  4A0A               	infsnz	main@j_89,f,c
   316  007FC4  2A0B               	incf	main@j_89+1,f,c
   317  007FC6                     l25:
   318  007FC6  0EFF               	movlw	255
   319  007FC8  6E01               	movwf	??_main& (0+255),c
   320  007FCA  0E00               	movlw	0
   321  007FCC  6E02               	movwf	(??_main+1)& (0+255),c
   322  007FCE  500E               	movf	main@i_87,w,c
   323  007FD0  5E01               	subwf	??_main,f,c
   324  007FD2  500F               	movf	main@i_87+1,w,c
   325  007FD4  5A02               	subwfb	??_main+1,f,c
   326  007FD6  5001               	movf	??_main,w,c
   327  007FD8  5C0A               	subwf	main@j_89,w,c
   328  007FDA  500B               	movf	main@j_89+1,w,c
   329  007FDC  0A80               	xorlw	128
   330  007FDE  6E03               	movwf	(??_main+2)& (0+255),c
   331  007FE0  5002               	movf	??_main+1,w,c
   332  007FE2  0A80               	xorlw	128
   333  007FE4  5803               	subwfb	(??_main+2)& (0+255),w,c
   334  007FE6  A0D8               	btfss	status,0,c
   335  007FE8  D7E8               	goto	l742
   336                           
   337                           ;intensidad.c: 43:         }
   338  007FEA  4A0E               	infsnz	main@i_87,f,c
   339  007FEC  2A0F               	incf	main@i_87+1,f,c
   340  007FEE  BE0F               	btfsc	main@i_87+1,7,c
   341  007FF0  D7C6               	goto	l20
   342  007FF2  500F               	movf	main@i_87+1,w,c
   343  007FF4  E104               	bnz	u60
   344  007FF6  280E               	incf	main@i_87,w,c
   345  007FF8  B0D8               	btfsc	status,0,c
   346  007FFA  D77A               	goto	l11
   347  007FFC  D7C0               	goto	l20
   348  007FFE                     u60:
   349  007FFE  D778               	goto	l11
   350  008000                     __end_of_main:
   351                           	opt callstack 0
   352  0000                     
   353                           	psect	rparam
   354  0000                     tosu	equ	0xFFF
   355                           tosh	equ	0xFFE
   356                           tosl	equ	0xFFD
   357                           stkptr	equ	0xFFC
   358                           pclatu	equ	0xFFB
   359                           pclath	equ	0xFFA
   360                           pcl	equ	0xFF9
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           prodh	equ	0xFF4
   366                           prodl	equ	0xFF3
   367                           indf0	equ	0xFEF
   368                           postinc0	equ	0xFEE
   369                           postdec0	equ	0xFED
   370                           preinc0	equ	0xFEC
   371                           plusw0	equ	0xFEB
   372                           fsr0h	equ	0xFEA
   373                           fsr0l	equ	0xFE9
   374                           wreg	equ	0xFE8
   375                           indf1	equ	0xFE7
   376                           postinc1	equ	0xFE6
   377                           postdec1	equ	0xFE5
   378                           preinc1	equ	0xFE4
   379                           plusw1	equ	0xFE3
   380                           fsr1h	equ	0xFE2
   381                           fsr1l	equ	0xFE1
   382                           bsr	equ	0xFE0
   383                           indf2	equ	0xFDF
   384                           postinc2	equ	0xFDE
   385                           postdec2	equ	0xFDD
   386                           preinc2	equ	0xFDC
   387                           plusw2	equ	0xFDB
   388                           fsr2h	equ	0xFDA
   389                           fsr2l	equ	0xFD9
   390                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     180
                                              0 COMRAM    15    15      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      F       F       1       15.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 15 18:40:34 2019

                     l11 7EF0                       l20 7F7E                       l12 7EF8  
                     l22 7F98                       l14 7F12                       l25 7FC6  
                     l17 7F40                       u30 7F76                       u60 7FFE  
                     u77 7F08                       u87 7F36                       u97 7F8E  
                    l720 7F34                      l714 7F06                      l742 7FBA  
                    l736 7F8C                      u107 7FBC             __CFG_BOR$OFF 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
           __CFG_PWRT$ON 000000                     _main 7EEC                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _TRISD 000F95  
                  main@i 000C                    main@j 0004                    status 000FD8  
        __initialization 7EE6             __end_of_main 8000                   ??_main 0001  
          __activetblptr 000000               __accesstop 0060  __end_of__initialization 7EE6  
        __CFG_PBADEN$OFF 000000          __CFG_FOSC$XT_XT 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7EE6                  __ramtop 0800                  __ptext0 7EEC  
   end_of_initialization 7EE6      start_initialization 7EE6                 _LATDbits 000F8C  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0114  
               main@i_87 000E                 main@j_86 0006                 main@j_88 0008  
               main@j_89 000A  
