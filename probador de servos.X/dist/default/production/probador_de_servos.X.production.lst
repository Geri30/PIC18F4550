

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 17 07:55:08 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           ; Version 2.05
    40                           ; Generated 20/12/2018 GMT
    41                           ; 
    42                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     _ADRESL	set	4035
    74  0000                     _ADCON0bits	set	4034
    75  0000                     _ADCON2	set	4032
    76  0000                     _ADCON0	set	4034
    77  0000                     _ADCON1	set	4033
    78  0000                     _TRISB	set	3987
    79  0000                     _TRISE	set	3990
    80  0000                     _TRISA	set	3986
    81  0000                     _INTCONbits	set	4082
    82  0000                     _TMR0L	set	4054
    83  0000                     _TMR0H	set	4055
    84  0000                     _PORTEbits	set	3972
    85  0000                     _LATEbits	set	3981
    86  0000                     _INTCON	set	4082
    87  0000                     _T0CON	set	4053
    88  0000                     _TRISEbits	set	3990
    89  0000                     _PORTD	set	3971
    90  0000                     _LATD	set	3980
    91  0000                     _TRISD	set	3989
    92  0000                     _LATDbits	set	3980
    93  0000                     _ADRESH	set	4036
    94                           
    95                           	psect	smallconst
    96  000800                     __psmallconst:
    97                           	opt callstack 0
    98  000800  00                 	db	0
    99  000801                     STR_1:
   100  000801  41                 	db	65	;'A'
   101  000802  44                 	db	68	;'D'
   102  000803  43                 	db	67	;'C'
   103  000804  3A                 	db	58	;':'
   104  000805  00                 	db	0
   105  000806                     STR_2:
   106  000806  54                 	db	84	;'T'
   107  000807  4F                 	db	79	;'O'
   108  000808  4E                 	db	78	;'N'
   109  000809  3A                 	db	58	;':'
   110  00080A  00                 	db	0
   111  00080B                     STR_3:
   112  00080B  49                 	db	73	;'I'
   113  00080C  3A                 	db	58	;':'
   114  00080D  00                 	db	0
   115  00080E                     STR_4:
   116  00080E  4F                 	db	79	;'O'
   117  00080F  3A                 	db	58	;':'
   118  000810  00                 	db	0
   119                           
   120                           ; #config settings
   121  000811  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           	psect	cinit
   124  001974                     __pcinit:
   125                           	opt callstack 0
   126  001974                     start_initialization:
   127                           	opt callstack 0
   128  001974                     __initialization:
   129                           	opt callstack 0
   130                           
   131                           ; Clear objects allocated to COMRAM (32 bytes)
   132  001974  EE00  F033         	lfsr	0,__pbssCOMRAM
   133  001978  0E20               	movlw	32
   134  00197A                     clear_0:
   135  00197A  6AEE               	clrf	postinc0,c
   136  00197C  06E8               	decf	wreg,f,c
   137  00197E  E1FD               	bnz	clear_0
   138  001980                     end_of_initialization:
   139                           	opt callstack 0
   140  001980                     __end_of__initialization:
   141                           	opt callstack 0
   142  001980  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   143  001982  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   144  001984  0E00               	movlw	low (__Lmediumconst shr (0+16))
   145  001986  6EF8               	movwf	tblptru,c
   146  001988  0100               	movlb	0
   147  00198A  EF1F  F008         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMRAM
   150  000033                     __pbssCOMRAM:
   151                           	opt callstack 0
   152  000033                     _pre_cta_off:
   153                           	opt callstack 0
   154  000033                     	ds	4
   155  000037                     _pre_cta_on:
   156                           	opt callstack 0
   157  000037                     	ds	4
   158  00003B                     _resul:
   159                           	opt callstack 0
   160  00003B                     	ds	2
   161  00003D                     _cta_off:
   162                           	opt callstack 0
   163  00003D                     	ds	2
   164  00003F                     _cta_on:
   165                           	opt callstack 0
   166  00003F                     	ds	2
   167  000041                     _temporal3:
   168                           	opt callstack 0
   169  000041                     	ds	2
   170  000043                     _temporal2:
   171                           	opt callstack 0
   172  000043                     	ds	2
   173  000045                     _temporal:
   174                           	opt callstack 0
   175  000045                     	ds	2
   176  000047                     _diguni:
   177                           	opt callstack 0
   178  000047                     	ds	2
   179  000049                     _digdec:
   180                           	opt callstack 0
   181  000049                     	ds	2
   182  00004B                     _digcen:
   183                           	opt callstack 0
   184  00004B                     	ds	2
   185  00004D                     _digmil:
   186                           	opt callstack 0
   187  00004D                     	ds	2
   188  00004F                     _digdmi:
   189                           	opt callstack 0
   190  00004F                     	ds	2
   191  000051                     _cta_lsb:
   192                           	opt callstack 0
   193  000051                     	ds	1
   194  000052                     _cta_msb:
   195                           	opt callstack 0
   196  000052                     	ds	1
   197                           
   198                           	psect	cstackCOMRAM
   199  000001                     __pcstackCOMRAM:
   200                           	opt callstack 0
   201  000001                     ??_ADC_CONFIG:
   202  000001                     ?_ADC_CONVERTIR:
   203                           	opt callstack 0
   204  000001                     ?___wmul:
   205                           	opt callstack 0
   206  000001                     ?___awdiv:
   207                           	opt callstack 0
   208  000001                     ?___lwdiv:
   209                           	opt callstack 0
   210  000001                     ?___fladd:
   211                           	opt callstack 0
   212  000001                     ?___fltol:
   213                           	opt callstack 0
   214  000001                     ?___xxtofl:
   215                           	opt callstack 0
   216  000001                     ENVIA_NIBBLE@dato:
   217                           	opt callstack 0
   218  000001                     LEER_LCD@aux:
   219                           	opt callstack 0
   220  000001                     ___wmul@multiplier:
   221                           	opt callstack 0
   222  000001                     ___awdiv@dividend:
   223                           	opt callstack 0
   224  000001                     ___lwdiv@dividend:
   225                           	opt callstack 0
   226  000001                     ___fltol@f1:
   227                           	opt callstack 0
   228  000001                     ___fladd@b:
   229                           	opt callstack 0
   230  000001                     ___xxtofl@val:
   231                           	opt callstack 0
   232                           
   233                           ; 4 bytes @ 0x0
   234  000001                     	ds	1
   235  000002                     ENVIA_CHAR@dato:
   236                           	opt callstack 0
   237  000002                     ENVIA_LCD_CMD@dato:
   238                           	opt callstack 0
   239                           
   240                           ; 1 bytes @ 0x1
   241  000002                     	ds	1
   242  000003                     ??_ADC_CONVERTIR:
   243  000003                     ENVIA_CHAR@aux:
   244                           	opt callstack 0
   245  000003                     ENVIA_LCD_CMD@aux:
   246                           	opt callstack 0
   247  000003                     ADC_CONFIG@canal:
   248                           	opt callstack 0
   249  000003                     ___wmul@multiplicand:
   250                           	opt callstack 0
   251  000003                     ___awdiv@divisor:
   252                           	opt callstack 0
   253  000003                     ___lwdiv@divisor:
   254                           	opt callstack 0
   255                           
   256                           ; 2 bytes @ 0x2
   257  000003                     	ds	1
   258  000004                     ??_LCD_CONFIG:
   259  000004                     POS_CURSOR@columna:
   260                           	opt callstack 0
   261  000004                     CURSOR_ONOFF@estado:
   262                           	opt callstack 0
   263  000004                     ESCRIBE_MENSAJE@cadena:
   264                           	opt callstack 0
   265  000004                     ADC_CONVERTIR@num:
   266                           	opt callstack 0
   267                           
   268                           ; 2 bytes @ 0x3
   269  000004                     	ds	1
   270  000005                     ??___fltol:
   271  000005                     ??___xxtofl:
   272  000005                     POS_CURSOR@fila:
   273                           	opt callstack 0
   274  000005                     ___awdiv@counter:
   275                           	opt callstack 0
   276  000005                     ___wmul@product:
   277                           	opt callstack 0
   278  000005                     ___lwdiv@quotient:
   279                           	opt callstack 0
   280  000005                     ___fladd@a:
   281                           	opt callstack 0
   282                           
   283                           ; 4 bytes @ 0x4
   284  000005                     	ds	1
   285  000006                     ESCRIBE_MENSAJE@tam:
   286                           	opt callstack 0
   287  000006                     ___awdiv@sign:
   288                           	opt callstack 0
   289                           
   290                           ; 1 bytes @ 0x5
   291  000006                     	ds	1
   292  000007                     ??_ESCRIBE_MENSAJE:
   293  000007                     ___lwdiv@counter:
   294                           	opt callstack 0
   295  000007                     ___awdiv@quotient:
   296                           	opt callstack 0
   297                           
   298                           ; 2 bytes @ 0x6
   299  000007                     	ds	2
   300  000009                     ??___fladd:
   301  000009                     ESCRIBE_MENSAJE@i:
   302                           	opt callstack 0
   303  000009                     ___fltol@sign1:
   304                           	opt callstack 0
   305  000009                     ___xxtofl@sign:
   306                           	opt callstack 0
   307  000009                     conviertemon@contadoron:
   308                           	opt callstack 0
   309                           
   310                           ; 2 bytes @ 0x8
   311  000009                     	ds	1
   312  00000A                     ___fltol@exp1:
   313                           	opt callstack 0
   314  00000A                     ___xxtofl@exp:
   315                           	opt callstack 0
   316                           
   317                           ; 1 bytes @ 0x9
   318  00000A                     	ds	1
   319  00000B                     ___xxtofl@arg:
   320                           	opt callstack 0
   321                           
   322                           ; 4 bytes @ 0xA
   323  00000B                     	ds	2
   324  00000D                     ___fladd@signs:
   325                           	opt callstack 0
   326                           
   327                           ; 1 bytes @ 0xC
   328  00000D                     	ds	1
   329  00000E                     ___fladd@aexp:
   330                           	opt callstack 0
   331                           
   332                           ; 1 bytes @ 0xD
   333  00000E                     	ds	1
   334  00000F                     ?___flmul:
   335                           	opt callstack 0
   336  00000F                     ___fladd@bexp:
   337                           	opt callstack 0
   338  00000F                     ___flmul@b:
   339                           	opt callstack 0
   340                           
   341                           ; 4 bytes @ 0xE
   342  00000F                     	ds	1
   343  000010                     ___fladd@grs:
   344                           	opt callstack 0
   345                           
   346                           ; 1 bytes @ 0xF
   347  000010                     	ds	3
   348  000013                     ___flmul@a:
   349                           	opt callstack 0
   350                           
   351                           ; 4 bytes @ 0x12
   352  000013                     	ds	4
   353  000017                     ??___flmul:
   354                           
   355                           ; 1 bytes @ 0x16
   356  000017                     	ds	4
   357  00001B                     ___flmul@sign:
   358                           	opt callstack 0
   359                           
   360                           ; 1 bytes @ 0x1A
   361  00001B                     	ds	1
   362  00001C                     ___flmul@grs:
   363                           	opt callstack 0
   364                           
   365                           ; 4 bytes @ 0x1B
   366  00001C                     	ds	4
   367  000020                     ___flmul@aexp:
   368                           	opt callstack 0
   369                           
   370                           ; 1 bytes @ 0x1F
   371  000020                     	ds	1
   372  000021                     ___flmul@bexp:
   373                           	opt callstack 0
   374                           
   375                           ; 1 bytes @ 0x20
   376  000021                     	ds	1
   377  000022                     ___flmul@prod:
   378                           	opt callstack 0
   379                           
   380                           ; 4 bytes @ 0x21
   381  000022                     	ds	4
   382  000026                     ___flmul@temp:
   383                           	opt callstack 0
   384                           
   385                           ; 2 bytes @ 0x25
   386  000026                     	ds	2
   387  000028                     ?___flsub:
   388                           	opt callstack 0
   389  000028                     ___flsub@b:
   390                           	opt callstack 0
   391                           
   392                           ; 4 bytes @ 0x27
   393  000028                     	ds	4
   394  00002C                     ___flsub@a:
   395                           	opt callstack 0
   396                           
   397                           ; 4 bytes @ 0x2B
   398  00002C                     	ds	4
   399  000030                     calculon@blablabla:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x2F
   403  000030                     	ds	2
   404  000032                     ??_main:
   405                           
   406                           ; 1 bytes @ 0x31
   407  000032                     	ds	1
   408                           
   409 ;;
   410 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   411 ;;
   412 ;; *************** function _main *****************
   413 ;; Defined at:
   414 ;;		line 68 in file "servo con tmr0.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;		None
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   428 ;;      Params:         0       0       0       0       0       0       0       0       0
   429 ;;      Locals:         0       0       0       0       0       0       0       0       0
   430 ;;      Temps:          1       0       0       0       0       0       0       0       0
   431 ;;      Totals:         1       0       0       0       0       0       0       0       0
   432 ;;Total ram usage:        1 bytes
   433 ;; Hardware stack levels required when called:    4
   434 ;; This function calls:
   435 ;;		_ADC_CONFIG
   436 ;;		_ADC_CONVERTIR
   437 ;;		_BORRAR_LCD
   438 ;;		_CURSOR_HOME
   439 ;;		_CURSOR_ONOFF
   440 ;;		_ENVIA_CHAR
   441 ;;		_ESCRIBE_MENSAJE
   442 ;;		_LCD_CONFIG
   443 ;;		_POS_CURSOR
   444 ;;		_calculon
   445 ;;		_calculon2
   446 ;;		_conviertemon
   447 ;; This function is called by:
   448 ;;		Startup code after reset
   449 ;; This function uses a non-reentrant model
   450 ;;
   451                           
   452                           	psect	text0
   453  00103E                     __ptext0:
   454                           	opt callstack 0
   455  00103E                     _main:
   456                           	opt callstack 27
   457                           
   458                           ;servo con tmr0.c: 69:     ADC_CONFIG(0);
   459                           
   460                           ;incstack = 0
   461  00103E  0E00               	movlw	0
   462  001040  ECB9  F00A         	call	_ADC_CONFIG
   463                           
   464                           ;servo con tmr0.c: 70:     TRISEbits.RE0 = 0;
   465  001044  9096               	bcf	3990,0,c	;volatile
   466                           
   467                           ;servo con tmr0.c: 71:     T0CON = 0x81;
   468  001046  0E81               	movlw	129
   469  001048  6ED5               	movwf	4053,c	;volatile
   470                           
   471                           ;servo con tmr0.c: 72:     INTCON = 0xA0;
   472  00104A  0EA0               	movlw	160
   473  00104C  6EF2               	movwf	4082,c	;volatile
   474                           
   475                           ;servo con tmr0.c: 73:     TRISD = 0x00;
   476  00104E  0E00               	movlw	0
   477  001050  6E95               	movwf	3989,c	;volatile
   478                           
   479                           ;servo con tmr0.c: 74:     LCD_CONFIG();
   480  001052  EC84  F00B         	call	_LCD_CONFIG	;wreg free
   481                           
   482                           ;servo con tmr0.c: 75:     _delay((unsigned long)((10)*(48000000UL/4000.0)));
   483  001056  0E9C               	movlw	156
   484  001058  6E32               	movwf	??_main& (0+255),c
   485  00105A  0ED7               	movlw	215
   486  00105C                     u1867:
   487  00105C  2EE8               	decfsz	wreg,f,c
   488  00105E  D7FE               	bra	u1867
   489  001060  2E32               	decfsz	??_main& (0+255),f,c
   490  001062  D7FC               	bra	u1867
   491  001064  F000               	nop	
   492                           
   493                           ;servo con tmr0.c: 76:     BORRAR_LCD();
   494  001066  ECCB  F00C         	call	_BORRAR_LCD	;wreg free
   495                           
   496                           ;servo con tmr0.c: 77:     CURSOR_ONOFF(1);
   497  00106A  0E01               	movlw	1
   498  00106C  EC9E  F00C         	call	_CURSOR_ONOFF
   499                           
   500                           ;servo con tmr0.c: 78:     CURSOR_HOME();
   501  001070  ECC7  F00C         	call	_CURSOR_HOME	;wreg free
   502                           
   503                           ;servo con tmr0.c: 79:     ESCRIBE_MENSAJE("ADC:", 4);
   504  001074  0E01               	movlw	low STR_1
   505  001076  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   506  001078  0E08               	movlw	high STR_1
   507  00107A  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   508  00107C  0E04               	movlw	4
   509  00107E  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   510  001080  EC34  F00C         	call	_ESCRIBE_MENSAJE	;wreg free
   511                           
   512                           ;servo con tmr0.c: 80:     POS_CURSOR(2,0);
   513  001084  0E00               	movlw	0
   514  001086  6E04               	movwf	POS_CURSOR@columna,c
   515  001088  0E02               	movlw	2
   516  00108A  EC8C  F00C         	call	_POS_CURSOR
   517                           
   518                           ;servo con tmr0.c: 81:     ESCRIBE_MENSAJE("TON:", 4);
   519  00108E  0E06               	movlw	low STR_2
   520  001090  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   521  001092  0E08               	movlw	high STR_2
   522  001094  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   523  001096  0E04               	movlw	4
   524  001098  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   525  00109A  EC34  F00C         	call	_ESCRIBE_MENSAJE	;wreg free
   526                           
   527                           ;servo con tmr0.c: 82:     LATEbits.LE0 = 0;
   528  00109E  908D               	bcf	3981,0,c	;volatile
   529  0010A0                     l2384:
   530                           
   531                           ;servo con tmr0.c: 84:         resul = ADC_CONVERTIR();
   532  0010A0  EC4D  F00C         	call	_ADC_CONVERTIR	;wreg free
   533  0010A4  C001  F03B         	movff	?_ADC_CONVERTIR,_resul
   534  0010A8  C002  F03C         	movff	?_ADC_CONVERTIR+1,_resul+1
   535                           
   536                           ;servo con tmr0.c: 85:         conviertemon(resul);
   537  0010AC  C03B  F009         	movff	_resul,conviertemon@contadoron
   538  0010B0  C03C  F00A         	movff	_resul+1,conviertemon@contadoron+1
   539  0010B4  EC6A  F009         	call	_conviertemon	;wreg free
   540                           
   541                           ;servo con tmr0.c: 86:         POS_CURSOR(1,5);
   542  0010B8  0E05               	movlw	5
   543  0010BA  6E04               	movwf	POS_CURSOR@columna,c
   544  0010BC  0E01               	movlw	1
   545  0010BE  EC8C  F00C         	call	_POS_CURSOR
   546                           
   547                           ;servo con tmr0.c: 87:         ENVIA_CHAR(digdmi+0x30);
   548  0010C2  504F               	movf	_digdmi,w,c
   549  0010C4  0F30               	addlw	48
   550  0010C6  EC00  F00C         	call	_ENVIA_CHAR
   551                           
   552                           ;servo con tmr0.c: 88:         ENVIA_CHAR(digmil+0x30);
   553  0010CA  504D               	movf	_digmil,w,c
   554  0010CC  0F30               	addlw	48
   555  0010CE  EC00  F00C         	call	_ENVIA_CHAR
   556                           
   557                           ;servo con tmr0.c: 89:         ENVIA_CHAR(digcen+0x30);
   558  0010D2  504B               	movf	_digcen,w,c
   559  0010D4  0F30               	addlw	48
   560  0010D6  EC00  F00C         	call	_ENVIA_CHAR
   561                           
   562                           ;servo con tmr0.c: 90:         ENVIA_CHAR(digdec+0x30);
   563  0010DA  5049               	movf	_digdec,w,c
   564  0010DC  0F30               	addlw	48
   565  0010DE  EC00  F00C         	call	_ENVIA_CHAR
   566                           
   567                           ;servo con tmr0.c: 91:         ENVIA_CHAR(diguni+0x30);
   568  0010E2  5047               	movf	_diguni,w,c
   569  0010E4  0F30               	addlw	48
   570  0010E6  EC00  F00C         	call	_ENVIA_CHAR
   571                           
   572                           ;servo con tmr0.c: 92:         calculon(resul);
   573  0010EA  C03B  F030         	movff	_resul,calculon@blablabla
   574  0010EE  C03C  F031         	movff	_resul+1,calculon@blablabla+1
   575  0010F2  EC38  F007         	call	_calculon	;wreg free
   576                           
   577                           ;servo con tmr0.c: 93:         POS_CURSOR(2,0);
   578  0010F6  0E00               	movlw	0
   579  0010F8  6E04               	movwf	POS_CURSOR@columna,c
   580  0010FA  0E02               	movlw	2
   581  0010FC  EC8C  F00C         	call	_POS_CURSOR
   582                           
   583                           ;servo con tmr0.c: 94:         ESCRIBE_MENSAJE("I:", 2);
   584  001100  0E0B               	movlw	low STR_3
   585  001102  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   586  001104  0E08               	movlw	high STR_3
   587  001106  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   588  001108  0E02               	movlw	2
   589  00110A  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   590  00110C  EC34  F00C         	call	_ESCRIBE_MENSAJE	;wreg free
   591                           
   592                           ;servo con tmr0.c: 95:         POS_CURSOR(2,2);
   593  001110  0E02               	movlw	2
   594  001112  6E04               	movwf	POS_CURSOR@columna,c
   595  001114  0E02               	movlw	2
   596  001116  EC8C  F00C         	call	_POS_CURSOR
   597                           
   598                           ;servo con tmr0.c: 96:         ENVIA_CHAR(digdmi+0x30);
   599  00111A  504F               	movf	_digdmi,w,c
   600  00111C  0F30               	addlw	48
   601  00111E  EC00  F00C         	call	_ENVIA_CHAR
   602                           
   603                           ;servo con tmr0.c: 97:         ENVIA_CHAR(digmil+0x30);
   604  001122  504D               	movf	_digmil,w,c
   605  001124  0F30               	addlw	48
   606  001126  EC00  F00C         	call	_ENVIA_CHAR
   607                           
   608                           ;servo con tmr0.c: 98:         ENVIA_CHAR(digcen+0x30);
   609  00112A  504B               	movf	_digcen,w,c
   610  00112C  0F30               	addlw	48
   611  00112E  EC00  F00C         	call	_ENVIA_CHAR
   612                           
   613                           ;servo con tmr0.c: 99:         ENVIA_CHAR(digdec+0x30);
   614  001132  5049               	movf	_digdec,w,c
   615  001134  0F30               	addlw	48
   616  001136  EC00  F00C         	call	_ENVIA_CHAR
   617                           
   618                           ;servo con tmr0.c: 100:         ENVIA_CHAR(diguni+0x30);
   619  00113A  5047               	movf	_diguni,w,c
   620  00113C  0F30               	addlw	48
   621  00113E  EC00  F00C         	call	_ENVIA_CHAR
   622                           
   623                           ;servo con tmr0.c: 101:         POS_CURSOR(2,8);
   624  001142  0E08               	movlw	8
   625  001144  6E04               	movwf	POS_CURSOR@columna,c
   626  001146  0E02               	movlw	2
   627  001148  EC8C  F00C         	call	_POS_CURSOR
   628                           
   629                           ;servo con tmr0.c: 102:         calculon2();
   630  00114C  ECE3  F009         	call	_calculon2	;wreg free
   631                           
   632                           ;servo con tmr0.c: 103:         ESCRIBE_MENSAJE("O:", 2);
   633  001150  0E0E               	movlw	low STR_4
   634  001152  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   635  001154  0E08               	movlw	high STR_4
   636  001156  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   637  001158  0E02               	movlw	2
   638  00115A  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   639  00115C  EC34  F00C         	call	_ESCRIBE_MENSAJE	;wreg free
   640                           
   641                           ;servo con tmr0.c: 104:         POS_CURSOR(2,10);
   642  001160  0E0A               	movlw	10
   643  001162  6E04               	movwf	POS_CURSOR@columna,c
   644  001164  0E02               	movlw	2
   645  001166  EC8C  F00C         	call	_POS_CURSOR
   646                           
   647                           ;servo con tmr0.c: 105:         ENVIA_CHAR(digdmi+0x30);
   648  00116A  504F               	movf	_digdmi,w,c
   649  00116C  0F30               	addlw	48
   650  00116E  EC00  F00C         	call	_ENVIA_CHAR
   651                           
   652                           ;servo con tmr0.c: 106:         ENVIA_CHAR(digmil+0x30);
   653  001172  504D               	movf	_digmil,w,c
   654  001174  0F30               	addlw	48
   655  001176  EC00  F00C         	call	_ENVIA_CHAR
   656                           
   657                           ;servo con tmr0.c: 107:         ENVIA_CHAR(digcen+0x30);
   658  00117A  504B               	movf	_digcen,w,c
   659  00117C  0F30               	addlw	48
   660  00117E  EC00  F00C         	call	_ENVIA_CHAR
   661                           
   662                           ;servo con tmr0.c: 108:         ENVIA_CHAR(digdec+0x30);
   663  001182  5049               	movf	_digdec,w,c
   664  001184  0F30               	addlw	48
   665  001186  EC00  F00C         	call	_ENVIA_CHAR
   666                           
   667                           ;servo con tmr0.c: 109:         ENVIA_CHAR(diguni+0x30);
   668  00118A  5047               	movf	_diguni,w,c
   669  00118C  0F30               	addlw	48
   670  00118E  EC00  F00C         	call	_ENVIA_CHAR
   671  001192  D786               	goto	l2384
   672  001194                     __end_of_main:
   673                           	opt callstack 0
   674                           
   675 ;; *************** function _conviertemon *****************
   676 ;; Defined at:
   677 ;;		line 31 in file "servo con tmr0.c"
   678 ;; Parameters:    Size  Location     Type
   679 ;;  contadoron      2    8[COMRAM] int 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;		None
   682 ;; Return value:  Size  Location     Type
   683 ;;                  1    wreg      void 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   691 ;;      Params:         2       0       0       0       0       0       0       0       0
   692 ;;      Locals:         0       0       0       0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0
   694 ;;      Totals:         2       0       0       0       0       0       0       0       0
   695 ;;Total ram usage:        2 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		___awdiv
   700 ;;		___wmul
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text1
   707  0012D4                     __ptext1:
   708                           	opt callstack 0
   709  0012D4                     _conviertemon:
   710                           	opt callstack 28
   711                           
   712                           ;servo con tmr0.c: 32:     digdmi = resul / 10000;
   713                           
   714                           ;incstack = 0
   715  0012D4  C03B  F001         	movff	_resul,___awdiv@dividend
   716  0012D8  C03C  F002         	movff	_resul+1,___awdiv@dividend+1
   717  0012DC  0E27               	movlw	39
   718  0012DE  6E04               	movwf	___awdiv@divisor+1,c
   719  0012E0  0E10               	movlw	16
   720  0012E2  6E03               	movwf	___awdiv@divisor,c
   721  0012E4  EC11  F00B         	call	___awdiv	;wreg free
   722  0012E8  C001  F04F         	movff	?___awdiv,_digdmi
   723  0012EC  C002  F050         	movff	?___awdiv+1,_digdmi+1
   724                           
   725                           ;servo con tmr0.c: 33:     temporal3 = resul - (digdmi * 10000);
   726  0012F0  C04F  F001         	movff	_digdmi,___wmul@multiplier
   727  0012F4  C050  F002         	movff	_digdmi+1,___wmul@multiplier+1
   728  0012F8  0ED8               	movlw	216
   729  0012FA  6E04               	movwf	___wmul@multiplicand+1,c
   730  0012FC  0EF0               	movlw	240
   731  0012FE  6E03               	movwf	___wmul@multiplicand,c
   732  001300  EC79  F00C         	call	___wmul	;wreg free
   733  001304  503B               	movf	_resul,w,c
   734  001306  2401               	addwf	?___wmul,w,c
   735  001308  6E41               	movwf	_temporal3,c
   736  00130A  503C               	movf	_resul+1,w,c
   737  00130C  2002               	addwfc	?___wmul+1,w,c
   738  00130E  6E42               	movwf	_temporal3+1,c
   739                           
   740                           ;servo con tmr0.c: 34:     digmil = temporal3 / 1000;
   741  001310  C041  F001         	movff	_temporal3,___awdiv@dividend
   742  001314  C042  F002         	movff	_temporal3+1,___awdiv@dividend+1
   743  001318  0E03               	movlw	3
   744  00131A  6E04               	movwf	___awdiv@divisor+1,c
   745  00131C  0EE8               	movlw	232
   746  00131E  6E03               	movwf	___awdiv@divisor,c
   747  001320  EC11  F00B         	call	___awdiv	;wreg free
   748  001324  C001  F04D         	movff	?___awdiv,_digmil
   749  001328  C002  F04E         	movff	?___awdiv+1,_digmil+1
   750                           
   751                           ;servo con tmr0.c: 35:     temporal = temporal3 - (digmil * 1000);
   752  00132C  C04D  F001         	movff	_digmil,___wmul@multiplier
   753  001330  C04E  F002         	movff	_digmil+1,___wmul@multiplier+1
   754  001334  0EFC               	movlw	252
   755  001336  6E04               	movwf	___wmul@multiplicand+1,c
   756  001338  0E18               	movlw	24
   757  00133A  6E03               	movwf	___wmul@multiplicand,c
   758  00133C  EC79  F00C         	call	___wmul	;wreg free
   759  001340  5041               	movf	_temporal3,w,c
   760  001342  2401               	addwf	?___wmul,w,c
   761  001344  6E45               	movwf	_temporal,c
   762  001346  5042               	movf	_temporal3+1,w,c
   763  001348  2002               	addwfc	?___wmul+1,w,c
   764  00134A  6E46               	movwf	_temporal+1,c
   765                           
   766                           ;servo con tmr0.c: 36:     digcen = temporal / 100;
   767  00134C  C045  F001         	movff	_temporal,___awdiv@dividend
   768  001350  C046  F002         	movff	_temporal+1,___awdiv@dividend+1
   769  001354  0E00               	movlw	0
   770  001356  6E04               	movwf	___awdiv@divisor+1,c
   771  001358  0E64               	movlw	100
   772  00135A  6E03               	movwf	___awdiv@divisor,c
   773  00135C  EC11  F00B         	call	___awdiv	;wreg free
   774  001360  C001  F04B         	movff	?___awdiv,_digcen
   775  001364  C002  F04C         	movff	?___awdiv+1,_digcen+1
   776                           
   777                           ;servo con tmr0.c: 37:     temporal2 = temporal - (digcen * 100);
   778  001368  C04B  F001         	movff	_digcen,___wmul@multiplier
   779  00136C  C04C  F002         	movff	_digcen+1,___wmul@multiplier+1
   780  001370  0EFF               	movlw	255
   781  001372  6E04               	movwf	___wmul@multiplicand+1,c
   782  001374  0E9C               	movlw	156
   783  001376  6E03               	movwf	___wmul@multiplicand,c
   784  001378  EC79  F00C         	call	___wmul	;wreg free
   785  00137C  5045               	movf	_temporal,w,c
   786  00137E  2401               	addwf	?___wmul,w,c
   787  001380  6E43               	movwf	_temporal2,c
   788  001382  5046               	movf	_temporal+1,w,c
   789  001384  2002               	addwfc	?___wmul+1,w,c
   790  001386  6E44               	movwf	_temporal2+1,c
   791                           
   792                           ;servo con tmr0.c: 38:     digdec = temporal2 / 10;
   793  001388  C043  F001         	movff	_temporal2,___awdiv@dividend
   794  00138C  C044  F002         	movff	_temporal2+1,___awdiv@dividend+1
   795  001390  0E00               	movlw	0
   796  001392  6E04               	movwf	___awdiv@divisor+1,c
   797  001394  0E0A               	movlw	10
   798  001396  6E03               	movwf	___awdiv@divisor,c
   799  001398  EC11  F00B         	call	___awdiv	;wreg free
   800  00139C  C001  F049         	movff	?___awdiv,_digdec
   801  0013A0  C002  F04A         	movff	?___awdiv+1,_digdec+1
   802                           
   803                           ;servo con tmr0.c: 39:     diguni = temporal2 - (digdec * 10);
   804  0013A4  C049  F001         	movff	_digdec,___wmul@multiplier
   805  0013A8  C04A  F002         	movff	_digdec+1,___wmul@multiplier+1
   806  0013AC  0EFF               	movlw	255
   807  0013AE  6E04               	movwf	___wmul@multiplicand+1,c
   808  0013B0  0EF6               	movlw	246
   809  0013B2  6E03               	movwf	___wmul@multiplicand,c
   810  0013B4  EC79  F00C         	call	___wmul	;wreg free
   811  0013B8  5043               	movf	_temporal2,w,c
   812  0013BA  2401               	addwf	?___wmul,w,c
   813  0013BC  6E47               	movwf	_diguni,c
   814  0013BE  5044               	movf	_temporal2+1,w,c
   815  0013C0  2002               	addwfc	?___wmul+1,w,c
   816  0013C2  6E48               	movwf	_diguni+1,c
   817  0013C4  0012               	return		;funcret
   818  0013C6                     __end_of_conviertemon:
   819                           	opt callstack 0
   820                           
   821 ;; *************** function _calculon2 *****************
   822 ;; Defined at:
   823 ;;		line 57 in file "servo con tmr0.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   837 ;;      Params:         0       0       0       0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0
   839 ;;      Temps:          0       0       0       0       0       0       0       0       0
   840 ;;      Totals:         0       0       0       0       0       0       0       0       0
   841 ;;Total ram usage:        0 bytes
   842 ;; Hardware stack levels used:    1
   843 ;; Hardware stack levels required when called:    2
   844 ;; This function calls:
   845 ;;		___awdiv
   846 ;;		___lwdiv
   847 ;;		___wmul
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text2
   854  0013C6                     __ptext2:
   855                           	opt callstack 0
   856  0013C6                     _calculon2:
   857                           	opt callstack 28
   858                           
   859                           ;servo con tmr0.c: 58:     digdmi = cta_off / 10000;
   860                           
   861                           ;incstack = 0
   862  0013C6  C03D  F001         	movff	_cta_off,___lwdiv@dividend
   863  0013CA  C03E  F002         	movff	_cta_off+1,___lwdiv@dividend+1
   864  0013CE  0E27               	movlw	39
   865  0013D0  6E04               	movwf	___lwdiv@divisor+1,c
   866  0013D2  0E10               	movlw	16
   867  0013D4  6E03               	movwf	___lwdiv@divisor,c
   868  0013D6  ECB4  F00B         	call	___lwdiv	;wreg free
   869  0013DA  C001  F04F         	movff	?___lwdiv,_digdmi
   870  0013DE  C002  F050         	movff	?___lwdiv+1,_digdmi+1
   871                           
   872                           ;servo con tmr0.c: 59:     temporal3 = cta_off - (digdmi * 10000);
   873  0013E2  C04F  F001         	movff	_digdmi,___wmul@multiplier
   874  0013E6  C050  F002         	movff	_digdmi+1,___wmul@multiplier+1
   875  0013EA  0ED8               	movlw	216
   876  0013EC  6E04               	movwf	___wmul@multiplicand+1,c
   877  0013EE  0EF0               	movlw	240
   878  0013F0  6E03               	movwf	___wmul@multiplicand,c
   879  0013F2  EC79  F00C         	call	___wmul	;wreg free
   880  0013F6  503D               	movf	_cta_off,w,c
   881  0013F8  2401               	addwf	?___wmul,w,c
   882  0013FA  6E41               	movwf	_temporal3,c
   883  0013FC  503E               	movf	_cta_off+1,w,c
   884  0013FE  2002               	addwfc	?___wmul+1,w,c
   885  001400  6E42               	movwf	_temporal3+1,c
   886                           
   887                           ;servo con tmr0.c: 60:     digmil = temporal3 / 1000;
   888  001402  C041  F001         	movff	_temporal3,___awdiv@dividend
   889  001406  C042  F002         	movff	_temporal3+1,___awdiv@dividend+1
   890  00140A  0E03               	movlw	3
   891  00140C  6E04               	movwf	___awdiv@divisor+1,c
   892  00140E  0EE8               	movlw	232
   893  001410  6E03               	movwf	___awdiv@divisor,c
   894  001412  EC11  F00B         	call	___awdiv	;wreg free
   895  001416  C001  F04D         	movff	?___awdiv,_digmil
   896  00141A  C002  F04E         	movff	?___awdiv+1,_digmil+1
   897                           
   898                           ;servo con tmr0.c: 61:     temporal = temporal3 - (digmil * 1000);
   899  00141E  C04D  F001         	movff	_digmil,___wmul@multiplier
   900  001422  C04E  F002         	movff	_digmil+1,___wmul@multiplier+1
   901  001426  0EFC               	movlw	252
   902  001428  6E04               	movwf	___wmul@multiplicand+1,c
   903  00142A  0E18               	movlw	24
   904  00142C  6E03               	movwf	___wmul@multiplicand,c
   905  00142E  EC79  F00C         	call	___wmul	;wreg free
   906  001432  5041               	movf	_temporal3,w,c
   907  001434  2401               	addwf	?___wmul,w,c
   908  001436  6E45               	movwf	_temporal,c
   909  001438  5042               	movf	_temporal3+1,w,c
   910  00143A  2002               	addwfc	?___wmul+1,w,c
   911  00143C  6E46               	movwf	_temporal+1,c
   912                           
   913                           ;servo con tmr0.c: 62:     digcen = temporal / 100;
   914  00143E  C045  F001         	movff	_temporal,___awdiv@dividend
   915  001442  C046  F002         	movff	_temporal+1,___awdiv@dividend+1
   916  001446  0E00               	movlw	0
   917  001448  6E04               	movwf	___awdiv@divisor+1,c
   918  00144A  0E64               	movlw	100
   919  00144C  6E03               	movwf	___awdiv@divisor,c
   920  00144E  EC11  F00B         	call	___awdiv	;wreg free
   921  001452  C001  F04B         	movff	?___awdiv,_digcen
   922  001456  C002  F04C         	movff	?___awdiv+1,_digcen+1
   923                           
   924                           ;servo con tmr0.c: 63:     temporal2 = temporal - (digcen * 100);
   925  00145A  C04B  F001         	movff	_digcen,___wmul@multiplier
   926  00145E  C04C  F002         	movff	_digcen+1,___wmul@multiplier+1
   927  001462  0EFF               	movlw	255
   928  001464  6E04               	movwf	___wmul@multiplicand+1,c
   929  001466  0E9C               	movlw	156
   930  001468  6E03               	movwf	___wmul@multiplicand,c
   931  00146A  EC79  F00C         	call	___wmul	;wreg free
   932  00146E  5045               	movf	_temporal,w,c
   933  001470  2401               	addwf	?___wmul,w,c
   934  001472  6E43               	movwf	_temporal2,c
   935  001474  5046               	movf	_temporal+1,w,c
   936  001476  2002               	addwfc	?___wmul+1,w,c
   937  001478  6E44               	movwf	_temporal2+1,c
   938                           
   939                           ;servo con tmr0.c: 64:     digdec = temporal2 / 10;
   940  00147A  C043  F001         	movff	_temporal2,___awdiv@dividend
   941  00147E  C044  F002         	movff	_temporal2+1,___awdiv@dividend+1
   942  001482  0E00               	movlw	0
   943  001484  6E04               	movwf	___awdiv@divisor+1,c
   944  001486  0E0A               	movlw	10
   945  001488  6E03               	movwf	___awdiv@divisor,c
   946  00148A  EC11  F00B         	call	___awdiv	;wreg free
   947  00148E  C001  F049         	movff	?___awdiv,_digdec
   948  001492  C002  F04A         	movff	?___awdiv+1,_digdec+1
   949                           
   950                           ;servo con tmr0.c: 65:     diguni = temporal2 - (digdec * 10);
   951  001496  C049  F001         	movff	_digdec,___wmul@multiplier
   952  00149A  C04A  F002         	movff	_digdec+1,___wmul@multiplier+1
   953  00149E  0EFF               	movlw	255
   954  0014A0  6E04               	movwf	___wmul@multiplicand+1,c
   955  0014A2  0EF6               	movlw	246
   956  0014A4  6E03               	movwf	___wmul@multiplicand,c
   957  0014A6  EC79  F00C         	call	___wmul	;wreg free
   958  0014AA  5043               	movf	_temporal2,w,c
   959  0014AC  2401               	addwf	?___wmul,w,c
   960  0014AE  6E47               	movwf	_diguni,c
   961  0014B0  5044               	movf	_temporal2+1,w,c
   962  0014B2  2002               	addwfc	?___wmul+1,w,c
   963  0014B4  6E48               	movwf	_diguni+1,c
   964  0014B6  0012               	return		;funcret
   965  0014B8                     __end_of_calculon2:
   966                           	opt callstack 0
   967                           
   968 ;; *************** function _calculon *****************
   969 ;; Defined at:
   970 ;;		line 42 in file "servo con tmr0.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  blablabla       2   47[COMRAM] int 
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   984 ;;      Params:         2       0       0       0       0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0       0       0       0       0
   987 ;;      Totals:         2       0       0       0       0       0       0       0       0
   988 ;;Total ram usage:        2 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    3
   991 ;; This function calls:
   992 ;;		___awdiv
   993 ;;		___flmul
   994 ;;		___flsub
   995 ;;		___fltol
   996 ;;		___lwdiv
   997 ;;		___wmul
   998 ;;		___xxtofl
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text3
  1005  000E70                     __ptext3:
  1006                           	opt callstack 0
  1007  000E70                     _calculon:
  1008                           	opt callstack 27
  1009                           
  1010                           ;servo con tmr0.c: 43:     pre_cta_on = 63436 - (blablabla * 4.712);
  1011                           
  1012                           ;incstack = 0
  1013  000E70  0E00               	movlw	0
  1014  000E72  6E28               	movwf	___flsub@b,c
  1015  000E74  0ECC               	movlw	204
  1016  000E76  6E29               	movwf	___flsub@b+1,c
  1017  000E78  0E77               	movlw	119
  1018  000E7A  6E2A               	movwf	___flsub@b+2,c
  1019  000E7C  0E47               	movlw	71
  1020  000E7E  6E2B               	movwf	___flsub@b+3,c
  1021  000E80  0EB4               	movlw	180
  1022  000E82  6E13               	movwf	___flmul@a,c
  1023  000E84  0EC8               	movlw	200
  1024  000E86  6E14               	movwf	___flmul@a+1,c
  1025  000E88  0E96               	movlw	150
  1026  000E8A  6E15               	movwf	___flmul@a+2,c
  1027  000E8C  0E40               	movlw	64
  1028  000E8E  6E16               	movwf	___flmul@a+3,c
  1029  000E90  C030  F001         	movff	calculon@blablabla,___xxtofl@val
  1030  000E94  C031  F002         	movff	calculon@blablabla+1,___xxtofl@val+1
  1031  000E98  0E00               	movlw	0
  1032  000E9A  BE02               	btfsc	___xxtofl@val+1,7,c
  1033  000E9C  0EFF               	movlw	-1
  1034  000E9E  6E03               	movwf	___xxtofl@val+2,c
  1035  000EA0  6E04               	movwf	___xxtofl@val+3,c
  1036  000EA2  0E01               	movlw	1
  1037  000EA4  ECCA  F008         	call	___xxtofl
  1038  000EA8  C001  F00F         	movff	?___xxtofl,___flmul@b
  1039  000EAC  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1040  000EB0  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1041  000EB4  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1042  000EB8  EC09  F004         	call	___flmul	;wreg free
  1043  000EBC  C00F  F02C         	movff	?___flmul,___flsub@a
  1044  000EC0  C010  F02D         	movff	?___flmul+1,___flsub@a+1
  1045  000EC4  C011  F02E         	movff	?___flmul+2,___flsub@a+2
  1046  000EC8  C012  F02F         	movff	?___flmul+3,___flsub@a+3
  1047  000ECC  ECDD  F00B         	call	___flsub	;wreg free
  1048  000ED0  C028  F037         	movff	?___flsub,_pre_cta_on
  1049  000ED4  C029  F038         	movff	?___flsub+1,_pre_cta_on+1
  1050  000ED8  C02A  F039         	movff	?___flsub+2,_pre_cta_on+2
  1051  000EDC  C02B  F03A         	movff	?___flsub+3,_pre_cta_on+3
  1052                           
  1053                           ;servo con tmr0.c: 44:     pre_cta_off = 70636 - pre_cta_on;
  1054  000EE0  0E00               	movlw	0
  1055  000EE2  6E28               	movwf	___flsub@b,c
  1056  000EE4  0EF6               	movlw	246
  1057  000EE6  6E29               	movwf	___flsub@b+1,c
  1058  000EE8  0E89               	movlw	137
  1059  000EEA  6E2A               	movwf	___flsub@b+2,c
  1060  000EEC  0E47               	movlw	71
  1061  000EEE  6E2B               	movwf	___flsub@b+3,c
  1062  000EF0  C037  F02C         	movff	_pre_cta_on,___flsub@a
  1063  000EF4  C038  F02D         	movff	_pre_cta_on+1,___flsub@a+1
  1064  000EF8  C039  F02E         	movff	_pre_cta_on+2,___flsub@a+2
  1065  000EFC  C03A  F02F         	movff	_pre_cta_on+3,___flsub@a+3
  1066  000F00  ECDD  F00B         	call	___flsub	;wreg free
  1067  000F04  C028  F033         	movff	?___flsub,_pre_cta_off
  1068  000F08  C029  F034         	movff	?___flsub+1,_pre_cta_off+1
  1069  000F0C  C02A  F035         	movff	?___flsub+2,_pre_cta_off+2
  1070  000F10  C02B  F036         	movff	?___flsub+3,_pre_cta_off+3
  1071                           
  1072                           ;servo con tmr0.c: 45:     cta_on = pre_cta_on;
  1073  000F14  C037  F001         	movff	_pre_cta_on,___fltol@f1
  1074  000F18  C038  F002         	movff	_pre_cta_on+1,___fltol@f1+1
  1075  000F1C  C039  F003         	movff	_pre_cta_on+2,___fltol@f1+2
  1076  000F20  C03A  F004         	movff	_pre_cta_on+3,___fltol@f1+3
  1077  000F24  EC5C  F00A         	call	___fltol	;wreg free
  1078  000F28  C001  F03F         	movff	?___fltol,_cta_on
  1079  000F2C  C002  F040         	movff	?___fltol+1,_cta_on+1
  1080                           
  1081                           ;servo con tmr0.c: 46:     cta_off = pre_cta_off;
  1082  000F30  C033  F001         	movff	_pre_cta_off,___fltol@f1
  1083  000F34  C034  F002         	movff	_pre_cta_off+1,___fltol@f1+1
  1084  000F38  C035  F003         	movff	_pre_cta_off+2,___fltol@f1+2
  1085  000F3C  C036  F004         	movff	_pre_cta_off+3,___fltol@f1+3
  1086  000F40  EC5C  F00A         	call	___fltol	;wreg free
  1087  000F44  C001  F03D         	movff	?___fltol,_cta_off
  1088  000F48  C002  F03E         	movff	?___fltol+1,_cta_off+1
  1089                           
  1090                           ;servo con tmr0.c: 47:     digdmi = cta_on / 10000;
  1091  000F4C  C03F  F001         	movff	_cta_on,___lwdiv@dividend
  1092  000F50  C040  F002         	movff	_cta_on+1,___lwdiv@dividend+1
  1093  000F54  0E27               	movlw	39
  1094  000F56  6E04               	movwf	___lwdiv@divisor+1,c
  1095  000F58  0E10               	movlw	16
  1096  000F5A  6E03               	movwf	___lwdiv@divisor,c
  1097  000F5C  ECB4  F00B         	call	___lwdiv	;wreg free
  1098  000F60  C001  F04F         	movff	?___lwdiv,_digdmi
  1099  000F64  C002  F050         	movff	?___lwdiv+1,_digdmi+1
  1100                           
  1101                           ;servo con tmr0.c: 48:     temporal3 = cta_on - (digdmi * 10000);
  1102  000F68  C04F  F001         	movff	_digdmi,___wmul@multiplier
  1103  000F6C  C050  F002         	movff	_digdmi+1,___wmul@multiplier+1
  1104  000F70  0ED8               	movlw	216
  1105  000F72  6E04               	movwf	___wmul@multiplicand+1,c
  1106  000F74  0EF0               	movlw	240
  1107  000F76  6E03               	movwf	___wmul@multiplicand,c
  1108  000F78  EC79  F00C         	call	___wmul	;wreg free
  1109  000F7C  503F               	movf	_cta_on,w,c
  1110  000F7E  2401               	addwf	?___wmul,w,c
  1111  000F80  6E41               	movwf	_temporal3,c
  1112  000F82  5040               	movf	_cta_on+1,w,c
  1113  000F84  2002               	addwfc	?___wmul+1,w,c
  1114  000F86  6E42               	movwf	_temporal3+1,c
  1115                           
  1116                           ;servo con tmr0.c: 49:     digmil = temporal3 / 1000;
  1117  000F88  C041  F001         	movff	_temporal3,___awdiv@dividend
  1118  000F8C  C042  F002         	movff	_temporal3+1,___awdiv@dividend+1
  1119  000F90  0E03               	movlw	3
  1120  000F92  6E04               	movwf	___awdiv@divisor+1,c
  1121  000F94  0EE8               	movlw	232
  1122  000F96  6E03               	movwf	___awdiv@divisor,c
  1123  000F98  EC11  F00B         	call	___awdiv	;wreg free
  1124  000F9C  C001  F04D         	movff	?___awdiv,_digmil
  1125  000FA0  C002  F04E         	movff	?___awdiv+1,_digmil+1
  1126                           
  1127                           ;servo con tmr0.c: 50:     temporal = temporal3 - (digmil * 1000);
  1128  000FA4  C04D  F001         	movff	_digmil,___wmul@multiplier
  1129  000FA8  C04E  F002         	movff	_digmil+1,___wmul@multiplier+1
  1130  000FAC  0EFC               	movlw	252
  1131  000FAE  6E04               	movwf	___wmul@multiplicand+1,c
  1132  000FB0  0E18               	movlw	24
  1133  000FB2  6E03               	movwf	___wmul@multiplicand,c
  1134  000FB4  EC79  F00C         	call	___wmul	;wreg free
  1135  000FB8  5041               	movf	_temporal3,w,c
  1136  000FBA  2401               	addwf	?___wmul,w,c
  1137  000FBC  6E45               	movwf	_temporal,c
  1138  000FBE  5042               	movf	_temporal3+1,w,c
  1139  000FC0  2002               	addwfc	?___wmul+1,w,c
  1140  000FC2  6E46               	movwf	_temporal+1,c
  1141                           
  1142                           ;servo con tmr0.c: 51:     digcen = temporal / 100;
  1143  000FC4  C045  F001         	movff	_temporal,___awdiv@dividend
  1144  000FC8  C046  F002         	movff	_temporal+1,___awdiv@dividend+1
  1145  000FCC  0E00               	movlw	0
  1146  000FCE  6E04               	movwf	___awdiv@divisor+1,c
  1147  000FD0  0E64               	movlw	100
  1148  000FD2  6E03               	movwf	___awdiv@divisor,c
  1149  000FD4  EC11  F00B         	call	___awdiv	;wreg free
  1150  000FD8  C001  F04B         	movff	?___awdiv,_digcen
  1151  000FDC  C002  F04C         	movff	?___awdiv+1,_digcen+1
  1152                           
  1153                           ;servo con tmr0.c: 52:     temporal2 = temporal - (digcen * 100);
  1154  000FE0  C04B  F001         	movff	_digcen,___wmul@multiplier
  1155  000FE4  C04C  F002         	movff	_digcen+1,___wmul@multiplier+1
  1156  000FE8  0EFF               	movlw	255
  1157  000FEA  6E04               	movwf	___wmul@multiplicand+1,c
  1158  000FEC  0E9C               	movlw	156
  1159  000FEE  6E03               	movwf	___wmul@multiplicand,c
  1160  000FF0  EC79  F00C         	call	___wmul	;wreg free
  1161  000FF4  5045               	movf	_temporal,w,c
  1162  000FF6  2401               	addwf	?___wmul,w,c
  1163  000FF8  6E43               	movwf	_temporal2,c
  1164  000FFA  5046               	movf	_temporal+1,w,c
  1165  000FFC  2002               	addwfc	?___wmul+1,w,c
  1166  000FFE  6E44               	movwf	_temporal2+1,c
  1167                           
  1168                           ;servo con tmr0.c: 53:     digdec = temporal2 / 10;
  1169  001000  C043  F001         	movff	_temporal2,___awdiv@dividend
  1170  001004  C044  F002         	movff	_temporal2+1,___awdiv@dividend+1
  1171  001008  0E00               	movlw	0
  1172  00100A  6E04               	movwf	___awdiv@divisor+1,c
  1173  00100C  0E0A               	movlw	10
  1174  00100E  6E03               	movwf	___awdiv@divisor,c
  1175  001010  EC11  F00B         	call	___awdiv	;wreg free
  1176  001014  C001  F049         	movff	?___awdiv,_digdec
  1177  001018  C002  F04A         	movff	?___awdiv+1,_digdec+1
  1178                           
  1179                           ;servo con tmr0.c: 54:     diguni = temporal2 - (digdec * 10);
  1180  00101C  C049  F001         	movff	_digdec,___wmul@multiplier
  1181  001020  C04A  F002         	movff	_digdec+1,___wmul@multiplier+1
  1182  001024  0EFF               	movlw	255
  1183  001026  6E04               	movwf	___wmul@multiplicand+1,c
  1184  001028  0EF6               	movlw	246
  1185  00102A  6E03               	movwf	___wmul@multiplicand,c
  1186  00102C  EC79  F00C         	call	___wmul	;wreg free
  1187  001030  5043               	movf	_temporal2,w,c
  1188  001032  2401               	addwf	?___wmul,w,c
  1189  001034  6E47               	movwf	_diguni,c
  1190  001036  5044               	movf	_temporal2+1,w,c
  1191  001038  2002               	addwfc	?___wmul+1,w,c
  1192  00103A  6E48               	movwf	_diguni+1,c
  1193  00103C  0012               	return		;funcret
  1194  00103E                     __end_of_calculon:
  1195                           	opt callstack 0
  1196                           
  1197 ;; *************** function ___xxtofl *****************
  1198 ;; Defined at:
  1199 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\xxtofl.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  sign            1    wreg     unsigned char 
  1202 ;;  val             4    0[COMRAM] long 
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  sign            1    8[COMRAM] unsigned char 
  1205 ;;  arg             4   10[COMRAM] unsigned long 
  1206 ;;  exp             1    9[COMRAM] unsigned char 
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  4    0[COMRAM] unsigned char 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1216 ;;      Params:         4       0       0       0       0       0       0       0       0
  1217 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1218 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1219 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1220 ;;Total ram usage:       14 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_calculon
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           	psect	text4
  1231  001194                     __ptext4:
  1232                           	opt callstack 0
  1233  001194                     ___xxtofl:
  1234                           	opt callstack 28
  1235                           
  1236                           ;incstack = 0
  1237                           ;___xxtofl@sign stored from wreg
  1238  001194  6E09               	movwf	___xxtofl@sign,c
  1239  001196  5009               	movf	___xxtofl@sign,w,c
  1240  001198  A4D8               	btfss	status,2,c
  1241  00119A  AE04               	btfss	___xxtofl@val+3,7,c
  1242  00119C  D01A               	goto	l866
  1243  00119E  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1244  0011A2  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1245  0011A6  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1246  0011AA  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1247  0011AE  1E05               	comf	??___xxtofl,f,c
  1248  0011B0  1E06               	comf	??___xxtofl+1,f,c
  1249  0011B2  1E07               	comf	??___xxtofl+2,f,c
  1250  0011B4  1E08               	comf	??___xxtofl+3,f,c
  1251  0011B6  2A05               	incf	??___xxtofl,f,c
  1252  0011B8  0E00               	movlw	0
  1253  0011BA  2206               	addwfc	??___xxtofl+1,f,c
  1254  0011BC  2207               	addwfc	??___xxtofl+2,f,c
  1255  0011BE  2208               	addwfc	??___xxtofl+3,f,c
  1256  0011C0  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1257  0011C4  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1258  0011C8  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1259  0011CC  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1260  0011D0  D008               	goto	l2246
  1261  0011D2                     l866:
  1262  0011D2  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1263  0011D6  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1264  0011DA  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1265  0011DE  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1266  0011E2                     l2246:
  1267  0011E2  5001               	movf	___xxtofl@val,w,c
  1268  0011E4  1002               	iorwf	___xxtofl@val+1,w,c
  1269  0011E6  1003               	iorwf	___xxtofl@val+2,w,c
  1270  0011E8  1004               	iorwf	___xxtofl@val+3,w,c
  1271  0011EA  A4D8               	btfss	status,2,c
  1272  0011EC  D009               	goto	l2252
  1273  0011EE  0E00               	movlw	0
  1274  0011F0  6E01               	movwf	?___xxtofl,c
  1275  0011F2  0E00               	movlw	0
  1276  0011F4  6E02               	movwf	?___xxtofl+1,c
  1277  0011F6  0E00               	movlw	0
  1278  0011F8  6E03               	movwf	?___xxtofl+2,c
  1279  0011FA  0E00               	movlw	0
  1280  0011FC  6E04               	movwf	?___xxtofl+3,c
  1281  0011FE  0012               	return	
  1282  001200                     l2252:
  1283  001200  0E96               	movlw	150
  1284  001202  6E0A               	movwf	___xxtofl@exp,c
  1285  001204  D006               	goto	l2256
  1286  001206                     l2254:
  1287  001206  2A0A               	incf	___xxtofl@exp,f,c
  1288  001208  90D8               	bcf	status,0,c
  1289  00120A  320E               	rrcf	___xxtofl@arg+3,f,c
  1290  00120C  320D               	rrcf	___xxtofl@arg+2,f,c
  1291  00120E  320C               	rrcf	___xxtofl@arg+1,f,c
  1292  001210  320B               	rrcf	___xxtofl@arg,f,c
  1293  001212                     l2256:
  1294  001212  0E00               	movlw	0
  1295  001214  140B               	andwf	___xxtofl@arg,w,c
  1296  001216  6E05               	movwf	??___xxtofl& (0+255),c
  1297  001218  0E00               	movlw	0
  1298  00121A  140C               	andwf	___xxtofl@arg+1,w,c
  1299  00121C  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1300  00121E  0E00               	movlw	0
  1301  001220  140D               	andwf	___xxtofl@arg+2,w,c
  1302  001222  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1303  001224  0EFE               	movlw	254
  1304  001226  140E               	andwf	___xxtofl@arg+3,w,c
  1305  001228  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1306  00122A  5005               	movf	??___xxtofl,w,c
  1307  00122C  1006               	iorwf	??___xxtofl+1,w,c
  1308  00122E  1007               	iorwf	??___xxtofl+2,w,c
  1309  001230  1008               	iorwf	??___xxtofl+3,w,c
  1310  001232  B4D8               	btfsc	status,2,c
  1311  001234  D00D               	goto	l873
  1312  001236  D7E7               	goto	l2254
  1313  001238                     l2258:
  1314  001238  2A0A               	incf	___xxtofl@exp,f,c
  1315  00123A  0E01               	movlw	1
  1316  00123C  260B               	addwf	___xxtofl@arg,f,c
  1317  00123E  0E00               	movlw	0
  1318  001240  220C               	addwfc	___xxtofl@arg+1,f,c
  1319  001242  220D               	addwfc	___xxtofl@arg+2,f,c
  1320  001244  220E               	addwfc	___xxtofl@arg+3,f,c
  1321  001246  90D8               	bcf	status,0,c
  1322  001248  320E               	rrcf	___xxtofl@arg+3,f,c
  1323  00124A  320D               	rrcf	___xxtofl@arg+2,f,c
  1324  00124C  320C               	rrcf	___xxtofl@arg+1,f,c
  1325  00124E  320B               	rrcf	___xxtofl@arg,f,c
  1326  001250                     l873:
  1327  001250  0E00               	movlw	0
  1328  001252  140B               	andwf	___xxtofl@arg,w,c
  1329  001254  6E05               	movwf	??___xxtofl& (0+255),c
  1330  001256  0E00               	movlw	0
  1331  001258  140C               	andwf	___xxtofl@arg+1,w,c
  1332  00125A  6E06               	movwf	(??___xxtofl+1)& (0+255),c
  1333  00125C  0E00               	movlw	0
  1334  00125E  140D               	andwf	___xxtofl@arg+2,w,c
  1335  001260  6E07               	movwf	(??___xxtofl+2)& (0+255),c
  1336  001262  0EFF               	movlw	255
  1337  001264  140E               	andwf	___xxtofl@arg+3,w,c
  1338  001266  6E08               	movwf	(??___xxtofl+3)& (0+255),c
  1339  001268  5005               	movf	??___xxtofl,w,c
  1340  00126A  1006               	iorwf	??___xxtofl+1,w,c
  1341  00126C  1007               	iorwf	??___xxtofl+2,w,c
  1342  00126E  1008               	iorwf	??___xxtofl+3,w,c
  1343  001270  B4D8               	btfsc	status,2,c
  1344  001272  D007               	goto	l2266
  1345  001274  D7E1               	goto	l2258
  1346  001276                     l2264:
  1347  001276  060A               	decf	___xxtofl@exp,f,c
  1348  001278  90D8               	bcf	status,0,c
  1349  00127A  360B               	rlcf	___xxtofl@arg,f,c
  1350  00127C  360C               	rlcf	___xxtofl@arg+1,f,c
  1351  00127E  360D               	rlcf	___xxtofl@arg+2,f,c
  1352  001280  360E               	rlcf	___xxtofl@arg+3,f,c
  1353  001282                     l2266:
  1354  001282  BE0D               	btfsc	___xxtofl@arg+2,7,c
  1355  001284  D003               	goto	u1780
  1356  001286  0E02               	movlw	2
  1357  001288  600A               	cpfslt	___xxtofl@exp,c
  1358  00128A  D7F5               	goto	l2264
  1359  00128C                     u1780:
  1360  00128C  A00A               	btfss	___xxtofl@exp,0,c
  1361  00128E  9E0D               	bcf	___xxtofl@arg+2,7,c
  1362  001290  90D8               	bcf	status,0,c
  1363  001292  320A               	rrcf	___xxtofl@exp,f,c
  1364  001294  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1365  001298  6A06               	clrf	(??___xxtofl+1)& (0+255),c
  1366  00129A  6A07               	clrf	(??___xxtofl+2)& (0+255),c
  1367  00129C  6A08               	clrf	(??___xxtofl+3)& (0+255),c
  1368  00129E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1369  0012A2  6A07               	clrf	??___xxtofl+2,c
  1370  0012A4  6A06               	clrf	??___xxtofl+1,c
  1371  0012A6  6A05               	clrf	??___xxtofl,c
  1372  0012A8  5005               	movf	??___xxtofl,w,c
  1373  0012AA  120B               	iorwf	___xxtofl@arg,f,c
  1374  0012AC  5006               	movf	??___xxtofl+1,w,c
  1375  0012AE  120C               	iorwf	___xxtofl@arg+1,f,c
  1376  0012B0  5007               	movf	??___xxtofl+2,w,c
  1377  0012B2  120D               	iorwf	___xxtofl@arg+2,f,c
  1378  0012B4  5008               	movf	??___xxtofl+3,w,c
  1379  0012B6  120E               	iorwf	___xxtofl@arg+3,f,c
  1380  0012B8  5009               	movf	___xxtofl@sign,w,c
  1381  0012BA  A4D8               	btfss	status,2,c
  1382  0012BC  AE04               	btfss	___xxtofl@val+3,7,c
  1383  0012BE  D001               	goto	l2282
  1384  0012C0  8E0E               	bsf	___xxtofl@arg+3,7,c
  1385  0012C2                     l2282:
  1386  0012C2  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1387  0012C6  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1388  0012CA  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1389  0012CE  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1390  0012D2  0012               	return		;funcret
  1391  0012D4                     __end_of___xxtofl:
  1392                           	opt callstack 0
  1393                           
  1394 ;; *************** function ___wmul *****************
  1395 ;; Defined at:
  1396 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  multiplier      2    0[COMRAM] unsigned int 
  1399 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  product         2    4[COMRAM] unsigned int 
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  2    0[COMRAM] unsigned int 
  1404 ;; Registers used:
  1405 ;;		wreg, status,2, status,0, prodl, prodh
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1411 ;;      Params:         4       0       0       0       0       0       0       0       0
  1412 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1413 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1414 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1415 ;;Total ram usage:        6 bytes
  1416 ;; Hardware stack levels used:    1
  1417 ;; Hardware stack levels required when called:    1
  1418 ;; This function calls:
  1419 ;;		Nothing
  1420 ;; This function is called by:
  1421 ;;		_conviertemon
  1422 ;;		_calculon
  1423 ;;		_calculon2
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text5
  1428  0018F2                     __ptext5:
  1429                           	opt callstack 0
  1430  0018F2                     ___wmul:
  1431                           	opt callstack 28
  1432                           
  1433                           ;incstack = 0
  1434  0018F2  5001               	movf	___wmul@multiplier,w,c
  1435  0018F4  0203               	mulwf	___wmul@multiplicand,c
  1436  0018F6  CFF3 F005          	movff	prodl,___wmul@product
  1437  0018FA  CFF4 F006          	movff	prodh,___wmul@product+1
  1438  0018FE  5001               	movf	___wmul@multiplier,w,c
  1439  001900  0204               	mulwf	___wmul@multiplicand+1,c
  1440  001902  50F3               	movf	prodl,w,c
  1441  001904  2606               	addwf	___wmul@product+1,f,c
  1442  001906  5002               	movf	___wmul@multiplier+1,w,c
  1443  001908  0203               	mulwf	___wmul@multiplicand,c
  1444  00190A  50F3               	movf	prodl,w,c
  1445  00190C  2606               	addwf	___wmul@product+1,f,c
  1446  00190E  C005  F001         	movff	___wmul@product,?___wmul
  1447  001912  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1448  001916  0012               	return		;funcret
  1449  001918                     __end_of___wmul:
  1450                           	opt callstack 0
  1451                           
  1452 ;; *************** function ___lwdiv *****************
  1453 ;; Defined at:
  1454 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  dividend        2    0[COMRAM] unsigned int 
  1457 ;;  divisor         2    2[COMRAM] unsigned int 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  quotient        2    4[COMRAM] unsigned int 
  1460 ;;  counter         1    6[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  2    0[COMRAM] unsigned int 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1470 ;;      Params:         4       0       0       0       0       0       0       0       0
  1471 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1473 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1474 ;;Total ram usage:        7 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; Hardware stack levels required when called:    1
  1477 ;; This function calls:
  1478 ;;		Nothing
  1479 ;; This function is called by:
  1480 ;;		_calculon
  1481 ;;		_calculon2
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           
  1485                           	psect	text6
  1486  001768                     __ptext6:
  1487                           	opt callstack 0
  1488  001768                     ___lwdiv:
  1489                           	opt callstack 28
  1490                           
  1491                           ;incstack = 0
  1492  001768  0E00               	movlw	0
  1493  00176A  6E06               	movwf	___lwdiv@quotient+1,c
  1494  00176C  0E00               	movlw	0
  1495  00176E  6E05               	movwf	___lwdiv@quotient,c
  1496  001770  5003               	movf	___lwdiv@divisor,w,c
  1497  001772  1004               	iorwf	___lwdiv@divisor+1,w,c
  1498  001774  B4D8               	btfsc	status,2,c
  1499  001776  D01C               	goto	l702
  1500  001778  0E01               	movlw	1
  1501  00177A  6E07               	movwf	___lwdiv@counter,c
  1502  00177C  D004               	goto	l2226
  1503  00177E                     l2224:
  1504  00177E  90D8               	bcf	status,0,c
  1505  001780  3603               	rlcf	___lwdiv@divisor,f,c
  1506  001782  3604               	rlcf	___lwdiv@divisor+1,f,c
  1507  001784  2A07               	incf	___lwdiv@counter,f,c
  1508  001786                     l2226:
  1509  001786  AE04               	btfss	___lwdiv@divisor+1,7,c
  1510  001788  D7FA               	goto	l2224
  1511  00178A                     u1700:
  1512  00178A  90D8               	bcf	status,0,c
  1513  00178C  3605               	rlcf	___lwdiv@quotient,f,c
  1514  00178E  3606               	rlcf	___lwdiv@quotient+1,f,c
  1515  001790  5003               	movf	___lwdiv@divisor,w,c
  1516  001792  5C01               	subwf	___lwdiv@dividend,w,c
  1517  001794  5004               	movf	___lwdiv@divisor+1,w,c
  1518  001796  5802               	subwfb	___lwdiv@dividend+1,w,c
  1519  001798  A0D8               	btfss	status,0,c
  1520  00179A  D005               	goto	l2236
  1521  00179C  5003               	movf	___lwdiv@divisor,w,c
  1522  00179E  5E01               	subwf	___lwdiv@dividend,f,c
  1523  0017A0  5004               	movf	___lwdiv@divisor+1,w,c
  1524  0017A2  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1525  0017A4  8005               	bsf	___lwdiv@quotient,0,c
  1526  0017A6                     l2236:
  1527  0017A6  90D8               	bcf	status,0,c
  1528  0017A8  3204               	rrcf	___lwdiv@divisor+1,f,c
  1529  0017AA  3203               	rrcf	___lwdiv@divisor,f,c
  1530  0017AC  2E07               	decfsz	___lwdiv@counter,f,c
  1531  0017AE  D7ED               	goto	u1700
  1532  0017B0                     l702:
  1533  0017B0  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1534  0017B4  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1535  0017B8  0012               	return		;funcret
  1536  0017BA                     __end_of___lwdiv:
  1537                           	opt callstack 0
  1538                           
  1539 ;; *************** function ___fltol *****************
  1540 ;; Defined at:
  1541 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\fltol.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  f1              4    0[COMRAM] unsigned int 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  exp1            1    9[COMRAM] unsigned char 
  1546 ;;  sign1           1    8[COMRAM] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  4    0[COMRAM] long 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1556 ;;      Params:         4       0       0       0       0       0       0       0       0
  1557 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1558 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1559 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1560 ;;Total ram usage:       10 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; Hardware stack levels required when called:    1
  1563 ;; This function calls:
  1564 ;;		Nothing
  1565 ;; This function is called by:
  1566 ;;		_calculon
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text7
  1571  0014B8                     __ptext7:
  1572                           	opt callstack 0
  1573  0014B8                     ___fltol:
  1574                           	opt callstack 28
  1575                           
  1576                           ;incstack = 0
  1577  0014B8  3403               	rlcf	___fltol@f1+2,w,c
  1578  0014BA  3404               	rlcf	___fltol@f1+3,w,c
  1579  0014BC  6E0A               	movwf	___fltol@exp1,c
  1580  0014BE  500A               	movf	___fltol@exp1,w,c
  1581  0014C0  A4D8               	btfss	status,2,c
  1582  0014C2  D009               	goto	l2180
  1583  0014C4                     u1620:
  1584  0014C4  0E00               	movlw	0
  1585  0014C6  6E01               	movwf	?___fltol,c
  1586  0014C8  0E00               	movlw	0
  1587  0014CA  6E02               	movwf	?___fltol+1,c
  1588  0014CC  0E00               	movlw	0
  1589  0014CE  6E03               	movwf	?___fltol+2,c
  1590  0014D0  0E00               	movlw	0
  1591  0014D2  6E04               	movwf	?___fltol+3,c
  1592  0014D4  0012               	return	
  1593  0014D6                     l2180:
  1594  0014D6  C001  F005         	movff	___fltol@f1,??___fltol
  1595  0014DA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  1596  0014DE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  1597  0014E2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  1598  0014E6  0E20               	movlw	32
  1599  0014E8  D005               	goto	u1630
  1600  0014EA                     u1635:
  1601  0014EA  90D8               	bcf	status,0,c
  1602  0014EC  3208               	rrcf	??___fltol+3,f,c
  1603  0014EE  3207               	rrcf	??___fltol+2,f,c
  1604  0014F0  3206               	rrcf	??___fltol+1,f,c
  1605  0014F2  3205               	rrcf	??___fltol,f,c
  1606  0014F4                     u1630:
  1607  0014F4  2EE8               	decfsz	wreg,f,c
  1608  0014F6  D7F9               	goto	u1635
  1609  0014F8  5005               	movf	??___fltol,w,c
  1610  0014FA  6E09               	movwf	___fltol@sign1,c
  1611  0014FC  8E03               	bsf	___fltol@f1+2,7,c
  1612  0014FE  0EFF               	movlw	255
  1613  001500  1601               	andwf	___fltol@f1,f,c
  1614  001502  0EFF               	movlw	255
  1615  001504  1602               	andwf	___fltol@f1+1,f,c
  1616  001506  0EFF               	movlw	255
  1617  001508  1603               	andwf	___fltol@f1+2,f,c
  1618  00150A  0E00               	movlw	0
  1619  00150C  1604               	andwf	___fltol@f1+3,f,c
  1620  00150E  0E96               	movlw	150
  1621  001510  5E0A               	subwf	___fltol@exp1,f,c
  1622  001512  AE0A               	btfss	___fltol@exp1,7,c
  1623  001514  D00D               	goto	l2200
  1624  001516  500A               	movf	___fltol@exp1,w,c
  1625  001518  0A80               	xorlw	128
  1626  00151A  0F97               	addlw	151
  1627  00151C  A0D8               	btfss	status,0,c
  1628  00151E  D7D2               	goto	u1620
  1629  001520                     l2196:
  1630  001520  90D8               	bcf	status,0,c
  1631  001522  3204               	rrcf	___fltol@f1+3,f,c
  1632  001524  3203               	rrcf	___fltol@f1+2,f,c
  1633  001526  3202               	rrcf	___fltol@f1+1,f,c
  1634  001528  3201               	rrcf	___fltol@f1,f,c
  1635  00152A  3E0A               	incfsz	___fltol@exp1,f,c
  1636  00152C  D7F9               	goto	l2196
  1637  00152E  D00D               	goto	u1670
  1638  001530                     l2200:
  1639  001530  0E1F               	movlw	31
  1640  001532  640A               	cpfsgt	___fltol@exp1,c
  1641  001534  D007               	goto	l2208
  1642  001536  D7C6               	goto	u1620
  1643  001538                     l2206:
  1644  001538  90D8               	bcf	status,0,c
  1645  00153A  3601               	rlcf	___fltol@f1,f,c
  1646  00153C  3602               	rlcf	___fltol@f1+1,f,c
  1647  00153E  3603               	rlcf	___fltol@f1+2,f,c
  1648  001540  3604               	rlcf	___fltol@f1+3,f,c
  1649  001542  060A               	decf	___fltol@exp1,f,c
  1650  001544                     l2208:
  1651  001544  500A               	movf	___fltol@exp1,w,c
  1652  001546  A4D8               	btfss	status,2,c
  1653  001548  D7F7               	goto	l2206
  1654  00154A                     u1670:
  1655  00154A  5009               	movf	___fltol@sign1,w,c
  1656  00154C  B4D8               	btfsc	status,2,c
  1657  00154E  D008               	goto	l2214
  1658  001550  1E04               	comf	___fltol@f1+3,f,c
  1659  001552  1E03               	comf	___fltol@f1+2,f,c
  1660  001554  1E02               	comf	___fltol@f1+1,f,c
  1661  001556  6C01               	negf	___fltol@f1,c
  1662  001558  0E00               	movlw	0
  1663  00155A  2202               	addwfc	___fltol@f1+1,f,c
  1664  00155C  2203               	addwfc	___fltol@f1+2,f,c
  1665  00155E  2204               	addwfc	___fltol@f1+3,f,c
  1666  001560                     l2214:
  1667  001560  C001  F001         	movff	___fltol@f1,?___fltol
  1668  001564  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  1669  001568  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  1670  00156C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  1671  001570  0012               	return		;funcret
  1672  001572                     __end_of___fltol:
  1673                           	opt callstack 0
  1674                           
  1675 ;; *************** function ___flsub *****************
  1676 ;; Defined at:
  1677 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  b               4   39[COMRAM] long 
  1680 ;;  a               4   43[COMRAM] long 
  1681 ;; Auto vars:     Size  Location     Type
  1682 ;;		None
  1683 ;; Return value:  Size  Location     Type
  1684 ;;                  4   39[COMRAM] long 
  1685 ;; Registers used:
  1686 ;;		wreg, status,2, status,0, cstack
  1687 ;; Tracked objects:
  1688 ;;		On entry : 0/0
  1689 ;;		On exit  : 0/0
  1690 ;;		Unchanged: 0/0
  1691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1692 ;;      Params:         8       0       0       0       0       0       0       0       0
  1693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1694 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1695 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1696 ;;Total ram usage:        8 bytes
  1697 ;; Hardware stack levels used:    1
  1698 ;; Hardware stack levels required when called:    2
  1699 ;; This function calls:
  1700 ;;		___fladd
  1701 ;; This function is called by:
  1702 ;;		_calculon
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text8
  1707  0017BA                     __ptext8:
  1708                           	opt callstack 0
  1709  0017BA                     ___flsub:
  1710                           	opt callstack 27
  1711                           
  1712                           ;incstack = 0
  1713  0017BA  0E00               	movlw	0
  1714  0017BC  1A2C               	xorwf	___flsub@a,f,c
  1715  0017BE  0E00               	movlw	0
  1716  0017C0  1A2D               	xorwf	___flsub@a+1,f,c
  1717  0017C2  0E00               	movlw	0
  1718  0017C4  1A2E               	xorwf	___flsub@a+2,f,c
  1719  0017C6  0E80               	movlw	128
  1720  0017C8  1A2F               	xorwf	___flsub@a+3,f,c
  1721  0017CA  C028  F001         	movff	___flsub@b,___fladd@b
  1722  0017CE  C029  F002         	movff	___flsub@b+1,___fladd@b+1
  1723  0017D2  C02A  F003         	movff	___flsub@b+2,___fladd@b+2
  1724  0017D6  C02B  F004         	movff	___flsub@b+3,___fladd@b+3
  1725  0017DA  C02C  F005         	movff	___flsub@a,___fladd@a
  1726  0017DE  C02D  F006         	movff	___flsub@a+1,___fladd@a+1
  1727  0017E2  C02E  F007         	movff	___flsub@a+2,___fladd@a+2
  1728  0017E6  C02F  F008         	movff	___flsub@a+3,___fladd@a+3
  1729  0017EA  ECB2  F005         	call	___fladd	;wreg free
  1730  0017EE  C001  F028         	movff	?___fladd,?___flsub
  1731  0017F2  C002  F029         	movff	?___fladd+1,?___flsub+1
  1732  0017F6  C003  F02A         	movff	?___fladd+2,?___flsub+2
  1733  0017FA  C004  F02B         	movff	?___fladd+3,?___flsub+3
  1734  0017FE  0012               	return		;funcret
  1735  001800                     __end_of___flsub:
  1736                           	opt callstack 0
  1737                           
  1738 ;; *************** function ___fladd *****************
  1739 ;; Defined at:
  1740 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcadd.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  b               4    0[COMRAM] long 
  1743 ;;  a               4    4[COMRAM] long 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  grs             1   15[COMRAM] unsigned char 
  1746 ;;  bexp            1   14[COMRAM] unsigned char 
  1747 ;;  aexp            1   13[COMRAM] unsigned char 
  1748 ;;  signs           1   12[COMRAM] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  4    0[COMRAM] unsigned char 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1758 ;;      Params:         8       0       0       0       0       0       0       0       0
  1759 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1760 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1761 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1762 ;;Total ram usage:       16 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    1
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		___flsub
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text9
  1773  000B64                     __ptext9:
  1774                           	opt callstack 0
  1775  000B64                     ___fladd:
  1776                           	opt callstack 27
  1777                           
  1778                           ;incstack = 0
  1779  000B64  5004               	movf	___fladd@b+3,w,c
  1780  000B66  0B80               	andlw	128
  1781  000B68  6E0D               	movwf	___fladd@signs,c
  1782  000B6A  5004               	movf	___fladd@b+3,w,c
  1783  000B6C  2404               	addwf	___fladd@b+3,w,c
  1784  000B6E  6E0F               	movwf	___fladd@bexp,c
  1785  000B70  BE03               	btfsc	___fladd@b+2,7,c
  1786  000B72  800F               	bsf	___fladd@bexp,0,c
  1787  000B74  500F               	movf	___fladd@bexp,w,c
  1788  000B76  B4D8               	btfsc	status,2,c
  1789  000B78  D00D               	goto	l1802
  1790  000B7A  280F               	incf	___fladd@bexp,w,c
  1791  000B7C  A4D8               	btfss	status,2,c
  1792  000B7E  D008               	goto	l1798
  1793  000B80  0E00               	movlw	0
  1794  000B82  6E01               	movwf	___fladd@b,c
  1795  000B84  0E00               	movlw	0
  1796  000B86  6E02               	movwf	___fladd@b+1,c
  1797  000B88  0E00               	movlw	0
  1798  000B8A  6E03               	movwf	___fladd@b+2,c
  1799  000B8C  0E00               	movlw	0
  1800  000B8E  6E04               	movwf	___fladd@b+3,c
  1801  000B90                     l1798:
  1802  000B90  8E03               	bsf	___fladd@b+2,7,c
  1803  000B92  D006               	goto	L1
  1804  000B94                     l1802:
  1805  000B94  0E00               	movlw	0
  1806  000B96  6E01               	movwf	___fladd@b,c
  1807  000B98  0E00               	movlw	0
  1808  000B9A  6E02               	movwf	___fladd@b+1,c
  1809  000B9C  0E00               	movlw	0
  1810  000B9E  6E03               	movwf	___fladd@b+2,c
  1811  000BA0                     L1:
  1812  000BA0  0E00               	movlw	0
  1813  000BA2  6E04               	movwf	___fladd@b+3,c
  1814  000BA4  5008               	movf	___fladd@a+3,w,c
  1815  000BA6  0B80               	andlw	128
  1816  000BA8  6E0E               	movwf	___fladd@aexp,c
  1817  000BAA  500D               	movf	___fladd@signs,w,c
  1818  000BAC  180E               	xorwf	___fladd@aexp,w,c
  1819  000BAE  A4D8               	btfss	status,2,c
  1820  000BB0  8C0D               	bsf	___fladd@signs,6,c
  1821  000BB2  5008               	movf	___fladd@a+3,w,c
  1822  000BB4  2408               	addwf	___fladd@a+3,w,c
  1823  000BB6  6E0E               	movwf	___fladd@aexp,c
  1824  000BB8  BE07               	btfsc	___fladd@a+2,7,c
  1825  000BBA  800E               	bsf	___fladd@aexp,0,c
  1826  000BBC  500E               	movf	___fladd@aexp,w,c
  1827  000BBE  B4D8               	btfsc	status,2,c
  1828  000BC0  D00D               	goto	l1826
  1829  000BC2  280E               	incf	___fladd@aexp,w,c
  1830  000BC4  A4D8               	btfss	status,2,c
  1831  000BC6  D008               	goto	l1822
  1832  000BC8  0E00               	movlw	0
  1833  000BCA  6E05               	movwf	___fladd@a,c
  1834  000BCC  0E00               	movlw	0
  1835  000BCE  6E06               	movwf	___fladd@a+1,c
  1836  000BD0  0E00               	movlw	0
  1837  000BD2  6E07               	movwf	___fladd@a+2,c
  1838  000BD4  0E00               	movlw	0
  1839  000BD6  6E08               	movwf	___fladd@a+3,c
  1840  000BD8                     l1822:
  1841  000BD8  8E07               	bsf	___fladd@a+2,7,c
  1842  000BDA  D006               	goto	L2
  1843  000BDC                     l1826:
  1844  000BDC  0E00               	movlw	0
  1845  000BDE  6E05               	movwf	___fladd@a,c
  1846  000BE0  0E00               	movlw	0
  1847  000BE2  6E06               	movwf	___fladd@a+1,c
  1848  000BE4  0E00               	movlw	0
  1849  000BE6  6E07               	movwf	___fladd@a+2,c
  1850  000BE8                     L2:
  1851  000BE8  0E00               	movlw	0
  1852  000BEA  6E08               	movwf	___fladd@a+3,c
  1853  000BEC  500F               	movf	___fladd@bexp,w,c
  1854  000BEE  5C0E               	subwf	___fladd@aexp,w,c
  1855  000BF0  B0D8               	btfsc	status,0,c
  1856  000BF2  D022               	goto	l1864
  1857  000BF4  AC0D               	btfss	___fladd@signs,6,c
  1858  000BF6  D002               	goto	l1834
  1859  000BF8  0E80               	movlw	128
  1860  000BFA  1A0D               	xorwf	___fladd@signs,f,c
  1861  000BFC                     l1834:
  1862  000BFC  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  1863  000C00  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1864  000C04  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  1865  000C08  C001  F010         	movff	___fladd@b,___fladd@grs
  1866  000C0C  C005  F001         	movff	___fladd@a,___fladd@b
  1867  000C10  C010  F005         	movff	___fladd@grs,___fladd@a
  1868  000C14  C002  F010         	movff	___fladd@b+1,___fladd@grs
  1869  000C18  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  1870  000C1C  C010  F006         	movff	___fladd@grs,___fladd@a+1
  1871  000C20  C003  F010         	movff	___fladd@b+2,___fladd@grs
  1872  000C24  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  1873  000C28  C010  F007         	movff	___fladd@grs,___fladd@a+2
  1874  000C2C  C004  F010         	movff	___fladd@b+3,___fladd@grs
  1875  000C30  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  1876  000C34  C010  F008         	movff	___fladd@grs,___fladd@a+3
  1877  000C38                     l1864:
  1878  000C38  0E00               	movlw	0
  1879  000C3A  6E10               	movwf	___fladd@grs,c
  1880  000C3C  500F               	movf	___fladd@bexp,w,c
  1881  000C3E  C00E  F009         	movff	___fladd@aexp,??___fladd
  1882  000C42  6A0A               	clrf	(??___fladd+1)& (0+255),c
  1883  000C44  5E09               	subwf	??___fladd,f,c
  1884  000C46  0E00               	movlw	0
  1885  000C48  5A0A               	subwfb	??___fladd+1,f,c
  1886  000C4A  BE0A               	btfsc	??___fladd+1,7,c
  1887  000C4C  D02C               	goto	l740
  1888  000C4E  500A               	movf	??___fladd+1,w,c
  1889  000C50  E104               	bnz	u1070
  1890  000C52  0E1A               	movlw	26
  1891  000C54  5C09               	subwf	??___fladd,w,c
  1892  000C56  A0D8               	btfss	status,0,c
  1893  000C58  D026               	goto	l740
  1894  000C5A                     u1070:
  1895  000C5A  5001               	movf	___fladd@b,w,c
  1896  000C5C  1002               	iorwf	___fladd@b+1,w,c
  1897  000C5E  1003               	iorwf	___fladd@b+2,w,c
  1898  000C60  1004               	iorwf	___fladd@b+3,w,c
  1899  000C62  B4D8               	btfsc	status,2,c
  1900  000C64  D002               	goto	u1080
  1901  000C66  0E01               	movlw	1
  1902  000C68  D001               	goto	u1090
  1903  000C6A                     u1080:
  1904  000C6A  0E00               	movlw	0
  1905  000C6C                     u1090:
  1906  000C6C  6E10               	movwf	___fladd@grs,c
  1907  000C6E  0E00               	movlw	0
  1908  000C70  6E01               	movwf	___fladd@b,c
  1909  000C72  0E00               	movlw	0
  1910  000C74  6E02               	movwf	___fladd@b+1,c
  1911  000C76  0E00               	movlw	0
  1912  000C78  6E03               	movwf	___fladd@b+2,c
  1913  000C7A  0E00               	movlw	0
  1914  000C7C  6E04               	movwf	___fladd@b+3,c
  1915  000C7E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  1916  000C82  D015               	goto	u1120
  1917  000C84                     l741:
  1918  000C84  A010               	btfss	___fladd@grs,0,c
  1919  000C86  D005               	goto	l1876
  1920  000C88  90D8               	bcf	status,0,c
  1921  000C8A  3010               	rrcf	___fladd@grs,w,c
  1922  000C8C  0901               	iorlw	1
  1923  000C8E  6E10               	movwf	___fladd@grs,c
  1924  000C90  D002               	goto	l1878
  1925  000C92                     l1876:
  1926  000C92  90D8               	bcf	status,0,c
  1927  000C94  3210               	rrcf	___fladd@grs,f,c
  1928  000C96                     l1878:
  1929  000C96  B001               	btfsc	___fladd@b,0,c
  1930  000C98  8E10               	bsf	___fladd@grs,7,c
  1931  000C9A  3404               	rlcf	___fladd@b+3,w,c
  1932  000C9C  3204               	rrcf	___fladd@b+3,f,c
  1933  000C9E  3203               	rrcf	___fladd@b+2,f,c
  1934  000CA0  3202               	rrcf	___fladd@b+1,f,c
  1935  000CA2  3201               	rrcf	___fladd@b,f,c
  1936  000CA4  2A0F               	incf	___fladd@bexp,f,c
  1937  000CA6                     l740:
  1938  000CA6  500E               	movf	___fladd@aexp,w,c
  1939  000CA8  5C0F               	subwf	___fladd@bexp,w,c
  1940  000CAA  A0D8               	btfss	status,0,c
  1941  000CAC  D7EB               	goto	l741
  1942  000CAE                     u1120:
  1943  000CAE  BC0D               	btfsc	___fladd@signs,6,c
  1944  000CB0  D028               	goto	l1910
  1945  000CB2  500F               	movf	___fladd@bexp,w,c
  1946  000CB4  A4D8               	btfss	status,2,c
  1947  000CB6  D009               	goto	l1892
  1948  000CB8  0E00               	movlw	0
  1949  000CBA  6E01               	movwf	?___fladd,c
  1950  000CBC  0E00               	movlw	0
  1951  000CBE  6E02               	movwf	?___fladd+1,c
  1952  000CC0  0E00               	movlw	0
  1953  000CC2  6E03               	movwf	?___fladd+2,c
  1954  000CC4  0E00               	movlw	0
  1955  000CC6  6E04               	movwf	?___fladd+3,c
  1956  000CC8  0012               	return	
  1957  000CCA                     l1892:
  1958  000CCA  5005               	movf	___fladd@a,w,c
  1959  000CCC  2601               	addwf	___fladd@b,f,c
  1960  000CCE  5006               	movf	___fladd@a+1,w,c
  1961  000CD0  2202               	addwfc	___fladd@b+1,f,c
  1962  000CD2  5007               	movf	___fladd@a+2,w,c
  1963  000CD4  2203               	addwfc	___fladd@b+2,f,c
  1964  000CD6  5008               	movf	___fladd@a+3,w,c
  1965  000CD8  2204               	addwfc	___fladd@b+3,f,c
  1966  000CDA  A004               	btfss	___fladd@b+3,0,c
  1967  000CDC  D071               	goto	u1250
  1968  000CDE  A010               	btfss	___fladd@grs,0,c
  1969  000CE0  D005               	goto	l1900
  1970  000CE2  90D8               	bcf	status,0,c
  1971  000CE4  3010               	rrcf	___fladd@grs,w,c
  1972  000CE6  0901               	iorlw	1
  1973  000CE8  6E10               	movwf	___fladd@grs,c
  1974  000CEA  D002               	goto	l1902
  1975  000CEC                     l1900:
  1976  000CEC  90D8               	bcf	status,0,c
  1977  000CEE  3210               	rrcf	___fladd@grs,f,c
  1978  000CF0                     l1902:
  1979  000CF0  B001               	btfsc	___fladd@b,0,c
  1980  000CF2  8E10               	bsf	___fladd@grs,7,c
  1981  000CF4  3404               	rlcf	___fladd@b+3,w,c
  1982  000CF6  3204               	rrcf	___fladd@b+3,f,c
  1983  000CF8  3203               	rrcf	___fladd@b+2,f,c
  1984  000CFA  3202               	rrcf	___fladd@b+1,f,c
  1985  000CFC  3201               	rrcf	___fladd@b,f,c
  1986  000CFE  2A0F               	incf	___fladd@bexp,f,c
  1987  000D00  D05F               	goto	u1250
  1988  000D02                     l1910:
  1989  000D02  5005               	movf	___fladd@a,w,c
  1990  000D04  5C01               	subwf	___fladd@b,w,c
  1991  000D06  5006               	movf	___fladd@a+1,w,c
  1992  000D08  5802               	subwfb	___fladd@b+1,w,c
  1993  000D0A  5007               	movf	___fladd@a+2,w,c
  1994  000D0C  5803               	subwfb	___fladd@b+2,w,c
  1995  000D0E  5004               	movf	___fladd@b+3,w,c
  1996  000D10  0A80               	xorlw	128
  1997  000D12  6E09               	movwf	??___fladd& (0+255),c
  1998  000D14  5008               	movf	___fladd@a+3,w,c
  1999  000D16  0A80               	xorlw	128
  2000  000D18  5809               	subwfb	??___fladd& (0+255),w,c
  2001  000D1A  B0D8               	btfsc	status,0,c
  2002  000D1C  D025               	goto	l1920
  2003  000D1E  5001               	movf	___fladd@b,w,c
  2004  000D20  5C05               	subwf	___fladd@a,w,c
  2005  000D22  6E09               	movwf	??___fladd& (0+255),c
  2006  000D24  5002               	movf	___fladd@b+1,w,c
  2007  000D26  5806               	subwfb	___fladd@a+1,w,c
  2008  000D28  6E0A               	movwf	(??___fladd+1)& (0+255),c
  2009  000D2A  5003               	movf	___fladd@b+2,w,c
  2010  000D2C  5807               	subwfb	___fladd@a+2,w,c
  2011  000D2E  6E0B               	movwf	(??___fladd+2)& (0+255),c
  2012  000D30  5004               	movf	___fladd@b+3,w,c
  2013  000D32  5808               	subwfb	___fladd@a+3,w,c
  2014  000D34  6E0C               	movwf	(??___fladd+3)& (0+255),c
  2015  000D36  0EFF               	movlw	255
  2016  000D38  2409               	addwf	??___fladd,w,c
  2017  000D3A  6E01               	movwf	___fladd@b,c
  2018  000D3C  0EFF               	movlw	255
  2019  000D3E  200A               	addwfc	??___fladd+1,w,c
  2020  000D40  6E02               	movwf	___fladd@b+1,c
  2021  000D42  0EFF               	movlw	255
  2022  000D44  200B               	addwfc	??___fladd+2,w,c
  2023  000D46  6E03               	movwf	___fladd@b+2,c
  2024  000D48  0EFF               	movlw	255
  2025  000D4A  200C               	addwfc	??___fladd+3,w,c
  2026  000D4C  6E04               	movwf	___fladd@b+3,c
  2027  000D4E  0E80               	movlw	128
  2028  000D50  1A0D               	xorwf	___fladd@signs,f,c
  2029  000D52  6C10               	negf	___fladd@grs,c
  2030  000D54  5010               	movf	___fladd@grs,w,c
  2031  000D56  A4D8               	btfss	status,2,c
  2032  000D58  D00F               	goto	l756
  2033  000D5A  0E01               	movlw	1
  2034  000D5C  2601               	addwf	___fladd@b,f,c
  2035  000D5E  0E00               	movlw	0
  2036  000D60  2202               	addwfc	___fladd@b+1,f,c
  2037  000D62  2203               	addwfc	___fladd@b+2,f,c
  2038  000D64  2204               	addwfc	___fladd@b+3,f,c
  2039  000D66  D008               	goto	l756
  2040  000D68                     l1920:
  2041  000D68  5005               	movf	___fladd@a,w,c
  2042  000D6A  5E01               	subwf	___fladd@b,f,c
  2043  000D6C  5006               	movf	___fladd@a+1,w,c
  2044  000D6E  5A02               	subwfb	___fladd@b+1,f,c
  2045  000D70  5007               	movf	___fladd@a+2,w,c
  2046  000D72  5A03               	subwfb	___fladd@b+2,f,c
  2047  000D74  5008               	movf	___fladd@a+3,w,c
  2048  000D76  5A04               	subwfb	___fladd@b+3,f,c
  2049  000D78                     l756:
  2050  000D78  5001               	movf	___fladd@b,w,c
  2051  000D7A  1002               	iorwf	___fladd@b+1,w,c
  2052  000D7C  1003               	iorwf	___fladd@b+2,w,c
  2053  000D7E  1004               	iorwf	___fladd@b+3,w,c
  2054  000D80  A4D8               	btfss	status,2,c
  2055  000D82  D01C               	goto	l1944
  2056  000D84  5010               	movf	___fladd@grs,w,c
  2057  000D86  A4D8               	btfss	status,2,c
  2058  000D88  D019               	goto	l1944
  2059  000D8A  0E00               	movlw	0
  2060  000D8C  6E01               	movwf	?___fladd,c
  2061  000D8E  0E00               	movlw	0
  2062  000D90  6E02               	movwf	?___fladd+1,c
  2063  000D92  0E00               	movlw	0
  2064  000D94  6E03               	movwf	?___fladd+2,c
  2065  000D96  0E00               	movlw	0
  2066  000D98  6E04               	movwf	?___fladd+3,c
  2067  000D9A  0012               	return	
  2068  000D9C                     l1928:
  2069  000D9C  90D8               	bcf	status,0,c
  2070  000D9E  3601               	rlcf	___fladd@b,f,c
  2071  000DA0  3602               	rlcf	___fladd@b+1,f,c
  2072  000DA2  3603               	rlcf	___fladd@b+2,f,c
  2073  000DA4  3604               	rlcf	___fladd@b+3,f,c
  2074  000DA6  BE10               	btfsc	___fladd@grs,7,c
  2075  000DA8  8001               	bsf	___fladd@b,0,c
  2076  000DAA  A010               	btfss	___fladd@grs,0,c
  2077  000DAC  D002               	goto	l1938
  2078  000DAE  80D8               	bsf	status,0,c
  2079  000DB0  D001               	goto	L3
  2080  000DB2                     l1938:
  2081  000DB2  90D8               	bcf	status,0,c
  2082  000DB4                     L3:
  2083  000DB4  3610               	rlcf	___fladd@grs,f,c
  2084  000DB6  500F               	movf	___fladd@bexp,w,c
  2085  000DB8  A4D8               	btfss	status,2,c
  2086  000DBA  060F               	decf	___fladd@bexp,f,c
  2087  000DBC                     l1944:
  2088  000DBC  AE03               	btfss	___fladd@b+2,7,c
  2089  000DBE  D7EE               	goto	l1928
  2090  000DC0                     u1250:
  2091  000DC0  0E00               	movlw	0
  2092  000DC2  6E0E               	movwf	___fladd@aexp,c
  2093  000DC4  AE10               	btfss	___fladd@grs,7,c
  2094  000DC6  D00B               	goto	l765
  2095  000DC8  C010  F009         	movff	___fladd@grs,??___fladd
  2096  000DCC  0E7F               	movlw	127
  2097  000DCE  1609               	andwf	??___fladd,f,c
  2098  000DD0  B4D8               	btfsc	status,2,c
  2099  000DD2  D003               	goto	l766
  2100  000DD4                     u1270:
  2101  000DD4  0E01               	movlw	1
  2102  000DD6  6E0E               	movwf	___fladd@aexp,c
  2103  000DD8  D002               	goto	l765
  2104  000DDA                     l766:
  2105  000DDA  B001               	btfsc	___fladd@b,0,c
  2106  000DDC  D7FB               	goto	u1270
  2107  000DDE                     l765:
  2108  000DDE  500E               	movf	___fladd@aexp,w,c
  2109  000DE0  B4D8               	btfsc	status,2,c
  2110  000DE2  D020               	goto	l1964
  2111  000DE4  0E01               	movlw	1
  2112  000DE6  2601               	addwf	___fladd@b,f,c
  2113  000DE8  0E00               	movlw	0
  2114  000DEA  2202               	addwfc	___fladd@b+1,f,c
  2115  000DEC  2203               	addwfc	___fladd@b+2,f,c
  2116  000DEE  2204               	addwfc	___fladd@b+3,f,c
  2117  000DF0  A004               	btfss	___fladd@b+3,0,c
  2118  000DF2  D018               	goto	l1964
  2119  000DF4  C001  F009         	movff	___fladd@b,??___fladd
  2120  000DF8  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  2121  000DFC  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  2122  000E00  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  2123  000E04  340C               	rlcf	??___fladd+3,w,c
  2124  000E06  320C               	rrcf	??___fladd+3,f,c
  2125  000E08  320B               	rrcf	??___fladd+2,f,c
  2126  000E0A  320A               	rrcf	??___fladd+1,f,c
  2127  000E0C  3209               	rrcf	??___fladd,f,c
  2128  000E0E  C009  F001         	movff	??___fladd,___fladd@b
  2129  000E12  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  2130  000E16  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  2131  000E1A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  2132  000E1E  280F               	incf	___fladd@bexp,w,c
  2133  000E20  A4D8               	btfss	status,2,c
  2134  000E22  2A0F               	incf	___fladd@bexp,f,c
  2135  000E24                     l1964:
  2136  000E24  280F               	incf	___fladd@bexp,w,c
  2137  000E26  B4D8               	btfsc	status,2,c
  2138  000E28  D003               	goto	u1330
  2139  000E2A  500F               	movf	___fladd@bexp,w,c
  2140  000E2C  A4D8               	btfss	status,2,c
  2141  000E2E  D00D               	goto	l1972
  2142  000E30                     u1330:
  2143  000E30  0E00               	movlw	0
  2144  000E32  6E01               	movwf	___fladd@b,c
  2145  000E34  0E00               	movlw	0
  2146  000E36  6E02               	movwf	___fladd@b+1,c
  2147  000E38  0E00               	movlw	0
  2148  000E3A  6E03               	movwf	___fladd@b+2,c
  2149  000E3C  0E00               	movlw	0
  2150  000E3E  6E04               	movwf	___fladd@b+3,c
  2151  000E40  500F               	movf	___fladd@bexp,w,c
  2152  000E42  A4D8               	btfss	status,2,c
  2153  000E44  D002               	goto	l1972
  2154  000E46  0E00               	movlw	0
  2155  000E48  6E0D               	movwf	___fladd@signs,c
  2156  000E4A                     l1972:
  2157  000E4A  A00F               	btfss	___fladd@bexp,0,c
  2158  000E4C  D002               	goto	l1976
  2159  000E4E  8E03               	bsf	___fladd@b+2,7,c
  2160  000E50  D001               	goto	l1978
  2161  000E52                     l1976:
  2162  000E52  9E03               	bcf	___fladd@b+2,7,c
  2163  000E54                     l1978:
  2164  000E54  90D8               	bcf	status,0,c
  2165  000E56  300F               	rrcf	___fladd@bexp,w,c
  2166  000E58  6E04               	movwf	___fladd@b+3,c
  2167  000E5A  BE0D               	btfsc	___fladd@signs,7,c
  2168  000E5C  8E04               	bsf	___fladd@b+3,7,c
  2169  000E5E  C001  F001         	movff	___fladd@b,?___fladd
  2170  000E62  C002  F002         	movff	___fladd@b+1,?___fladd+1
  2171  000E66  C003  F003         	movff	___fladd@b+2,?___fladd+2
  2172  000E6A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  2173  000E6E  0012               	return		;funcret
  2174  000E70                     __end_of___fladd:
  2175                           	opt callstack 0
  2176                           
  2177 ;; *************** function ___flmul *****************
  2178 ;; Defined at:
  2179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\sprcmul.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  b               4   14[COMRAM] unsigned char 
  2182 ;;  a               4   18[COMRAM] unsigned char 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  prod            4   33[COMRAM] struct .
  2185 ;;  grs             4   27[COMRAM] unsigned long 
  2186 ;;  temp            2   37[COMRAM] struct .
  2187 ;;  bexp            1   32[COMRAM] unsigned char 
  2188 ;;  aexp            1   31[COMRAM] unsigned char 
  2189 ;;  sign            1   26[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  4   14[COMRAM] unsigned char 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, prodl, prodh
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2199 ;;      Params:         8       0       0       0       0       0       0       0       0
  2200 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2201 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2202 ;;      Totals:        25       0       0       0       0       0       0       0       0
  2203 ;;Total ram usage:       25 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    1
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_calculon
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text10
  2214  000812                     __ptext10:
  2215                           	opt callstack 0
  2216  000812                     ___flmul:
  2217                           	opt callstack 28
  2218                           
  2219                           ;incstack = 0
  2220  000812  5012               	movf	___flmul@b+3,w,c
  2221  000814  0B80               	andlw	128
  2222  000816  6E1B               	movwf	___flmul@sign,c
  2223  000818  5012               	movf	___flmul@b+3,w,c
  2224  00081A  2412               	addwf	___flmul@b+3,w,c
  2225  00081C  6E21               	movwf	___flmul@bexp,c
  2226  00081E  BE11               	btfsc	___flmul@b+2,7,c
  2227  000820  8021               	bsf	___flmul@bexp,0,c
  2228  000822  5021               	movf	___flmul@bexp,w,c
  2229  000824  B4D8               	btfsc	status,2,c
  2230  000826  D00D               	goto	l2008
  2231  000828  2821               	incf	___flmul@bexp,w,c
  2232  00082A  A4D8               	btfss	status,2,c
  2233  00082C  D008               	goto	l2006
  2234  00082E  0E00               	movlw	0
  2235  000830  6E0F               	movwf	___flmul@b,c
  2236  000832  0E00               	movlw	0
  2237  000834  6E10               	movwf	___flmul@b+1,c
  2238  000836  0E00               	movlw	0
  2239  000838  6E11               	movwf	___flmul@b+2,c
  2240  00083A  0E00               	movlw	0
  2241  00083C  6E12               	movwf	___flmul@b+3,c
  2242  00083E                     l2006:
  2243  00083E  8E11               	bsf	___flmul@b+2,7,c
  2244  000840  D008               	goto	l2010
  2245  000842                     l2008:
  2246  000842  0E00               	movlw	0
  2247  000844  6E0F               	movwf	___flmul@b,c
  2248  000846  0E00               	movlw	0
  2249  000848  6E10               	movwf	___flmul@b+1,c
  2250  00084A  0E00               	movlw	0
  2251  00084C  6E11               	movwf	___flmul@b+2,c
  2252  00084E  0E00               	movlw	0
  2253  000850  6E12               	movwf	___flmul@b+3,c
  2254  000852                     l2010:
  2255  000852  5016               	movf	___flmul@a+3,w,c
  2256  000854  0B80               	andlw	128
  2257  000856  1A1B               	xorwf	___flmul@sign,f,c
  2258  000858  5016               	movf	___flmul@a+3,w,c
  2259  00085A  2416               	addwf	___flmul@a+3,w,c
  2260  00085C  6E20               	movwf	___flmul@aexp,c
  2261  00085E  BE15               	btfsc	___flmul@a+2,7,c
  2262  000860  8020               	bsf	___flmul@aexp,0,c
  2263  000862  5020               	movf	___flmul@aexp,w,c
  2264  000864  B4D8               	btfsc	status,2,c
  2265  000866  D00D               	goto	l2026
  2266  000868  2820               	incf	___flmul@aexp,w,c
  2267  00086A  A4D8               	btfss	status,2,c
  2268  00086C  D008               	goto	l2024
  2269  00086E  0E00               	movlw	0
  2270  000870  6E13               	movwf	___flmul@a,c
  2271  000872  0E00               	movlw	0
  2272  000874  6E14               	movwf	___flmul@a+1,c
  2273  000876  0E00               	movlw	0
  2274  000878  6E15               	movwf	___flmul@a+2,c
  2275  00087A  0E00               	movlw	0
  2276  00087C  6E16               	movwf	___flmul@a+3,c
  2277  00087E                     l2024:
  2278  00087E  8E15               	bsf	___flmul@a+2,7,c
  2279  000880  D008               	goto	l825
  2280  000882                     l2026:
  2281  000882  0E00               	movlw	0
  2282  000884  6E13               	movwf	___flmul@a,c
  2283  000886  0E00               	movlw	0
  2284  000888  6E14               	movwf	___flmul@a+1,c
  2285  00088A  0E00               	movlw	0
  2286  00088C  6E15               	movwf	___flmul@a+2,c
  2287  00088E  0E00               	movlw	0
  2288  000890  6E16               	movwf	___flmul@a+3,c
  2289  000892                     l825:
  2290  000892  5020               	movf	___flmul@aexp,w,c
  2291  000894  B4D8               	btfsc	status,2,c
  2292  000896  D003               	goto	u1440
  2293  000898  5021               	movf	___flmul@bexp,w,c
  2294  00089A  A4D8               	btfss	status,2,c
  2295  00089C  D009               	goto	l2034
  2296  00089E                     u1440:
  2297  00089E  0E00               	movlw	0
  2298  0008A0  6E0F               	movwf	?___flmul,c
  2299  0008A2  0E00               	movlw	0
  2300  0008A4  6E10               	movwf	?___flmul+1,c
  2301  0008A6  0E00               	movlw	0
  2302  0008A8  6E11               	movwf	?___flmul+2,c
  2303  0008AA  0E00               	movlw	0
  2304  0008AC  6E12               	movwf	?___flmul+3,c
  2305  0008AE  0012               	return	
  2306  0008B0                     l2034:
  2307  0008B0  5015               	movf	___flmul@a+2,w,c
  2308  0008B2  020F               	mulwf	___flmul@b,c
  2309  0008B4  CFF3 F026          	movff	prodl,___flmul@temp
  2310  0008B8  CFF4 F027          	movff	prodh,___flmul@temp+1
  2311  0008BC  5026               	movf	___flmul@temp,w,c
  2312  0008BE  6E1C               	movwf	___flmul@grs,c
  2313  0008C0  6A1D               	clrf	___flmul@grs+1,c
  2314  0008C2  6A1E               	clrf	___flmul@grs+2,c
  2315  0008C4  6A1F               	clrf	___flmul@grs+3,c
  2316  0008C6  5027               	movf	___flmul@temp+1,w,c
  2317  0008C8  6E22               	movwf	___flmul@prod,c
  2318  0008CA  6A23               	clrf	___flmul@prod+1,c
  2319  0008CC  6A24               	clrf	___flmul@prod+2,c
  2320  0008CE  6A25               	clrf	___flmul@prod+3,c
  2321  0008D0  5014               	movf	___flmul@a+1,w,c
  2322  0008D2  0210               	mulwf	___flmul@b+1,c
  2323  0008D4  CFF3 F026          	movff	prodl,___flmul@temp
  2324  0008D8  CFF4 F027          	movff	prodh,___flmul@temp+1
  2325  0008DC  5026               	movf	___flmul@temp,w,c
  2326  0008DE  261C               	addwf	___flmul@grs,f,c
  2327  0008E0  0E00               	movlw	0
  2328  0008E2  221D               	addwfc	___flmul@grs+1,f,c
  2329  0008E4  221E               	addwfc	___flmul@grs+2,f,c
  2330  0008E6  221F               	addwfc	___flmul@grs+3,f,c
  2331  0008E8  5027               	movf	___flmul@temp+1,w,c
  2332  0008EA  2622               	addwf	___flmul@prod,f,c
  2333  0008EC  0E00               	movlw	0
  2334  0008EE  2223               	addwfc	___flmul@prod+1,f,c
  2335  0008F0  2224               	addwfc	___flmul@prod+2,f,c
  2336  0008F2  2225               	addwfc	___flmul@prod+3,f,c
  2337  0008F4  5013               	movf	___flmul@a,w,c
  2338  0008F6  0211               	mulwf	___flmul@b+2,c
  2339  0008F8  CFF3 F026          	movff	prodl,___flmul@temp
  2340  0008FC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2341  000900  5026               	movf	___flmul@temp,w,c
  2342  000902  261C               	addwf	___flmul@grs,f,c
  2343  000904  0E00               	movlw	0
  2344  000906  221D               	addwfc	___flmul@grs+1,f,c
  2345  000908  221E               	addwfc	___flmul@grs+2,f,c
  2346  00090A  221F               	addwfc	___flmul@grs+3,f,c
  2347  00090C  5027               	movf	___flmul@temp+1,w,c
  2348  00090E  2622               	addwf	___flmul@prod,f,c
  2349  000910  0E00               	movlw	0
  2350  000912  2223               	addwfc	___flmul@prod+1,f,c
  2351  000914  2224               	addwfc	___flmul@prod+2,f,c
  2352  000916  2225               	addwfc	___flmul@prod+3,f,c
  2353  000918  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2354  00091C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2355  000920  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2356  000924  6A1C               	clrf	___flmul@grs,c
  2357  000926  5013               	movf	___flmul@a,w,c
  2358  000928  0210               	mulwf	___flmul@b+1,c
  2359  00092A  CFF3 F026          	movff	prodl,___flmul@temp
  2360  00092E  CFF4 F027          	movff	prodh,___flmul@temp+1
  2361  000932  5026               	movf	___flmul@temp,w,c
  2362  000934  261C               	addwf	___flmul@grs,f,c
  2363  000936  5027               	movf	___flmul@temp+1,w,c
  2364  000938  221D               	addwfc	___flmul@grs+1,f,c
  2365  00093A  0E00               	movlw	0
  2366  00093C  221E               	addwfc	___flmul@grs+2,f,c
  2367  00093E  0E00               	movlw	0
  2368  000940  221F               	addwfc	___flmul@grs+3,f,c
  2369  000942  5014               	movf	___flmul@a+1,w,c
  2370  000944  020F               	mulwf	___flmul@b,c
  2371  000946  CFF3 F026          	movff	prodl,___flmul@temp
  2372  00094A  CFF4 F027          	movff	prodh,___flmul@temp+1
  2373  00094E  5026               	movf	___flmul@temp,w,c
  2374  000950  261C               	addwf	___flmul@grs,f,c
  2375  000952  5027               	movf	___flmul@temp+1,w,c
  2376  000954  221D               	addwfc	___flmul@grs+1,f,c
  2377  000956  0E00               	movlw	0
  2378  000958  221E               	addwfc	___flmul@grs+2,f,c
  2379  00095A  0E00               	movlw	0
  2380  00095C  221F               	addwfc	___flmul@grs+3,f,c
  2381  00095E  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2382  000962  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2383  000966  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2384  00096A  6A1C               	clrf	___flmul@grs,c
  2385  00096C  5013               	movf	___flmul@a,w,c
  2386  00096E  020F               	mulwf	___flmul@b,c
  2387  000970  CFF3 F026          	movff	prodl,___flmul@temp
  2388  000974  CFF4 F027          	movff	prodh,___flmul@temp+1
  2389  000978  5026               	movf	___flmul@temp,w,c
  2390  00097A  261C               	addwf	___flmul@grs,f,c
  2391  00097C  5027               	movf	___flmul@temp+1,w,c
  2392  00097E  221D               	addwfc	___flmul@grs+1,f,c
  2393  000980  0E00               	movlw	0
  2394  000982  221E               	addwfc	___flmul@grs+2,f,c
  2395  000984  0E00               	movlw	0
  2396  000986  221F               	addwfc	___flmul@grs+3,f,c
  2397  000988  5015               	movf	___flmul@a+2,w,c
  2398  00098A  0210               	mulwf	___flmul@b+1,c
  2399  00098C  CFF3 F026          	movff	prodl,___flmul@temp
  2400  000990  CFF4 F027          	movff	prodh,___flmul@temp+1
  2401  000994  5026               	movf	___flmul@temp,w,c
  2402  000996  2622               	addwf	___flmul@prod,f,c
  2403  000998  5027               	movf	___flmul@temp+1,w,c
  2404  00099A  2223               	addwfc	___flmul@prod+1,f,c
  2405  00099C  0E00               	movlw	0
  2406  00099E  2224               	addwfc	___flmul@prod+2,f,c
  2407  0009A0  0E00               	movlw	0
  2408  0009A2  2225               	addwfc	___flmul@prod+3,f,c
  2409  0009A4  5014               	movf	___flmul@a+1,w,c
  2410  0009A6  0211               	mulwf	___flmul@b+2,c
  2411  0009A8  CFF3 F026          	movff	prodl,___flmul@temp
  2412  0009AC  CFF4 F027          	movff	prodh,___flmul@temp+1
  2413  0009B0  5026               	movf	___flmul@temp,w,c
  2414  0009B2  2622               	addwf	___flmul@prod,f,c
  2415  0009B4  5027               	movf	___flmul@temp+1,w,c
  2416  0009B6  2223               	addwfc	___flmul@prod+1,f,c
  2417  0009B8  0E00               	movlw	0
  2418  0009BA  2224               	addwfc	___flmul@prod+2,f,c
  2419  0009BC  0E00               	movlw	0
  2420  0009BE  2225               	addwfc	___flmul@prod+3,f,c
  2421  0009C0  5015               	movf	___flmul@a+2,w,c
  2422  0009C2  0211               	mulwf	___flmul@b+2,c
  2423  0009C4  CFF3 F026          	movff	prodl,___flmul@temp
  2424  0009C8  CFF4 F027          	movff	prodh,___flmul@temp+1
  2425  0009CC  5026               	movf	___flmul@temp,w,c
  2426  0009CE  6E17               	movwf	??___flmul& (0+255),c
  2427  0009D0  5027               	movf	___flmul@temp+1,w,c
  2428  0009D2  6E18               	movwf	(??___flmul+1)& (0+255),c
  2429  0009D4  6A19               	clrf	(??___flmul+2)& (0+255),c
  2430  0009D6  6A1A               	clrf	(??___flmul+3)& (0+255),c
  2431  0009D8  C019  F01A         	movff	??___flmul+2,??___flmul+3
  2432  0009DC  C018  F019         	movff	??___flmul+1,??___flmul+2
  2433  0009E0  C017  F018         	movff	??___flmul,??___flmul+1
  2434  0009E4  6A17               	clrf	??___flmul,c
  2435  0009E6  5017               	movf	??___flmul,w,c
  2436  0009E8  2622               	addwf	___flmul@prod,f,c
  2437  0009EA  5018               	movf	??___flmul+1,w,c
  2438  0009EC  2223               	addwfc	___flmul@prod+1,f,c
  2439  0009EE  5019               	movf	??___flmul+2,w,c
  2440  0009F0  2224               	addwfc	___flmul@prod+2,f,c
  2441  0009F2  501A               	movf	??___flmul+3,w,c
  2442  0009F4  2225               	addwfc	___flmul@prod+3,f,c
  2443  0009F6  C01C  F017         	movff	___flmul@grs,??___flmul
  2444  0009FA  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  2445  0009FE  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  2446  000A02  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  2447  000A06  0E19               	movlw	25
  2448  000A08  D005               	goto	u1450
  2449  000A0A                     u1455:
  2450  000A0A  90D8               	bcf	status,0,c
  2451  000A0C  321A               	rrcf	??___flmul+3,f,c
  2452  000A0E  3219               	rrcf	??___flmul+2,f,c
  2453  000A10  3218               	rrcf	??___flmul+1,f,c
  2454  000A12  3217               	rrcf	??___flmul,f,c
  2455  000A14                     u1450:
  2456  000A14  2EE8               	decfsz	wreg,f,c
  2457  000A16  D7F9               	goto	u1455
  2458  000A18  5017               	movf	??___flmul,w,c
  2459  000A1A  2622               	addwf	___flmul@prod,f,c
  2460  000A1C  5018               	movf	??___flmul+1,w,c
  2461  000A1E  2223               	addwfc	___flmul@prod+1,f,c
  2462  000A20  5019               	movf	??___flmul+2,w,c
  2463  000A22  2224               	addwfc	___flmul@prod+2,f,c
  2464  000A24  501A               	movf	??___flmul+3,w,c
  2465  000A26  2225               	addwfc	___flmul@prod+3,f,c
  2466  000A28  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  2467  000A2C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  2468  000A30  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  2469  000A34  6A1C               	clrf	___flmul@grs,c
  2470  000A36  5020               	movf	___flmul@aexp,w,c
  2471  000A38  C021  F017         	movff	___flmul@bexp,??___flmul
  2472  000A3C  6A18               	clrf	(??___flmul+1)& (0+255),c
  2473  000A3E  2617               	addwf	??___flmul,f,c
  2474  000A40  0E00               	movlw	0
  2475  000A42  2218               	addwfc	??___flmul+1,f,c
  2476  000A44  0E82               	movlw	130
  2477  000A46  2417               	addwf	??___flmul,w,c
  2478  000A48  6E26               	movwf	___flmul@temp,c
  2479  000A4A  0EFF               	movlw	255
  2480  000A4C  2018               	addwfc	??___flmul+1,w,c
  2481  000A4E  6E27               	movwf	___flmul@temp+1,c
  2482  000A50  D00F               	goto	l2082
  2483  000A52                     l2076:
  2484  000A52  90D8               	bcf	status,0,c
  2485  000A54  3622               	rlcf	___flmul@prod,f,c
  2486  000A56  3623               	rlcf	___flmul@prod+1,f,c
  2487  000A58  3624               	rlcf	___flmul@prod+2,f,c
  2488  000A5A  3625               	rlcf	___flmul@prod+3,f,c
  2489  000A5C  BE1F               	btfsc	___flmul@grs+3,7,c
  2490  000A5E  8022               	bsf	___flmul@prod,0,c
  2491  000A60  90D8               	bcf	status,0,c
  2492  000A62  361C               	rlcf	___flmul@grs,f,c
  2493  000A64  361D               	rlcf	___flmul@grs+1,f,c
  2494  000A66  361E               	rlcf	___flmul@grs+2,f,c
  2495  000A68  361F               	rlcf	___flmul@grs+3,f,c
  2496  000A6A  0626               	decf	___flmul@temp,f,c
  2497  000A6C  A0D8               	btfss	status,0,c
  2498  000A6E  0627               	decf	___flmul@temp+1,f,c
  2499  000A70                     l2082:
  2500  000A70  AE24               	btfss	___flmul@prod+2,7,c
  2501  000A72  D7EF               	goto	l2076
  2502  000A74  0E00               	movlw	0
  2503  000A76  6E20               	movwf	___flmul@aexp,c
  2504  000A78  AE1F               	btfss	___flmul@grs+3,7,c
  2505  000A7A  D017               	goto	l834
  2506  000A7C  0EFF               	movlw	255
  2507  000A7E  141C               	andwf	___flmul@grs,w,c
  2508  000A80  6E17               	movwf	??___flmul& (0+255),c
  2509  000A82  0EFF               	movlw	255
  2510  000A84  141D               	andwf	___flmul@grs+1,w,c
  2511  000A86  6E18               	movwf	(??___flmul+1)& (0+255),c
  2512  000A88  0EFF               	movlw	255
  2513  000A8A  141E               	andwf	___flmul@grs+2,w,c
  2514  000A8C  6E19               	movwf	(??___flmul+2)& (0+255),c
  2515  000A8E  0E7F               	movlw	127
  2516  000A90  141F               	andwf	___flmul@grs+3,w,c
  2517  000A92  6E1A               	movwf	(??___flmul+3)& (0+255),c
  2518  000A94  5017               	movf	??___flmul,w,c
  2519  000A96  1018               	iorwf	??___flmul+1,w,c
  2520  000A98  1019               	iorwf	??___flmul+2,w,c
  2521  000A9A  101A               	iorwf	??___flmul+3,w,c
  2522  000A9C  B4D8               	btfsc	status,2,c
  2523  000A9E  D003               	goto	l835
  2524  000AA0                     u1490:
  2525  000AA0  0E01               	movlw	1
  2526  000AA2  6E20               	movwf	___flmul@aexp,c
  2527  000AA4  D002               	goto	l834
  2528  000AA6                     l835:
  2529  000AA6  B022               	btfsc	___flmul@prod,0,c
  2530  000AA8  D7FB               	goto	u1490
  2531  000AAA                     l834:
  2532  000AAA  5020               	movf	___flmul@aexp,w,c
  2533  000AAC  B4D8               	btfsc	status,2,c
  2534  000AAE  D01F               	goto	l2102
  2535  000AB0  0E01               	movlw	1
  2536  000AB2  2622               	addwf	___flmul@prod,f,c
  2537  000AB4  0E00               	movlw	0
  2538  000AB6  2223               	addwfc	___flmul@prod+1,f,c
  2539  000AB8  2224               	addwfc	___flmul@prod+2,f,c
  2540  000ABA  2225               	addwfc	___flmul@prod+3,f,c
  2541  000ABC  A025               	btfss	___flmul@prod+3,0,c
  2542  000ABE  D017               	goto	l2102
  2543  000AC0  C022  F017         	movff	___flmul@prod,??___flmul
  2544  000AC4  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2545  000AC8  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2546  000ACC  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2547  000AD0  341A               	rlcf	??___flmul+3,w,c
  2548  000AD2  321A               	rrcf	??___flmul+3,f,c
  2549  000AD4  3219               	rrcf	??___flmul+2,f,c
  2550  000AD6  3218               	rrcf	??___flmul+1,f,c
  2551  000AD8  3217               	rrcf	??___flmul,f,c
  2552  000ADA  C017  F022         	movff	??___flmul,___flmul@prod
  2553  000ADE  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2554  000AE2  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2555  000AE6  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2556  000AEA  4A26               	infsnz	___flmul@temp,f,c
  2557  000AEC  2A27               	incf	___flmul@temp+1,f,c
  2558  000AEE                     l2102:
  2559  000AEE  BE27               	btfsc	___flmul@temp+1,7,c
  2560  000AF0  D00D               	goto	l2106
  2561  000AF2  5027               	movf	___flmul@temp+1,w,c
  2562  000AF4  E103               	bnz	u1530
  2563  000AF6  2826               	incf	___flmul@temp,w,c
  2564  000AF8  A0D8               	btfss	status,0,c
  2565  000AFA  D008               	goto	l2106
  2566  000AFC                     u1530:
  2567  000AFC  0E00               	movlw	0
  2568  000AFE  6E22               	movwf	___flmul@prod,c
  2569  000B00  0E00               	movlw	0
  2570  000B02  6E23               	movwf	___flmul@prod+1,c
  2571  000B04  0E80               	movlw	128
  2572  000B06  6E24               	movwf	___flmul@prod+2,c
  2573  000B08  0E7F               	movlw	127
  2574  000B0A  D020               	goto	L4
  2575  000B0C                     l2106:
  2576  000B0C  BE27               	btfsc	___flmul@temp+1,7,c
  2577  000B0E  D005               	goto	u1540
  2578  000B10  5027               	movf	___flmul@temp+1,w,c
  2579  000B12  E10E               	bnz	l842
  2580  000B14  0426               	decf	___flmul@temp,w,c
  2581  000B16  B0D8               	btfsc	status,0,c
  2582  000B18  D00B               	goto	l842
  2583  000B1A                     u1540:
  2584  000B1A  0E00               	movlw	0
  2585  000B1C  6E22               	movwf	___flmul@prod,c
  2586  000B1E  0E00               	movlw	0
  2587  000B20  6E23               	movwf	___flmul@prod+1,c
  2588  000B22  0E00               	movlw	0
  2589  000B24  6E24               	movwf	___flmul@prod+2,c
  2590  000B26  0E00               	movlw	0
  2591  000B28  6E25               	movwf	___flmul@prod+3,c
  2592  000B2A  0E00               	movlw	0
  2593  000B2C  6E1B               	movwf	___flmul@sign,c
  2594  000B2E  D00F               	goto	l2118
  2595  000B30                     l842:
  2596  000B30  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2597  000B34  0EFF               	movlw	255
  2598  000B36  1622               	andwf	___flmul@prod,f,c
  2599  000B38  0EFF               	movlw	255
  2600  000B3A  1623               	andwf	___flmul@prod+1,f,c
  2601  000B3C  0E7F               	movlw	127
  2602  000B3E  1624               	andwf	___flmul@prod+2,f,c
  2603  000B40  0E00               	movlw	0
  2604  000B42  1625               	andwf	___flmul@prod+3,f,c
  2605  000B44  B021               	btfsc	___flmul@bexp,0,c
  2606  000B46  8E24               	bsf	___flmul@prod+2,7,c
  2607  000B48  90D8               	bcf	status,0,c
  2608  000B4A  3021               	rrcf	___flmul@bexp,w,c
  2609  000B4C                     L4:
  2610  000B4C  6E25               	movwf	___flmul@prod+3,c
  2611  000B4E                     l2118:
  2612  000B4E  501B               	movf	___flmul@sign,w,c
  2613  000B50  1225               	iorwf	___flmul@prod+3,f,c
  2614  000B52  C022  F00F         	movff	___flmul@prod,?___flmul
  2615  000B56  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2616  000B5A  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2617  000B5E  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2618  000B62  0012               	return		;funcret
  2619  000B64                     __end_of___flmul:
  2620                           	opt callstack 0
  2621                           
  2622 ;; *************** function ___awdiv *****************
  2623 ;; Defined at:
  2624 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  dividend        2    0[COMRAM] int 
  2627 ;;  divisor         2    2[COMRAM] int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  quotient        2    6[COMRAM] int 
  2630 ;;  sign            1    5[COMRAM] unsigned char 
  2631 ;;  counter         1    4[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2    0[COMRAM] int 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2641 ;;      Params:         4       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2645 ;;Total ram usage:        8 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    1
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_conviertemon
  2652 ;;		_calculon
  2653 ;;		_calculon2
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           	psect	text11
  2658  001622                     __ptext11:
  2659                           	opt callstack 0
  2660  001622                     ___awdiv:
  2661                           	opt callstack 28
  2662                           
  2663                           ;incstack = 0
  2664  001622  0E00               	movlw	0
  2665  001624  6E06               	movwf	___awdiv@sign,c
  2666  001626  AE04               	btfss	___awdiv@divisor+1,7,c
  2667  001628  D006               	goto	l2138
  2668  00162A  6C03               	negf	___awdiv@divisor,c
  2669  00162C  1E04               	comf	___awdiv@divisor+1,f,c
  2670  00162E  B0D8               	btfsc	status,0,c
  2671  001630  2A04               	incf	___awdiv@divisor+1,f,c
  2672  001632  0E01               	movlw	1
  2673  001634  6E06               	movwf	___awdiv@sign,c
  2674  001636                     l2138:
  2675  001636  AE02               	btfss	___awdiv@dividend+1,7,c
  2676  001638  D006               	goto	l2144
  2677  00163A  6C01               	negf	___awdiv@dividend,c
  2678  00163C  1E02               	comf	___awdiv@dividend+1,f,c
  2679  00163E  B0D8               	btfsc	status,0,c
  2680  001640  2A02               	incf	___awdiv@dividend+1,f,c
  2681  001642  0E01               	movlw	1
  2682  001644  1A06               	xorwf	___awdiv@sign,f,c
  2683  001646                     l2144:
  2684  001646  0E00               	movlw	0
  2685  001648  6E08               	movwf	___awdiv@quotient+1,c
  2686  00164A  0E00               	movlw	0
  2687  00164C  6E07               	movwf	___awdiv@quotient,c
  2688  00164E  5003               	movf	___awdiv@divisor,w,c
  2689  001650  1004               	iorwf	___awdiv@divisor+1,w,c
  2690  001652  B4D8               	btfsc	status,2,c
  2691  001654  D01C               	goto	l2166
  2692  001656  0E01               	movlw	1
  2693  001658  6E05               	movwf	___awdiv@counter,c
  2694  00165A  D004               	goto	l2152
  2695  00165C                     l2150:
  2696  00165C  90D8               	bcf	status,0,c
  2697  00165E  3603               	rlcf	___awdiv@divisor,f,c
  2698  001660  3604               	rlcf	___awdiv@divisor+1,f,c
  2699  001662  2A05               	incf	___awdiv@counter,f,c
  2700  001664                     l2152:
  2701  001664  AE04               	btfss	___awdiv@divisor+1,7,c
  2702  001666  D7FA               	goto	l2150
  2703  001668                     u1590:
  2704  001668  90D8               	bcf	status,0,c
  2705  00166A  3607               	rlcf	___awdiv@quotient,f,c
  2706  00166C  3608               	rlcf	___awdiv@quotient+1,f,c
  2707  00166E  5003               	movf	___awdiv@divisor,w,c
  2708  001670  5C01               	subwf	___awdiv@dividend,w,c
  2709  001672  5004               	movf	___awdiv@divisor+1,w,c
  2710  001674  5802               	subwfb	___awdiv@dividend+1,w,c
  2711  001676  A0D8               	btfss	status,0,c
  2712  001678  D005               	goto	l2162
  2713  00167A  5003               	movf	___awdiv@divisor,w,c
  2714  00167C  5E01               	subwf	___awdiv@dividend,f,c
  2715  00167E  5004               	movf	___awdiv@divisor+1,w,c
  2716  001680  5A02               	subwfb	___awdiv@dividend+1,f,c
  2717  001682  8007               	bsf	___awdiv@quotient,0,c
  2718  001684                     l2162:
  2719  001684  90D8               	bcf	status,0,c
  2720  001686  3204               	rrcf	___awdiv@divisor+1,f,c
  2721  001688  3203               	rrcf	___awdiv@divisor,f,c
  2722  00168A  2E05               	decfsz	___awdiv@counter,f,c
  2723  00168C  D7ED               	goto	u1590
  2724  00168E                     l2166:
  2725  00168E  5006               	movf	___awdiv@sign,w,c
  2726  001690  B4D8               	btfsc	status,2,c
  2727  001692  D004               	goto	l2170
  2728  001694  6C07               	negf	___awdiv@quotient,c
  2729  001696  1E08               	comf	___awdiv@quotient+1,f,c
  2730  001698  B0D8               	btfsc	status,0,c
  2731  00169A  2A08               	incf	___awdiv@quotient+1,f,c
  2732  00169C                     l2170:
  2733  00169C  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2734  0016A0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2735  0016A4  0012               	return		;funcret
  2736  0016A6                     __end_of___awdiv:
  2737                           	opt callstack 0
  2738                           
  2739 ;; *************** function _POS_CURSOR *****************
  2740 ;; Defined at:
  2741 ;;		line 6 in file "LCD.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  fila            1    wreg     unsigned char 
  2744 ;;  columna         1    3[COMRAM] unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  fila            1    4[COMRAM] unsigned char 
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0, cstack
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2756 ;;      Params:         1       0       0       0       0       0       0       0       0
  2757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2759 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2760 ;;Total ram usage:        2 bytes
  2761 ;; Hardware stack levels used:    1
  2762 ;; Hardware stack levels required when called:    3
  2763 ;; This function calls:
  2764 ;;		_ENVIA_LCD_CMD
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text12
  2771  001918                     __ptext12:
  2772                           	opt callstack 0
  2773  001918                     _POS_CURSOR:
  2774                           	opt callstack 27
  2775                           
  2776                           ;incstack = 0
  2777                           ;POS_CURSOR@fila stored from wreg
  2778  001918  6E05               	movwf	POS_CURSOR@fila,c
  2779                           
  2780                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2781  00191A  0405               	decf	POS_CURSOR@fila,w,c
  2782  00191C  A4D8               	btfss	status,2,c
  2783  00191E  D005               	goto	l2290
  2784                           
  2785                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2786  001920  5004               	movf	POS_CURSOR@columna,w,c
  2787  001922  0F80               	addlw	128
  2788  001924  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2789                           
  2790                           ;LCD.c: 11:  }
  2791  001928  0012               	return	
  2792  00192A                     l2290:
  2793  00192A  0E02               	movlw	2
  2794  00192C  1805               	xorwf	POS_CURSOR@fila,w,c
  2795  00192E  A4D8               	btfss	status,2,c
  2796  001930  0012               	return	
  2797                           
  2798                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2799  001932  5004               	movf	POS_CURSOR@columna,w,c
  2800  001934  0FC0               	addlw	192
  2801  001936  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2802  00193A  0012               	return		;funcret
  2803  00193C                     __end_of_POS_CURSOR:
  2804                           	opt callstack 0
  2805                           
  2806 ;; *************** function _LCD_CONFIG *****************
  2807 ;; Defined at:
  2808 ;;		line 72 in file "LCD.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2, status,0, cstack
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2824 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2826 ;;Total ram usage:        1 bytes
  2827 ;; Hardware stack levels used:    1
  2828 ;; Hardware stack levels required when called:    3
  2829 ;; This function calls:
  2830 ;;		_ENVIA_LCD_CMD
  2831 ;;		_ENVIA_NIBBLE
  2832 ;; This function is called by:
  2833 ;;		_main
  2834 ;; This function uses a non-reentrant model
  2835 ;;
  2836                           
  2837                           	psect	text13
  2838  001708                     __ptext13:
  2839                           	opt callstack 0
  2840  001708                     _LCD_CONFIG:
  2841                           	opt callstack 27
  2842                           
  2843                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  2844                           
  2845                           ;incstack = 0
  2846  001708  908C               	bcf	3980,0,c	;volatile
  2847                           
  2848                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  2849  00170A  928C               	bcf	3980,1,c	;volatile
  2850                           
  2851                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  2852  00170C  0E30               	movlw	48
  2853  00170E  ECAC  F00C         	call	_ENVIA_NIBBLE
  2854                           
  2855                           ;LCD.c: 77:         _delay(24000);
  2856  001712  0E20               	movlw	32
  2857  001714  6E04               	movwf	??_LCD_CONFIG& (0+255),c
  2858  001716  0E2A               	movlw	42
  2859  001718                     u1877:
  2860  001718  2EE8               	decfsz	wreg,f,c
  2861  00171A  D7FE               	bra	u1877
  2862  00171C  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
  2863  00171E  D7FC               	bra	u1877
  2864                           
  2865                           ;LCD.c: 78:         _delay(24000);
  2866  001720  0E20               	movlw	32
  2867  001722  6E04               	movwf	??_LCD_CONFIG& (0+255),c
  2868  001724  0E2A               	movlw	42
  2869  001726                     u1887:
  2870  001726  2EE8               	decfsz	wreg,f,c
  2871  001728  D7FE               	bra	u1887
  2872  00172A  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
  2873  00172C  D7FC               	bra	u1887
  2874                           
  2875                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  2876  00172E  0E30               	movlw	48
  2877  001730  ECAC  F00C         	call	_ENVIA_NIBBLE
  2878                           
  2879                           ;LCD.c: 83:  _delay(1200);
  2880  001734  0EF0               	movlw	240
  2881  001736                     u1897:
  2882  001736  D000               	nop2	
  2883  001738  2EE8               	decfsz	wreg,f,c
  2884  00173A  D7FD               	bra	u1897
  2885                           
  2886                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  2887  00173C  0E30               	movlw	48
  2888  00173E  ECAC  F00C         	call	_ENVIA_NIBBLE
  2889                           
  2890                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  2891  001742  0E20               	movlw	32
  2892  001744  ECAC  F00C         	call	_ENVIA_NIBBLE
  2893                           
  2894                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  2895  001748  0E01               	movlw	1
  2896  00174A  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2897                           
  2898                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  2899  00174E  0E28               	movlw	40
  2900  001750  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2901                           
  2902                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  2903  001754  0E0F               	movlw	15
  2904  001756  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2905                           
  2906                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  2907  00175A  0E06               	movlw	6
  2908  00175C  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2909                           
  2910                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  2911  001760  0E01               	movlw	1
  2912  001762  EC1A  F00C         	call	_ENVIA_LCD_CMD
  2913  001766  0012               	return		;funcret
  2914  001768                     __end_of_LCD_CONFIG:
  2915                           	opt callstack 0
  2916                           
  2917 ;; *************** function _ESCRIBE_MENSAJE *****************
  2918 ;; Defined at:
  2919 ;;		line 41 in file "LCD.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2922 ;;		 -> STR_4(3), STR_3(3), STR_2(5), STR_1(5), 
  2923 ;;  tam             1    5[COMRAM] unsigned char 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  i               1    8[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2935 ;;      Params:         3       0       0       0       0       0       0       0       0
  2936 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2937 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2938 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2939 ;;Total ram usage:        6 bytes
  2940 ;; Hardware stack levels used:    1
  2941 ;; Hardware stack levels required when called:    3
  2942 ;; This function calls:
  2943 ;;		_ENVIA_CHAR
  2944 ;; This function is called by:
  2945 ;;		_main
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text14
  2950  001868                     __ptext14:
  2951                           	opt callstack 0
  2952  001868                     _ESCRIBE_MENSAJE:
  2953                           	opt callstack 27
  2954                           
  2955                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2956                           
  2957                           ;incstack = 0
  2958  001868  0E00               	movlw	0
  2959  00186A  6E09               	movwf	ESCRIBE_MENSAJE@i,c
  2960                           
  2961                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2962  00186C  0E00               	movlw	0
  2963  00186E  6E09               	movwf	ESCRIBE_MENSAJE@i,c
  2964  001870  D00F               	goto	l2300
  2965  001872                     l2296:
  2966                           
  2967                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2968  001872  5009               	movf	ESCRIBE_MENSAJE@i,w,c
  2969  001874  2404               	addwf	ESCRIBE_MENSAJE@cadena,w,c
  2970  001876  6E07               	movwf	??_ESCRIBE_MENSAJE& (0+255),c
  2971  001878  0E00               	movlw	0
  2972  00187A  2005               	addwfc	ESCRIBE_MENSAJE@cadena+1,w,c
  2973  00187C  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)& (0+255),c
  2974  00187E  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2975  001882  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  2976  001886                     	if	0	;tblptru may be non-zero
  2977  001886                     	endif
  2978  001886                     	if	0	;tblptru may be non-zero
  2979  001886                     	endif
  2980  001886  0008               	tblrd		*
  2981  001888  50F5               	movf	tablat,w,c
  2982  00188A  EC00  F00C         	call	_ENVIA_CHAR
  2983                           
  2984                           ;LCD.c: 47:  }
  2985  00188E  2A09               	incf	ESCRIBE_MENSAJE@i,f,c
  2986  001890                     l2300:
  2987  001890  5006               	movf	ESCRIBE_MENSAJE@tam,w,c
  2988  001892  5C09               	subwf	ESCRIBE_MENSAJE@i,w,c
  2989  001894  B0D8               	btfsc	status,0,c
  2990  001896  0012               	return	
  2991  001898  D7EC               	goto	l2296
  2992  00189A                     __end_of_ESCRIBE_MENSAJE:
  2993                           	opt callstack 0
  2994                           
  2995 ;; *************** function _ENVIA_CHAR *****************
  2996 ;; Defined at:
  2997 ;;		line 50 in file "LCD.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  dato            1    wreg     unsigned char 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  dato            1    1[COMRAM] unsigned char 
  3002 ;;  aux             1    2[COMRAM] unsigned char 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:        2 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    2
  3019 ;; This function calls:
  3020 ;;		_ENVIA_NIBBLE
  3021 ;;		_LEER_LCD
  3022 ;; This function is called by:
  3023 ;;		_ESCRIBE_MENSAJE
  3024 ;;		_main
  3025 ;;		_GENERACARACTER
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           	psect	text15
  3030  001800                     __ptext15:
  3031                           	opt callstack 0
  3032  001800                     _ENVIA_CHAR:
  3033                           	opt callstack 27
  3034                           
  3035                           ;incstack = 0
  3036                           ;ENVIA_CHAR@dato stored from wreg
  3037  001800  6E02               	movwf	ENVIA_CHAR@dato,c
  3038                           
  3039                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  3040  001802  808C               	bsf	3980,0,c	;volatile
  3041                           
  3042                           ;LCD.c: 54:  LEER_LCD();
  3043  001804  EC53  F00B         	call	_LEER_LCD	;wreg free
  3044                           
  3045                           ;LCD.c: 55:  TRISD = 0x00;
  3046  001808  0E00               	movlw	0
  3047  00180A  6E95               	movwf	3989,c	;volatile
  3048                           
  3049                           ;LCD.c: 56:         _delay(1200);
  3050  00180C  0EF0               	movlw	240
  3051  00180E                     u1907:
  3052  00180E  D000               	nop2	
  3053  001810  2EE8               	decfsz	wreg,f,c
  3054  001812  D7FD               	bra	u1907
  3055                           
  3056                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  3057  001814  928C               	bcf	3980,1,c	;volatile
  3058                           
  3059                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  3060  001816  948C               	bcf	3980,2,c	;volatile
  3061                           
  3062                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  3063  001818  808C               	bsf	3980,0,c	;volatile
  3064                           
  3065                           ;LCD.c: 61:  aux = dato & 0xF0;
  3066  00181A  5002               	movf	ENVIA_CHAR@dato,w,c
  3067  00181C  0BF0               	andlw	240
  3068  00181E  6E03               	movwf	ENVIA_CHAR@aux,c
  3069                           
  3070                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  3071  001820  5003               	movf	ENVIA_CHAR@aux,w,c
  3072  001822  ECAC  F00C         	call	_ENVIA_NIBBLE
  3073                           
  3074                           ;LCD.c: 63:  aux = dato << 4;
  3075  001826  3802               	swapf	ENVIA_CHAR@dato,w,c
  3076  001828  0BF0               	andlw	240
  3077  00182A  6E03               	movwf	ENVIA_CHAR@aux,c
  3078                           
  3079                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  3080  00182C  5003               	movf	ENVIA_CHAR@aux,w,c
  3081  00182E  ECAC  F00C         	call	_ENVIA_NIBBLE
  3082  001832  0012               	return		;funcret
  3083  001834                     __end_of_ENVIA_CHAR:
  3084                           	opt callstack 0
  3085                           
  3086 ;; *************** function _CURSOR_ONOFF *****************
  3087 ;; Defined at:
  3088 ;;		line 35 in file "LCD.c"
  3089 ;; Parameters:    Size  Location     Type
  3090 ;;  estado          1    wreg     unsigned char 
  3091 ;; Auto vars:     Size  Location     Type
  3092 ;;  estado          1    3[COMRAM] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      void 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0, cstack
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3102 ;;      Params:         0       0       0       0       0       0       0       0       0
  3103 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3105 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3106 ;;Total ram usage:        1 bytes
  3107 ;; Hardware stack levels used:    1
  3108 ;; Hardware stack levels required when called:    3
  3109 ;; This function calls:
  3110 ;;		_ENVIA_LCD_CMD
  3111 ;; This function is called by:
  3112 ;;		_main
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116                           	psect	text16
  3117  00193C                     __ptext16:
  3118                           	opt callstack 0
  3119  00193C                     _CURSOR_ONOFF:
  3120                           	opt callstack 27
  3121                           
  3122                           ;incstack = 0
  3123                           ;CURSOR_ONOFF@estado stored from wreg
  3124  00193C  6E04               	movwf	CURSOR_ONOFF@estado,c
  3125                           
  3126                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  3127  00193E  5004               	movf	CURSOR_ONOFF@estado,w,c
  3128  001940  A4D8               	btfss	status,2,c
  3129  001942  D003               	goto	l1488
  3130  001944  0E0E               	movlw	14
  3131  001946  EC1A  F00C         	call	_ENVIA_LCD_CMD
  3132  00194A                     l1488:
  3133                           
  3134                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  3135  00194A  0404               	decf	CURSOR_ONOFF@estado,w,c
  3136  00194C  A4D8               	btfss	status,2,c
  3137  00194E  0012               	return	
  3138  001950  0E0C               	movlw	12
  3139  001952  EC1A  F00C         	call	_ENVIA_LCD_CMD
  3140  001956  0012               	return		;funcret
  3141  001958                     __end_of_CURSOR_ONOFF:
  3142                           	opt callstack 0
  3143                           
  3144 ;; *************** function _CURSOR_HOME *****************
  3145 ;; Defined at:
  3146 ;;		line 30 in file "LCD.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;		None
  3149 ;; Auto vars:     Size  Location     Type
  3150 ;;		None
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  1    wreg      void 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3160 ;;      Params:         0       0       0       0       0       0       0       0       0
  3161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3162 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3163 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3164 ;;Total ram usage:        0 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    3
  3167 ;; This function calls:
  3168 ;;		_ENVIA_LCD_CMD
  3169 ;; This function is called by:
  3170 ;;		_main
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           	psect	text17
  3175  00198E                     __ptext17:
  3176                           	opt callstack 0
  3177  00198E                     _CURSOR_HOME:
  3178                           	opt callstack 27
  3179                           
  3180                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  3181                           
  3182                           ;incstack = 0
  3183  00198E  0E02               	movlw	2
  3184  001990  EC1A  F00C         	call	_ENVIA_LCD_CMD
  3185  001994  0012               	return		;funcret
  3186  001996                     __end_of_CURSOR_HOME:
  3187                           	opt callstack 0
  3188                           
  3189 ;; *************** function _BORRAR_LCD *****************
  3190 ;; Defined at:
  3191 ;;		line 67 in file "LCD.c"
  3192 ;; Parameters:    Size  Location     Type
  3193 ;;		None
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;		None
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3205 ;;      Params:         0       0       0       0       0       0       0       0       0
  3206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3208 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3209 ;;Total ram usage:        0 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; Hardware stack levels required when called:    3
  3212 ;; This function calls:
  3213 ;;		_ENVIA_LCD_CMD
  3214 ;; This function is called by:
  3215 ;;		_main
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text18
  3220  001996                     __ptext18:
  3221                           	opt callstack 0
  3222  001996                     _BORRAR_LCD:
  3223                           	opt callstack 27
  3224                           
  3225                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  3226                           
  3227                           ;incstack = 0
  3228  001996  0E01               	movlw	1
  3229  001998  EC1A  F00C         	call	_ENVIA_LCD_CMD
  3230  00199C  0012               	return		;funcret
  3231  00199E                     __end_of_BORRAR_LCD:
  3232                           	opt callstack 0
  3233                           
  3234 ;; *************** function _ENVIA_LCD_CMD *****************
  3235 ;; Defined at:
  3236 ;;		line 104 in file "LCD.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  dato            1    wreg     unsigned char 
  3239 ;; Auto vars:     Size  Location     Type
  3240 ;;  dato            1    1[COMRAM] unsigned char 
  3241 ;;  aux             1    2[COMRAM] unsigned char 
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, status,2, status,0, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3251 ;;      Params:         0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        2 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; Hardware stack levels required when called:    2
  3258 ;; This function calls:
  3259 ;;		_ENVIA_NIBBLE
  3260 ;;		_LEER_LCD
  3261 ;; This function is called by:
  3262 ;;		_POS_CURSOR
  3263 ;;		_CURSOR_HOME
  3264 ;;		_CURSOR_ONOFF
  3265 ;;		_BORRAR_LCD
  3266 ;;		_LCD_CONFIG
  3267 ;;		_BLINK_CURSOR
  3268 ;;		_DISPLAY_ONOFF
  3269 ;;		_GENERACARACTER
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text19
  3274  001834                     __ptext19:
  3275                           	opt callstack 0
  3276  001834                     _ENVIA_LCD_CMD:
  3277                           	opt callstack 27
  3278                           
  3279                           ;incstack = 0
  3280                           ;ENVIA_LCD_CMD@dato stored from wreg
  3281  001834  6E02               	movwf	ENVIA_LCD_CMD@dato,c
  3282                           
  3283                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  3284  001836  908C               	bcf	3980,0,c	;volatile
  3285                           
  3286                           ;LCD.c: 108:  LEER_LCD();
  3287  001838  EC53  F00B         	call	_LEER_LCD	;wreg free
  3288                           
  3289                           ;LCD.c: 109:  TRISD = 0b00000000;
  3290  00183C  0E00               	movlw	0
  3291  00183E  6E95               	movwf	3989,c	;volatile
  3292                           
  3293                           ;LCD.c: 111:         _delay(1200);
  3294  001840  0EF0               	movlw	240
  3295  001842                     u1917:
  3296  001842  D000               	nop2	
  3297  001844  2EE8               	decfsz	wreg,f,c
  3298  001846  D7FD               	bra	u1917
  3299                           
  3300                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  3301  001848  928C               	bcf	3980,1,c	;volatile
  3302                           
  3303                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  3304  00184A  948C               	bcf	3980,2,c	;volatile
  3305                           
  3306                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  3307  00184C  908C               	bcf	3980,0,c	;volatile
  3308                           
  3309                           ;LCD.c: 115:  aux = dato & 0xF0;
  3310  00184E  5002               	movf	ENVIA_LCD_CMD@dato,w,c
  3311  001850  0BF0               	andlw	240
  3312  001852  6E03               	movwf	ENVIA_LCD_CMD@aux,c
  3313                           
  3314                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  3315  001854  5003               	movf	ENVIA_LCD_CMD@aux,w,c
  3316  001856  ECAC  F00C         	call	_ENVIA_NIBBLE
  3317                           
  3318                           ;LCD.c: 117:  aux = dato<<4;
  3319  00185A  3802               	swapf	ENVIA_LCD_CMD@dato,w,c
  3320  00185C  0BF0               	andlw	240
  3321  00185E  6E03               	movwf	ENVIA_LCD_CMD@aux,c
  3322                           
  3323                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  3324  001860  5003               	movf	ENVIA_LCD_CMD@aux,w,c
  3325  001862  ECAC  F00C         	call	_ENVIA_NIBBLE
  3326  001866  0012               	return		;funcret
  3327  001868                     __end_of_ENVIA_LCD_CMD:
  3328                           	opt callstack 0
  3329                           
  3330 ;; *************** function _LEER_LCD *****************
  3331 ;; Defined at:
  3332 ;;		line 121 in file "LCD.c"
  3333 ;; Parameters:    Size  Location     Type
  3334 ;;		None
  3335 ;; Auto vars:     Size  Location     Type
  3336 ;;  aux             1    0[COMRAM] unsigned char 
  3337 ;; Return value:  Size  Location     Type
  3338 ;;                  1    wreg      void 
  3339 ;; Registers used:
  3340 ;;		wreg, status,2, status,0
  3341 ;; Tracked objects:
  3342 ;;		On entry : 0/0
  3343 ;;		On exit  : 0/0
  3344 ;;		Unchanged: 0/0
  3345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3346 ;;      Params:         0       0       0       0       0       0       0       0       0
  3347 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3348 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3349 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3350 ;;Total ram usage:        1 bytes
  3351 ;; Hardware stack levels used:    1
  3352 ;; Hardware stack levels required when called:    1
  3353 ;; This function calls:
  3354 ;;		Nothing
  3355 ;; This function is called by:
  3356 ;;		_ENVIA_CHAR
  3357 ;;		_ENVIA_LCD_CMD
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text20
  3362  0016A6                     __ptext20:
  3363                           	opt callstack 0
  3364  0016A6                     _LEER_LCD:
  3365                           	opt callstack 27
  3366                           
  3367                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  3368                           
  3369                           ;incstack = 0
  3370  0016A6  0EF8               	movlw	248
  3371  0016A8  6E95               	movwf	3989,c	;volatile
  3372                           
  3373                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  3374  0016AA  908C               	bcf	3980,0,c	;volatile
  3375                           
  3376                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  3377  0016AC  828C               	bsf	3980,1,c	;volatile
  3378                           
  3379                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  3380  0016AE  848C               	bsf	3980,2,c	;volatile
  3381                           
  3382                           ;LCD.c: 128:         _delay(1200);
  3383  0016B0  0EF0               	movlw	240
  3384  0016B2                     u1927:
  3385  0016B2  D000               	nop2	
  3386  0016B4  2EE8               	decfsz	wreg,f,c
  3387  0016B6  D7FD               	bra	u1927
  3388                           
  3389                           ;LCD.c: 130:  aux = PORTD;
  3390  0016B8  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  3391                           
  3392                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  3393  0016BC  948C               	bcf	3980,2,c	;volatile
  3394                           
  3395                           ;LCD.c: 132:         _delay(1200);
  3396  0016BE  0EF0               	movlw	240
  3397  0016C0                     u1937:
  3398  0016C0  D000               	nop2	
  3399  0016C2  2EE8               	decfsz	wreg,f,c
  3400  0016C4  D7FD               	bra	u1937
  3401                           
  3402                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  3403  0016C6  848C               	bsf	3980,2,c	;volatile
  3404                           
  3405                           ;LCD.c: 135:         _delay(1200);
  3406  0016C8  0EF0               	movlw	240
  3407  0016CA                     u1947:
  3408  0016CA  D000               	nop2	
  3409  0016CC  2EE8               	decfsz	wreg,f,c
  3410  0016CE  D7FD               	bra	u1947
  3411  0016D0                     l904:
  3412                           
  3413                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  3414  0016D0  948C               	bcf	3980,2,c	;volatile
  3415                           
  3416                           ;LCD.c: 138:  aux = aux & 0x80;
  3417  0016D2  5001               	movf	LEER_LCD@aux,w,c
  3418  0016D4  0B80               	andlw	128
  3419  0016D6  6E01               	movwf	LEER_LCD@aux,c
  3420                           
  3421                           ;LCD.c: 139:  while(aux == 0x80)
  3422  0016D8  D012               	goto	l920
  3423  0016DA                     l67:
  3424                           
  3425                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  3426  0016DA  848C               	bsf	3980,2,c	;volatile
  3427                           
  3428                           ;LCD.c: 142:             _delay(1200);
  3429  0016DC  0EF0               	movlw	240
  3430  0016DE                     u1957:
  3431  0016DE  D000               	nop2	
  3432  0016E0  2EE8               	decfsz	wreg,f,c
  3433  0016E2  D7FD               	bra	u1957
  3434                           
  3435                           ;LCD.c: 143:             aux = PORTD;
  3436  0016E4  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  3437                           
  3438                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  3439  0016E8  948C               	bcf	3980,2,c	;volatile
  3440                           
  3441                           ;LCD.c: 145:             _delay(1200);
  3442  0016EA  0EF0               	movlw	240
  3443  0016EC                     u1967:
  3444  0016EC  D000               	nop2	
  3445  0016EE  2EE8               	decfsz	wreg,f,c
  3446  0016F0  D7FD               	bra	u1967
  3447                           
  3448                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  3449  0016F2  848C               	bsf	3980,2,c	;volatile
  3450                           
  3451                           ;LCD.c: 147:             _delay(1200);
  3452  0016F4  0EF0               	movlw	240
  3453  0016F6                     u1977:
  3454  0016F6  D000               	nop2	
  3455  0016F8  2EE8               	decfsz	wreg,f,c
  3456  0016FA  D7FD               	bra	u1977
  3457  0016FC  D7E9               	goto	l904
  3458  0016FE                     l920:
  3459                           
  3460                           ;LCD.c: 139:  while(aux == 0x80)
  3461  0016FE  0E80               	movlw	128
  3462  001700  1801               	xorwf	LEER_LCD@aux,w,c
  3463  001702  A4D8               	btfss	status,2,c
  3464  001704  0012               	return	
  3465  001706  D7E9               	goto	l67
  3466  001708                     __end_of_LEER_LCD:
  3467                           	opt callstack 0
  3468                           
  3469 ;; *************** function _ENVIA_NIBBLE *****************
  3470 ;; Defined at:
  3471 ;;		line 93 in file "LCD.c"
  3472 ;; Parameters:    Size  Location     Type
  3473 ;;  dato            1    wreg     unsigned char 
  3474 ;; Auto vars:     Size  Location     Type
  3475 ;;  dato            1    0[COMRAM] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3485 ;;      Params:         0       0       0       0       0       0       0       0       0
  3486 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3488 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3489 ;;Total ram usage:        1 bytes
  3490 ;; Hardware stack levels used:    1
  3491 ;; Hardware stack levels required when called:    1
  3492 ;; This function calls:
  3493 ;;		Nothing
  3494 ;; This function is called by:
  3495 ;;		_ENVIA_CHAR
  3496 ;;		_LCD_CONFIG
  3497 ;;		_ENVIA_LCD_CMD
  3498 ;; This function uses a non-reentrant model
  3499 ;;
  3500                           
  3501                           	psect	text21
  3502  001958                     __ptext21:
  3503                           	opt callstack 0
  3504  001958                     _ENVIA_NIBBLE:
  3505                           	opt callstack 27
  3506                           
  3507                           ;incstack = 0
  3508                           ;ENVIA_NIBBLE@dato stored from wreg
  3509  001958  6E01               	movwf	ENVIA_NIBBLE@dato,c
  3510                           
  3511                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  3512  00195A  0E0F               	movlw	15
  3513  00195C  168C               	andwf	3980,f,c	;volatile
  3514                           
  3515                           ;LCD.c: 96:  dato &= 0xF0;
  3516  00195E  0EF0               	movlw	240
  3517  001960  1601               	andwf	ENVIA_NIBBLE@dato,f,c
  3518                           
  3519                           ;LCD.c: 97:  LATD|= dato;
  3520  001962  5001               	movf	ENVIA_NIBBLE@dato,w,c	;volatile
  3521  001964  128C               	iorwf	3980,f,c	;volatile
  3522                           
  3523                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  3524  001966  848C               	bsf	3980,2,c	;volatile
  3525                           
  3526                           ;LCD.c: 100:         _delay(1200);
  3527  001968  0EF0               	movlw	240
  3528  00196A                     u1987:
  3529  00196A  D000               	nop2	
  3530  00196C  2EE8               	decfsz	wreg,f,c
  3531  00196E  D7FD               	bra	u1987
  3532                           
  3533                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  3534  001970  948C               	bcf	3980,2,c	;volatile
  3535  001972  0012               	return		;funcret
  3536  001974                     __end_of_ENVIA_NIBBLE:
  3537                           	opt callstack 0
  3538                           
  3539 ;; *************** function _ADC_CONVERTIR *****************
  3540 ;; Defined at:
  3541 ;;		line 69 in file "ADC.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  num             2    3[COMRAM] int 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  2    0[COMRAM] int 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3555 ;;      Params:         2       0       0       0       0       0       0       0       0
  3556 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3557 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3558 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3559 ;;Total ram usage:        5 bytes
  3560 ;; Hardware stack levels used:    1
  3561 ;; Hardware stack levels required when called:    1
  3562 ;; This function calls:
  3563 ;;		Nothing
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text22
  3570  00189A                     __ptext22:
  3571                           	opt callstack 0
  3572  00189A                     _ADC_CONVERTIR:
  3573                           	opt callstack 29
  3574                           
  3575                           ;ADC.c: 71:  int num;;ADC.c: 72:  ADCON0bits.GO = 1;
  3576                           
  3577                           ;incstack = 0
  3578  00189A  82C2               	bsf	4034,1,c	;volatile
  3579  00189C                     l205:
  3580  00189C  B2C2               	btfsc	4034,1,c	;volatile
  3581  00189E  D7FE               	goto	l205
  3582                           
  3583                           ;ADC.c: 74:  num = 0x03 & ADRESH;
  3584  0018A0  CFC4 F003          	movff	4036,??_ADC_CONVERTIR	;volatile
  3585  0018A4  0E03               	movlw	3
  3586  0018A6  1603               	andwf	??_ADC_CONVERTIR,f,c
  3587  0018A8  5003               	movf	??_ADC_CONVERTIR,w,c
  3588  0018AA  6E04               	movwf	ADC_CONVERTIR@num,c
  3589  0018AC  6A05               	clrf	ADC_CONVERTIR@num+1,c
  3590                           
  3591                           ;ADC.c: 75:  num<<= 8;
  3592  0018AE  5004               	movf	ADC_CONVERTIR@num,w,c
  3593  0018B0  6E05               	movwf	ADC_CONVERTIR@num+1,c
  3594  0018B2  6A04               	clrf	ADC_CONVERTIR@num,c
  3595                           
  3596                           ;ADC.c: 76:  num +=ADRESL;
  3597  0018B4  50C3               	movf	4035,w,c	;volatile
  3598  0018B6  2604               	addwf	ADC_CONVERTIR@num,f,c
  3599  0018B8  0E00               	movlw	0
  3600  0018BA  2205               	addwfc	ADC_CONVERTIR@num+1,f,c
  3601                           
  3602                           ;ADC.c: 77:  return(num);
  3603  0018BC  C004  F001         	movff	ADC_CONVERTIR@num,?_ADC_CONVERTIR
  3604  0018C0  C005  F002         	movff	ADC_CONVERTIR@num+1,?_ADC_CONVERTIR+1
  3605  0018C4  0012               	return		;funcret
  3606  0018C6                     __end_of_ADC_CONVERTIR:
  3607                           	opt callstack 0
  3608                           
  3609 ;; *************** function _ADC_CONFIG *****************
  3610 ;; Defined at:
  3611 ;;		line 6 in file "ADC.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  canal           1    wreg     unsigned char 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  canal           1    2[COMRAM] unsigned char 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0
  3626 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3627 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3628 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3629 ;;Total ram usage:        3 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_main
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text23
  3640  001572                     __ptext23:
  3641                           	opt callstack 0
  3642  001572                     _ADC_CONFIG:
  3643                           	opt callstack 29
  3644                           
  3645                           ;incstack = 0
  3646                           ;ADC_CONFIG@canal stored from wreg
  3647  001572  6E03               	movwf	ADC_CONFIG@canal,c
  3648                           
  3649                           ;ADC.c: 6: void ADC_CONFIG(char canal);ADC.c: 7: {;ADC.c: 8:  TRISA = 0xFF;
  3650  001574  6892               	setf	3986,c	;volatile
  3651                           
  3652                           ;ADC.c: 9:  TRISE = 0xFF;
  3653  001576  6896               	setf	3990,c	;volatile
  3654                           
  3655                           ;ADC.c: 10:  TRISB = 0x0F;
  3656  001578  0E0F               	movlw	15
  3657  00157A  6E93               	movwf	3987,c	;volatile
  3658                           
  3659                           ;ADC.c: 11:  switch(canal)
  3660  00157C  D01F               	goto	l1626
  3661  00157E                     l1572:
  3662                           
  3663                           ;ADC.c: 14:    ADCON1=0x0E;
  3664  00157E  0E0E               	movlw	14
  3665  001580                     L5:
  3666  001580  6EC1               	movwf	4033,c	;volatile
  3667                           
  3668                           ;ADC.c: 15:    ADCON0=canal<<2;
  3669  001582  4403               	rlncf	ADC_CONFIG@canal,w,c
  3670  001584  46E8               	rlncf	wreg,f,c
  3671  001586  0BFC               	andlw	252
  3672  001588  6EC2               	movwf	4034,c	;volatile
  3673                           
  3674                           ;ADC.c: 16:   break;
  3675  00158A  D047               	goto	l1628
  3676  00158C                     l1576:
  3677                           
  3678                           ;ADC.c: 18:    ADCON1=0x0D;
  3679  00158C  0E0D               	movlw	13
  3680  00158E  D7F8               	goto	L5
  3681  001590                     l1580:
  3682                           
  3683                           ;ADC.c: 22:    ADCON1=0x0C;
  3684  001590  0E0C               	movlw	12
  3685  001592  D7F6               	goto	L5
  3686  001594                     l1584:
  3687                           
  3688                           ;ADC.c: 26:    ADCON1=0x0B;
  3689  001594  0E0B               	movlw	11
  3690  001596  D7F4               	goto	L5
  3691  001598                     l1588:
  3692                           
  3693                           ;ADC.c: 30:    ADCON1=0x0A;
  3694  001598  0E0A               	movlw	10
  3695  00159A  D7F2               	goto	L5
  3696  00159C                     l1592:
  3697                           
  3698                           ;ADC.c: 34:    ADCON1=0x09;
  3699  00159C  0E09               	movlw	9
  3700  00159E  D7F0               	goto	L5
  3701  0015A0                     l1596:
  3702                           
  3703                           ;ADC.c: 38:    ADCON1=0x08;
  3704  0015A0  0E08               	movlw	8
  3705  0015A2  D7EE               	goto	L5
  3706  0015A4                     l1600:
  3707                           
  3708                           ;ADC.c: 42:    ADCON1=0x07;
  3709  0015A4  0E07               	movlw	7
  3710  0015A6  D7EC               	goto	L5
  3711  0015A8                     l1604:
  3712                           
  3713                           ;ADC.c: 46:    ADCON1=0x06;
  3714  0015A8  0E06               	movlw	6
  3715  0015AA  D7EA               	goto	L5
  3716  0015AC                     l1608:
  3717                           
  3718                           ;ADC.c: 50:    ADCON1=0x05;
  3719  0015AC  0E05               	movlw	5
  3720  0015AE  D7E8               	goto	L5
  3721  0015B0                     l1612:
  3722                           
  3723                           ;ADC.c: 54:    ADCON1=0x04;
  3724  0015B0  0E04               	movlw	4
  3725  0015B2  D7E6               	goto	L5
  3726  0015B4                     l1616:
  3727                           
  3728                           ;ADC.c: 58:    ADCON1=0x03;
  3729  0015B4  0E03               	movlw	3
  3730  0015B6  D7E4               	goto	L5
  3731  0015B8                     l1620:
  3732                           
  3733                           ;ADC.c: 62:    ADCON1=0x02;
  3734  0015B8  0E02               	movlw	2
  3735  0015BA  D7E2               	goto	L5
  3736  0015BC                     l1626:
  3737  0015BC  5003               	movf	ADC_CONFIG@canal,w,c
  3738  0015BE  6E01               	movwf	??_ADC_CONFIG& (0+255),c
  3739  0015C0  6A02               	clrf	(??_ADC_CONFIG+1)& (0+255),c
  3740                           
  3741                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 1, Range of values is 0 to 0
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte            4     3 (average)
  3747                           ;	Chosen strategy is simple_byte
  3748  0015C2  5002               	movf	??_ADC_CONFIG+1,w,c
  3749  0015C4  0A00               	xorlw	0	; case 0
  3750  0015C6  A4D8               	btfss	status,2,c
  3751  0015C8  D028               	goto	l1628
  3752                           
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 13, Range of values is 0 to 12
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte           40    21 (average)
  3758                           ;	Chosen strategy is simple_byte
  3759  0015CA  5001               	movf	??_ADC_CONFIG,w,c
  3760  0015CC  0A00               	xorlw	0	; case 0
  3761  0015CE  B4D8               	btfsc	status,2,c
  3762  0015D0  D7D6               	goto	l1572
  3763  0015D2  0A01               	xorlw	1	; case 1
  3764  0015D4  B4D8               	btfsc	status,2,c
  3765  0015D6  D7DA               	goto	l1576
  3766  0015D8  0A03               	xorlw	3	; case 2
  3767  0015DA  B4D8               	btfsc	status,2,c
  3768  0015DC  D7D9               	goto	l1580
  3769  0015DE  0A01               	xorlw	1	; case 3
  3770  0015E0  B4D8               	btfsc	status,2,c
  3771  0015E2  D7D8               	goto	l1584
  3772  0015E4  0A07               	xorlw	7	; case 4
  3773  0015E6  B4D8               	btfsc	status,2,c
  3774  0015E8  D7D7               	goto	l1588
  3775  0015EA  0A01               	xorlw	1	; case 5
  3776  0015EC  B4D8               	btfsc	status,2,c
  3777  0015EE  D7D6               	goto	l1592
  3778  0015F0  0A03               	xorlw	3	; case 6
  3779  0015F2  B4D8               	btfsc	status,2,c
  3780  0015F4  D7D5               	goto	l1596
  3781  0015F6  0A01               	xorlw	1	; case 7
  3782  0015F8  B4D8               	btfsc	status,2,c
  3783  0015FA  D7D4               	goto	l1600
  3784  0015FC  0A0F               	xorlw	15	; case 8
  3785  0015FE  B4D8               	btfsc	status,2,c
  3786  001600  D7D3               	goto	l1604
  3787  001602  0A01               	xorlw	1	; case 9
  3788  001604  B4D8               	btfsc	status,2,c
  3789  001606  D7D2               	goto	l1608
  3790  001608  0A03               	xorlw	3	; case 10
  3791  00160A  B4D8               	btfsc	status,2,c
  3792  00160C  D7D1               	goto	l1612
  3793  00160E  0A01               	xorlw	1	; case 11
  3794  001610  B4D8               	btfsc	status,2,c
  3795  001612  D7D0               	goto	l1616
  3796  001614  0A07               	xorlw	7	; case 12
  3797  001616  B4D8               	btfsc	status,2,c
  3798  001618  D7CF               	goto	l1620
  3799  00161A                     l1628:
  3800                           
  3801                           ;ADC.c: 66:  ADCON2 = 0x91;
  3802  00161A  0E91               	movlw	145
  3803  00161C  6EC0               	movwf	4032,c	;volatile
  3804                           
  3805                           ;ADC.c: 67:  ADCON0bits.ADON = 1;
  3806  00161E  80C2               	bsf	4034,0,c	;volatile
  3807  001620  0012               	return		;funcret
  3808  001622                     __end_of_ADC_CONFIG:
  3809                           	opt callstack 0
  3810                           
  3811 ;; *************** function _Tmr0ISR *****************
  3812 ;; Defined at:
  3813 ;;		line 113 in file "servo con tmr0.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		Interrupt level 2
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	intcode
  3841  000008                     __pintcode:
  3842                           	opt callstack 0
  3843  000008                     _Tmr0ISR:
  3844                           	opt callstack 27
  3845                           
  3846                           ;incstack = 0
  3847  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3848  00000A  ED63  F00C         	call	int_func,f	;refresh shadow registers
  3849                           
  3850                           	psect	intcode_body
  3851  0018C6                     __pintcode_body:
  3852                           	opt callstack 27
  3853  0018C6                     int_func:
  3854                           	opt callstack 27
  3855  0018C6  0006               	pop		; remove dummy address from shadow register refresh
  3856                           
  3857                           ;servo con tmr0.c: 114:     if (PORTEbits.RE0 == 1){
  3858  0018C8  A084               	btfss	3972,0,c	;volatile
  3859  0018CA  D00A               	goto	i2l164
  3860                           
  3861                           ;servo con tmr0.c: 115:         LATEbits.LE0 = 0;
  3862  0018CC  908D               	bcf	3981,0,c	;volatile
  3863                           
  3864                           ;servo con tmr0.c: 116:         cta_msb = cta_off >> 8;
  3865  0018CE  503E               	movf	_cta_off+1,w,c
  3866  0018D0  6E52               	movwf	_cta_msb,c
  3867                           
  3868                           ;servo con tmr0.c: 117:         cta_lsb = cta_off & 0x00ff;
  3869  0018D2  C03D  F051         	movff	_cta_off,_cta_lsb
  3870  0018D6                     i2l1768:
  3871                           
  3872                           ;servo con tmr0.c: 118:         TMR0H = cta_msb;
  3873  0018D6  C052  FFD7         	movff	_cta_msb,4055	;volatile
  3874                           
  3875                           ;servo con tmr0.c: 119:         TMR0L = cta_lsb;
  3876  0018DA  C051  FFD6         	movff	_cta_lsb,4054	;volatile
  3877                           
  3878                           ;servo con tmr0.c: 120:     }
  3879  0018DE  D006               	goto	i2l1780
  3880  0018E0                     i2l164:
  3881                           
  3882                           ;servo con tmr0.c: 122:         LATEbits.LE0 = 1;
  3883  0018E0  808D               	bsf	3981,0,c	;volatile
  3884                           
  3885                           ;servo con tmr0.c: 123:         cta_msb = cta_on >> 8;
  3886  0018E2  5040               	movf	_cta_on+1,w,c
  3887  0018E4  6E52               	movwf	_cta_msb,c
  3888                           
  3889                           ;servo con tmr0.c: 124:         cta_lsb = cta_on & 0x00ff;
  3890  0018E6  C03F  F051         	movff	_cta_on,_cta_lsb
  3891  0018EA  D7F5               	goto	i2l1768
  3892  0018EC                     i2l1780:
  3893                           
  3894                           ;servo con tmr0.c: 128:     INTCONbits.TMR0IF = 0;
  3895  0018EC  94F2               	bcf	4082,2,c	;volatile
  3896  0018EE  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3897  0018F0  0011               	retfie		f
  3898  0018F2                     __end_of_Tmr0ISR:
  3899                           	opt callstack 0
  3900                           
  3901                           	psect	rparam
  3902  0000                     
  3903                           	psect	temp
  3904  000053                     btemp:
  3905                           	opt callstack 0
  3906  000053                     	ds	1
  3907  0000                     int$flags	set	btemp
  3908  0000                     wtemp8	set	btemp+1
  3909  0000                     ttemp5	set	btemp+1
  3910  0000                     ttemp6	set	btemp+4
  3911  0000                     ttemp7	set	btemp+8
  3912                           tosu	equ	0xFFF
  3913                           tosh	equ	0xFFE
  3914                           tosl	equ	0xFFD
  3915                           stkptr	equ	0xFFC
  3916                           pclatu	equ	0xFFB
  3917                           pclath	equ	0xFFA
  3918                           pcl	equ	0xFF9
  3919                           tblptru	equ	0xFF8
  3920                           tblptrh	equ	0xFF7
  3921                           tblptrl	equ	0xFF6
  3922                           tablat	equ	0xFF5
  3923                           prodh	equ	0xFF4
  3924                           prodl	equ	0xFF3
  3925                           indf0	equ	0xFEF
  3926                           postinc0	equ	0xFEE
  3927                           postdec0	equ	0xFED
  3928                           preinc0	equ	0xFEC
  3929                           plusw0	equ	0xFEB
  3930                           fsr0h	equ	0xFEA
  3931                           fsr0l	equ	0xFE9
  3932                           wreg	equ	0xFE8
  3933                           indf1	equ	0xFE7
  3934                           postinc1	equ	0xFE6
  3935                           postdec1	equ	0xFE5
  3936                           preinc1	equ	0xFE4
  3937                           plusw1	equ	0xFE3
  3938                           fsr1h	equ	0xFE2
  3939                           fsr1l	equ	0xFE1
  3940                           bsr	equ	0xFE0
  3941                           indf2	equ	0xFDF
  3942                           postinc2	equ	0xFDE
  3943                           postdec2	equ	0xFDD
  3944                           preinc2	equ	0xFDC
  3945                           plusw2	equ	0xFDB
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      82
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[5]), STR_1(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_calculon
    _conviertemon->___awdiv
    _calculon2->___awdiv
    _calculon->___flsub
    ___flsub->___flmul
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _Tmr0ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _Tmr0ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tmr0ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tmr0ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tmr0ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tmr0ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Tmr0ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Tmr0ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Tmr0ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   20138
                                             49 COMRAM     1     1      0
                         _ADC_CONFIG
                      _ADC_CONVERTIR
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
                         _POS_CURSOR
                           _calculon
                          _calculon2
                       _conviertemon
 ---------------------------------------------------------------------------------
 (1) _conviertemon                                         2     0      2    3879
                                              8 COMRAM     2     0      2
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _calculon2                                            0     0      0    4269
                            ___awdiv
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _calculon                                             2     0      2    9627
                                             47 COMRAM     2     0      2
                            ___awdiv
                            ___flmul
                            ___flsub
                            ___fltol
                            ___lwdiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1983
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             39 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1820
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     664
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     819
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_CONVERTIR                                        5     3      2      25
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_CONFIG                                           3     3      0     210
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Tmr0ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_CONFIG
   _ADC_CONVERTIR
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _calculon
     ___awdiv
     ___flmul
       ___xxtofl (ARG)
     ___flsub
       ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fltol
     ___lwdiv
     ___wmul
     ___xxtofl
   _calculon2
     ___awdiv
     ___lwdiv
     ___wmul
   _conviertemon
     ___awdiv
     ___wmul

 _Tmr0ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      52       1       87.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      52      20        0.0%
DATA                 0      0      52       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 17 07:55:08 2019

     __size_of_ADC_CONFIG 00B0           ADC_CONFIG@canal 0003                        l67 16DA  
            ___awdiv@sign 0006       ___wmul@multiplicand 0003        __CFG_FOSC$XTPLL_XT 000000  
           ENVIA_CHAR@aux 0003                       l205 189C                       l702 17B0  
                     l740 0CA6                       l741 0C84                       l920 16FE  
                     l904 16D0                       l825 0892                       l842 0B30  
                     l834 0AAA                       l835 0AA6                       l756 0D78  
                     l765 0DDE                       l766 0DDA                       l873 1250  
                     l866 11D2              __CFG_BOR$OFF 000000    __size_of_ADC_CONVERTIR 002C  
             LEER_LCD@aux 0001                       wreg 000FE8              ?_CURSOR_HOME 0001  
            ___flmul@aexp 0020              ___flmul@bexp 0021              ___flmul@sign 001B  
            ___flmul@temp 0026              ___flmul@prod 0022            ??_ENVIA_NIBBLE 0001  
            __CFG_LVP$OFF 000000              ___fltol@exp1 000A            ENVIA_CHAR@dato 0002  
            __CFG_WDT$OFF 000000                      l2010 0852                      l2102 0AEE  
                    l2006 083E                      l2024 087E                      l2008 0842  
                    l2200 1530                      l2106 0B0C                      l2034 08B0  
                    l2026 0882                      l2300 1890                      l2150 165C  
                    l2118 0B4E                      l2214 1560                      l2206 1538  
                    l1600 15A4                      l2152 1664                      l2144 1646  
                    l2208 1544                      l2224 177E                      l2170 169C  
                    l2162 1684                      l2138 1636                      l2082 0A70  
                    l2226 1786                      l1620 15B8                      l1612 15B0  
                    l1604 15A8                      l2076 0A52                      l2180 14D6  
                    l2236 17A6                      l2252 1200                      l2166 168E  
                    l2254 1206                      l2246 11E2                      l1616 15B4  
                    l1608 15AC                      l2264 1276                      l2256 1212  
                    l1626 15BC                      l2290 192A                      l1802 0B94  
                    l2282 12C2                      l2266 1282                      l2258 1238  
                    l1580 1590                      l1628 161A                      l1572 157E  
                    l1900 0CEC                      l2196 1520                      l1902 0CF0  
                    l1910 0D02                      l1822 0BD8                      l1592 159C  
                    l1584 1594                      l1576 158C                      l1488 194A  
                    l2296 1872                      l1920 0D68                      l2384 10A0  
                    l1834 0BFC                      l1826 0BDC                      l1596 15A0  
                    l1588 1598                      l1928 0D9C                      l1944 0DBC  
                    l1864 0C38                      l1938 0DB2                      l1972 0E4A  
                    l1964 0E24                      l1892 0CCA                      l1876 0C92  
                    l1878 0C96                      l1798 0B90                      l1976 0E52  
                    l1978 0E54                      STR_1 0801                      STR_2 0806  
                    STR_3 080B                      STR_4 080E                      u1120 0CAE  
                    u1070 0C5A                      u1080 0C6A                      u1330 0E30  
                    u1250 0DC0                      u1090 0C6C                      u1270 0DD4  
                    u1440 089E                      _LATD 000F8C                      u1530 0AFC  
                    u1450 0A14                      u1540 0B1A                      u1620 14C4  
                    u1700 178A                      u1630 14F4                      u1455 0A0A  
                    u1490 0AA0                      u1635 14EA                      u1590 1668  
                    u1670 154A                      u1907 180E                      u1780 128C  
                    u1917 1842                      u1927 16B2                      u1937 16C0  
                    u1947 16CA                      u1867 105C                      u1957 16DE  
                    u1877 1718                      u1967 16EC                      u1887 1726  
                    u1977 16F6                      u1897 1736                      u1987 196A  
            __CFG_PWRT$ON 000000                      _main 103E                      btemp 0053  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
           ?_CURSOR_ONOFF 0001             __CFG_MCLRE$ON 000000              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002             ?_conviertemon 0009           __end_of_Tmr0ISR 18F2  
        __end_of_LEER_LCD 1708       __size_of_BORRAR_LCD 0008         calculon@blablabla 0030  
           __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000             ___fltol@sign1 0009  
         __end_of___fladd 0E70                     ?_main 0001           __end_of___awdiv 16A6  
         __end_of___flmul 0B64           __end_of___flsub 1800           __end_of___fltol 1572  
                   _T0CON 000FD5           ___awdiv@divisor 0003           __end_of___lwdiv 17BA  
                   i2l164 18E0           ___awdiv@counter 0005                     _TMR0H 000FD7  
                   _TMR0L 000FD6                     _PORTD 000F83       __size_of_LCD_CONFIG 0060  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISD 000F95  
                   _TRISE 000F96       __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004  
                   _resul 003B                     tablat 000FF5                     ttemp5 0054  
                   ttemp6 0057                     ttemp7 005B                     status 000FD8  
                   wtemp8 0054            ??_CURSOR_ONOFF 0004             _ADC_CONVERTIR 189A  
  conviertemon@contadoron 0009           __initialization 1974            ??_conviertemon 000B  
            __end_of_main 1194           _ESCRIBE_MENSAJE 1868                    ??_main 0032  
           __activetblptr 000002          ADC_CONVERTIR@num 0004              ??_ADC_CONFIG 0001  
                  _ADCON0 000FC2                    _ADCON1 000FC1                    _ADCON2 000FC0  
                  _ADRESH 000FC4                    _ADRESL 000FC3          ___awdiv@dividend 0001  
                  i2l1780 18EC                    i2l1768 18D6                    _INTCON 000FF2  
        __end_of_calculon 103E            ?_ADC_CONVERTIR 0001          __end_of___xxtofl 12D4  
               ??_Tmr0ISR 0001                 ??___fladd 0009        __end_of_ADC_CONFIG 1622  
                  ___wmul 18F2                 ??___awdiv 0005      __end_of_ENVIA_NIBBLE 1974  
               ??___flmul 0017                 ??___flsub 0030                 ??___fltol 0005  
                  _digdec 0049                    _digcen 004B                    _digdmi 004F  
                  _digmil 004D                    _diguni 0047                 ??___lwdiv 0005  
                  _cta_on 003F       __size_of_POS_CURSOR 0024                    clear_0 197A  
        ___awdiv@quotient 0007              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8              ??_BORRAR_LCD 0004  
    __size_of_CURSOR_HOME 0008              ___xxtofl@arg 000B              ___xxtofl@exp 000A  
            ___xxtofl@val 0001                 ?_LEER_LCD 0001                __accesstop 0060  
 __end_of__initialization 1980           __CFG_PBADEN$OFF 000000              ??_LCD_CONFIG 0004  
           ___rparam_used 000001              ??_ENVIA_CHAR 0002                ___fltol@f1 0001  
 __end_of_ESCRIBE_MENSAJE 189A            __pcstackCOMRAM 0001        __size_of_calculon2 00F2  
      __end_of_BORRAR_LCD 199E          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 1958  
      __end_of_LCD_CONFIG 1768        __end_of_ENVIA_CHAR 1834      __end_of_conviertemon 13C6  
         ??_ADC_CONVERTIR 0003                ??_LEER_LCD 0001          ENVIA_NIBBLE@dato 0001  
                 ?___wmul 0001                 ?_calculon 0030                 ?___xxtofl 0001  
       __end_of_calculon2 14B8              ??_POS_CURSOR 0005     __size_of_ENVIA_NIBBLE 001C  
                 _Tmr0ISR 0008                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0004                   ___fladd 0B64                   ___awdiv 1622  
                 ___flmul 0812                   ___flsub 17BA                   ___fltol 14B8  
         __size_of___wmul 0026                   ___lwdiv 1768              __psmallconst 0800  
   __end_of_ENVIA_LCD_CMD 1868                   __pcinit 1974        __end_of_POS_CURSOR 193C  
                 __ramtop 0800                   __ptext0 103E                   __ptext1 12D4  
                 __ptext2 13C6                   __ptext3 0E70                   __ptext4 1194  
                 __ptext5 18F2                   __ptext6 1768                   __ptext7 14B8  
                 __ptext8 17BA                   __ptext9 0B64                   _cta_off 003D  
                 _cta_lsb 0051                   _cta_msb 0052                ??_calculon 0032  
              ??___xxtofl 0005            __pintcode_body 18C6              _ENVIA_NIBBLE 1958  
    end_of_initialization 1980             __Lmediumconst 0000                   int_func 18C6  
              _pre_cta_on 0037                   postinc0 000FEE     __size_of_CURSOR_ONOFF 001C  
               _PORTEbits 000F84     __size_of_conviertemon 00F2               ___fladd@grs 0010  
           ___xxtofl@sign 0009                 _TRISEbits 000F96               ___flmul@grs 001C  
       __size_of_LEER_LCD 0062              _CURSOR_ONOFF 193C        CURSOR_ONOFF@estado 0004  
            _conviertemon 12D4            __end_of___wmul 1918             ??_CURSOR_HOME 0004  
     start_initialization 1974         ENVIA_LCD_CMD@dato 0002                  ??___wmul 0005  
               ___fladd@a 0005                 ___fladd@b 0001                 ___flmul@a 0013  
               ___flmul@b 000F               __pbssCOMRAM 0033                 ___flsub@a 002C  
               ___flsub@b 0028         __size_of_calculon 01CE         __size_of___xxtofl 0140  
     __end_of_CURSOR_HOME 1996                 _calculon2 13C6     __end_of_ADC_CONVERTIR 18C6  
                ?_Tmr0ISR 0001          ___lwdiv@dividend 0001                 __pintcode 0008  
                ?___fladd 0001                  ?___awdiv 0001                  ?___flmul 000F  
                ?___flsub 0028                  ?___fltol 0001                  ?___lwdiv 0001  
             __smallconst 0800          ___lwdiv@quotient 0005                  _LEER_LCD 16A6  
          ___wmul@product 0005                ?_calculon2 0001                  _LATDbits 000F8C  
                _LATEbits 000F8D                 _temporal2 0043                 _temporal3 0041  
        ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  __size_of_ESCRIBE_MENSAJE 0032  
              _ADCON0bits 000FC2         ___wmul@multiplier 0001               _CURSOR_HOME 198E  
              _ADC_CONFIG 1572    __size_of_ENVIA_LCD_CMD 0034                  __Hrparam 0000  
        __size_of_Tmr0ISR 18EA                  __Lrparam 0000          __size_of___fladd 030C  
        __size_of___awdiv 0084          __size_of___flmul 0352          __size_of___flsub 0046  
        __size_of___fltol 00BA          __size_of___lwdiv 0052                  _calculon 0E70  
                ___xxtofl 1194           ___lwdiv@divisor 0003           ___lwdiv@counter 0007  
                __ptext10 0812                  __ptext11 1622                  __ptext20 16A6  
                __ptext12 1918                  __ptext21 1958                  __ptext13 1708  
                __ptext22 189A                  __ptext14 1868                  __ptext23 1572  
                __ptext15 1800                  __ptext16 193C                  __ptext17 198E  
                __ptext18 1996                  __ptext19 1834                _BORRAR_LCD 1996  
             ??_calculon2 0009             __size_of_main 0156                _LCD_CONFIG 1708  
              _ENVIA_CHAR 1800                  _temporal 0045                  int$flags 0053  
           _ENVIA_LCD_CMD 1834     __CFG_CPUDIV$OSC1_PLL2 000000                _INTCONbits 000FF2  
             ?_ADC_CONFIG 0001         ??_ESCRIBE_MENSAJE 0007                  intlevel2 0000  
   ESCRIBE_MENSAJE@cadena 0004               _pre_cta_off 0033            ?_ENVIA_LCD_CMD 0001  
             ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001             ___fladd@signs 000D  
              _POS_CURSOR 1918              ___fladd@aexp 000E              ___fladd@bexp 000F  
             ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006               ?_ENVIA_CHAR 0001  
       POS_CURSOR@columna 0004  
